From: <Saved by Blink>
Subject: 500 Lines or Less | Optical Character Recognition (OCR)
Date: Tue, 11 Feb 2019 01:54:58 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--WtMIQ3AY6h6Gy9z4sTg6udpZx3WzfkPxVeadHQyMwV----"

------MultipartBoundary--WtMIQ3AY6h6Gy9z4sTg6udpZx3WzfkPxVeadHQyMwV----
Content-Type: text/html
Content-ID: <frame-60-e22af88d-25ee-43b6-b830-cc1e26643c49@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: http://aosabook.org/en/500L/optical-character-recognition-ocr.html

<!DOCTYPE html><html lang=3D"en"><head><meta http-equiv=3D"Content-Type" co=
ntent=3D"text/html; charset=3DUTF-8">
   =20
    <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=
=3D1.0">
    <meta name=3D"provenance" content=3D"$Id: index.html 1472 2012-09-21 22=
:17:41Z audrey $">
    <link rel=3D"stylesheet" href=3D"http://aosabook.org/en/500L/theme/css/=
bootstrap.css" type=3D"text/css">
    <link rel=3D"stylesheet" href=3D"http://aosabook.org/en/500L/theme/css/=
bootstrap-responsive.css" type=3D"text/css">
    <link rel=3D"stylesheet" href=3D"http://aosabook.org/en/500L/theme/css/=
code.css" type=3D"text/css">
    <link rel=3D"stylesheet" href=3D"http://aosabook.org/en/500L/theme/css/=
500L.css" type=3D"text/css">
    <title>500 Lines or Less | Optical Character Recognition (OCR)</title>
   =20
   =20
<style type=3D"text/css">.MathJax_Hover_Frame {border-radius: .25em; -webki=
t-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .2=
5em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; =
-moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; b=
order: 1px solid #A6D ! important; display: inline-block; position: absolut=
e}
.MathJax_Menu_Button .MathJax_Hover_Arrow {position: absolute; cursor: poin=
ter; display: inline-block; border: 2px solid #AAA; border-radius: 4px; -we=
bkit-border-radius: 4px; -moz-border-radius: 4px; -khtml-border-radius: 4px=
; font-family: 'Courier New',Courier; font-size: 9px; color: #F0F0F0}
.MathJax_Menu_Button .MathJax_Hover_Arrow span {display: block; background-=
color: #AAA; border: 1px solid; border-radius: 3px; line-height: 0; padding=
: 4px}
.MathJax_Hover_Arrow:hover {color: white!important; border: 2px solid #CCC!=
important}
.MathJax_Hover_Arrow:hover span {background-color: #CCC!important}
</style><style type=3D"text/css">#MathJax_About {position: fixed; left: 50%=
; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; ba=
ckground-color: #DDDDDD; color: black; cursor: default; font-family: messag=
e-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform:=
 none; line-height: normal; letter-spacing: normal; word-spacing: normal; w=
ord-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-ra=
dius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-b=
order-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: =
0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-s=
hadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dro=
pshadow(OffX=3D2, OffY=3D2, Color=3D'gray', Positive=3D'true')}
#MathJax_About.MathJax_MousePost {outline: none}
.MathJax_Menu {position: absolute; background-color: white; color: black; w=
idth: auto; padding: 2px; border: 1px solid #CCCCCC; margin: 0; cursor: def=
ault; font: menu; text-align: left; text-indent: 0; text-transform: none; l=
ine-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap=
: normal; white-space: nowrap; float: none; z-index: 201; box-shadow: 0px 1=
0px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shado=
w: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter:=
 progid:DXImageTransform.Microsoft.dropshadow(OffX=3D2, OffY=3D2, Color=3D'=
gray', Positive=3D'true')}
.MathJax_MenuItem {padding: 2px 2em; background: transparent}
.MathJax_MenuArrow {position: absolute; right: .5em; padding-top: .25em; co=
lor: #666666; font-size: .75em}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuArrow.RTL {left: .5em; right: auto}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuCheck.RTL {right: .7em; left: auto}
.MathJax_MenuRadioCheck {position: absolute; left: 1em}
.MathJax_MenuRadioCheck.RTL {right: 1em; left: auto}
.MathJax_MenuLabel {padding: 2px 2em 4px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #CCCCCC; margin: 4px 1px 0px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: Highlight; color: HighlightText}
.MathJax_MenuDisabled:focus, .MathJax_MenuLabel:focus {background-color: #E=
8E8E8}
.MathJax_ContextMenu:focus {outline: none}
.MathJax_ContextMenu .MathJax_MenuItem:focus {outline: none}
#MathJax_AboutClose {top: .2em; right: .2em}
.MathJax_Menu .MathJax_MenuClose {top: -10px; left: -10px}
.MathJax_MenuClose {position: absolute; cursor: pointer; display: inline-bl=
ock; border: 2px solid #AAA; border-radius: 18px; -webkit-border-radius: 18=
px; -moz-border-radius: 18px; -khtml-border-radius: 18px; font-family: 'Cou=
rier New',Courier; font-size: 24px; color: #F0F0F0}
.MathJax_MenuClose span {display: block; background-color: #AAA; border: 1.=
5px solid; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-ra=
dius: 18px; -khtml-border-radius: 18px; line-height: 0; padding: 8px 0 6px}
.MathJax_MenuClose:hover {color: white!important; border: 2px solid #CCC!im=
portant}
.MathJax_MenuClose:hover span {background-color: #CCC!important}
.MathJax_MenuClose:hover:focus {outline: none}
</style><style type=3D"text/css">.MathJax_Preview .MJXf-math {color: inheri=
t!important}
</style><style type=3D"text/css">.MJX_Assistive_MathML {position: absolute!=
important; top: 0; left: 0; clip: rect(1px, 1px, 1px, 1px); padding: 1px 0 =
0 0!important; border: 0!important; height: 1px!important; width: 1px!impor=
tant; overflow: hidden!important; display: block!important; -webkit-touch-c=
allout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-use=
r-select: none; -ms-user-select: none; user-select: none}
.MJX_Assistive_MathML.MJX_Assistive_MathML_Block {width: 100%!important}
</style><style type=3D"text/css">#MathJax_Zoom {position: absolute; backgro=
und-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: =
.5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: =
normal; text-align: left; text-indent: 0; text-transform: none; line-height=
: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; =
white-space: nowrap; float: none; -webkit-box-sizing: content-box; -moz-box=
-sizing: content-box; box-sizing: content-box; box-shadow: 5px 5px 15px #AA=
AAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15=
px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImage=
Transform.Microsoft.dropshadow(OffX=3D2, OffY=3D2, Color=3D'gray', Positive=
=3D'true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; di=
splay: inline-block; width: 100%; height: 100%; border: 0; padding: 0; marg=
in: 0; background-color: white; opacity: 0; filter: alpha(opacity=3D0)}
#MathJax_ZoomFrame {position: relative; display: inline-block; height: 0; w=
idth: 0}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; =
display: inline-block; border: 0; padding: 0; margin: 0; background-color: =
white; opacity: 0; filter: alpha(opacity=3D0)}
</style><style type=3D"text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1em; bottom: 1.5em; background-col=
or: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-in=
dex: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-ind=
ex: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style><style type=3D"text/css">.MJXp-script {font-size: .8em}
.MJXp-right {-webkit-transform-origin: right; -moz-transform-origin: right;=
 -ms-transform-origin: right; -o-transform-origin: right; transform-origin:=
 right}
.MJXp-bold {font-weight: bold}
.MJXp-italic {font-style: italic}
.MJXp-scr {font-family: MathJax_Script,'Times New Roman',Times,STIXGeneral,=
serif}
.MJXp-frak {font-family: MathJax_Fraktur,'Times New Roman',Times,STIXGenera=
l,serif}
.MJXp-sf {font-family: MathJax_SansSerif,'Times New Roman',Times,STIXGenera=
l,serif}
.MJXp-cal {font-family: MathJax_Caligraphic,'Times New Roman',Times,STIXGen=
eral,serif}
.MJXp-mono {font-family: MathJax_Typewriter,'Times New Roman',Times,STIXGen=
eral,serif}
.MJXp-largeop {font-size: 150%}
.MJXp-largeop.MJXp-int {vertical-align: -.2em}
.MJXp-math {display: inline-block; line-height: 1.2; text-indent: 0; font-f=
amily: 'Times New Roman',Times,STIXGeneral,serif; white-space: nowrap; bord=
er-collapse: collapse}
.MJXp-display {display: block; text-align: center; margin: 1em 0}
.MJXp-math span {display: inline-block}
.MJXp-box {display: block!important; text-align: center}
.MJXp-box:after {content: " "}
.MJXp-rule {display: block!important; margin-top: .1em}
.MJXp-char {display: block!important}
.MJXp-mo {margin: 0 .15em}
.MJXp-mfrac {margin: 0 .125em; vertical-align: .25em}
.MJXp-denom {display: inline-table!important; width: 100%}
.MJXp-denom > * {display: table-row!important}
.MJXp-surd {vertical-align: top}
.MJXp-surd > * {display: block!important}
.MJXp-script-box > *  {display: table!important; height: 50%}
.MJXp-script-box > * > * {display: table-cell!important; vertical-align: to=
p}
.MJXp-script-box > *:last-child > * {vertical-align: bottom}
.MJXp-script-box > * > * > * {display: block!important}
.MJXp-mphantom {visibility: hidden}
.MJXp-munderover {display: inline-table!important}
.MJXp-over {display: inline-block!important; text-align: center}
.MJXp-over > * {display: block!important}
.MJXp-munderover > * {display: table-row!important}
.MJXp-mtable {vertical-align: .25em; margin: 0 .125em}
.MJXp-mtable > * {display: inline-table!important; vertical-align: middle}
.MJXp-mtr {display: table-row!important}
.MJXp-mtd {display: table-cell!important; text-align: center; padding: .5em=
 0 0 .5em}
.MJXp-mtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-mlabeledtr {display: table-row!important}
.MJXp-mlabeledtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mlabeledtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-merror {background-color: #FFFF88; color: #CC0000; border: 1px solid =
#CC0000; padding: 1px 3px; font-style: normal; font-size: 90%}
.MJXp-scale0 {-webkit-transform: scaleX(.0); -moz-transform: scaleX(.0); -m=
s-transform: scaleX(.0); -o-transform: scaleX(.0); transform: scaleX(.0)}
.MJXp-scale1 {-webkit-transform: scaleX(.1); -moz-transform: scaleX(.1); -m=
s-transform: scaleX(.1); -o-transform: scaleX(.1); transform: scaleX(.1)}
.MJXp-scale2 {-webkit-transform: scaleX(.2); -moz-transform: scaleX(.2); -m=
s-transform: scaleX(.2); -o-transform: scaleX(.2); transform: scaleX(.2)}
.MJXp-scale3 {-webkit-transform: scaleX(.3); -moz-transform: scaleX(.3); -m=
s-transform: scaleX(.3); -o-transform: scaleX(.3); transform: scaleX(.3)}
.MJXp-scale4 {-webkit-transform: scaleX(.4); -moz-transform: scaleX(.4); -m=
s-transform: scaleX(.4); -o-transform: scaleX(.4); transform: scaleX(.4)}
.MJXp-scale5 {-webkit-transform: scaleX(.5); -moz-transform: scaleX(.5); -m=
s-transform: scaleX(.5); -o-transform: scaleX(.5); transform: scaleX(.5)}
.MJXp-scale6 {-webkit-transform: scaleX(.6); -moz-transform: scaleX(.6); -m=
s-transform: scaleX(.6); -o-transform: scaleX(.6); transform: scaleX(.6)}
.MJXp-scale7 {-webkit-transform: scaleX(.7); -moz-transform: scaleX(.7); -m=
s-transform: scaleX(.7); -o-transform: scaleX(.7); transform: scaleX(.7)}
.MJXp-scale8 {-webkit-transform: scaleX(.8); -moz-transform: scaleX(.8); -m=
s-transform: scaleX(.8); -o-transform: scaleX(.8); transform: scaleX(.8)}
.MJXp-scale9 {-webkit-transform: scaleX(.9); -moz-transform: scaleX(.9); -m=
s-transform: scaleX(.9); -o-transform: scaleX(.9); transform: scaleX(.9)}
.MathJax_PHTML .noError {vertical-align: ; font-size: 90%; text-align: left=
; color: black; padding: 1px 3px; border: 1px solid}
</style><style type=3D"text/css">.MathJax_Display {text-align: center; marg=
in: 1em 0em; position: relative; display: block!important; text-indent: 0; =
max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%=
}
.MathJax .merror {background-color: #FFFF88; color: #CC0000; border: 1px so=
lid #CC0000; padding: 1px 3px; font-style: normal; font-size: 90%}
.MathJax .MJX-monospace {font-family: monospace}
.MathJax .MJX-sans-serif {font-family: sans-serif}
#MathJax_Tooltip {background-color: InfoBackground; color: InfoText; border=
: 1px solid black; box-shadow: 2px 2px 5px #AAAAAA; -webkit-box-shadow: 2px=
 2px 5px #AAAAAA; -moz-box-shadow: 2px 2px 5px #AAAAAA; -khtml-box-shadow: =
2px 2px 5px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(O=
ffX=3D2, OffY=3D2, Color=3D'gray', Positive=3D'true'); padding: 3px 4px; z-=
index: 401; position: absolute; left: 0; top: 0; width: auto; height: auto;=
 display: none}
.MathJax {display: inline; font-style: normal; font-weight: normal; line-he=
ight: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text=
-align: left; text-transform: none; letter-spacing: normal; word-spacing: n=
ormal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr;=
 max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0;=
 padding: 0; margin: 0}
.MathJax:focus, body :focus .MathJax {display: inline-table}
.MathJax.MathJax_FullWidth {text-align: center; display: table-cell!importa=
nt; width: 10000em!important}
.MathJax img, .MathJax nobr, .MathJax a {border: 0; padding: 0; margin: 0; =
max-width: none; max-height: none; min-width: 0; min-height: 0; vertical-al=
ign: 0; line-height: normal; text-decoration: none}
img.MathJax_strut {border: 0!important; padding: 0!important; margin: 0!imp=
ortant; vertical-align: 0!important}
.MathJax span {display: inline; position: static; border: 0; padding: 0; ma=
rgin: 0; vertical-align: 0; line-height: normal; text-decoration: none}
.MathJax nobr {white-space: nowrap!important}
.MathJax img {display: inline!important; float: none!important}
.MathJax * {transition: none; -webkit-transition: none; -moz-transition: no=
ne; -ms-transition: none; -o-transition: none}
.MathJax_Processing {visibility: hidden; position: fixed; width: 0; height:=
 0; overflow: hidden}
.MathJax_Processed {display: none!important}
.MathJax_ExBox {display: block!important; overflow: hidden; width: 1px; hei=
ght: 60ex; min-height: 0; max-height: none}
.MathJax .MathJax_EmBox {display: block!important; overflow: hidden; width:=
 1px; height: 60em; min-height: 0; max-height: none}
.MathJax_LineBox {display: table!important}
.MathJax_LineBox span {display: table-cell!important; width: 10000em!import=
ant; min-width: 0; max-width: none; padding: 0; border: 0; margin: 0}
.MathJax .MathJax_HitBox {cursor: text; background: white; opacity: 0; filt=
er: alpha(opacity=3D0)}
.MathJax .MathJax_HitBox * {filter: none; opacity: 1; background: transpare=
nt}
#MathJax_Tooltip * {filter: none; opacity: 1; background: transparent}
@font-face {font-family: MathJax_Main; src: url('https://cdnjs.cloudflare.c=
om/ajax/libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/woff/MathJax_Main-Regular.wof=
f?V=3D2.7.1') format('woff'), url('https://cdnjs.cloudflare.com/ajax/libs/m=
athjax/2.7.1/fonts/HTML-CSS/TeX/otf/MathJax_Main-Regular.otf?V=3D2.7.1') fo=
rmat('opentype')}
@font-face {font-family: MathJax_Main-bold; src: url('https://cdnjs.cloudfl=
are.com/ajax/libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/woff/MathJax_Main-Bold.w=
off?V=3D2.7.1') format('woff'), url('https://cdnjs.cloudflare.com/ajax/libs=
/mathjax/2.7.1/fonts/HTML-CSS/TeX/otf/MathJax_Main-Bold.otf?V=3D2.7.1') for=
mat('opentype')}
@font-face {font-family: MathJax_Main-italic; src: url('https://cdnjs.cloud=
flare.com/ajax/libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/woff/MathJax_Main-Ital=
ic.woff?V=3D2.7.1') format('woff'), url('https://cdnjs.cloudflare.com/ajax/=
libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/otf/MathJax_Main-Italic.otf?V=3D2.7.1=
') format('opentype')}
@font-face {font-family: MathJax_Math-italic; src: url('https://cdnjs.cloud=
flare.com/ajax/libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/woff/MathJax_Math-Ital=
ic.woff?V=3D2.7.1') format('woff'), url('https://cdnjs.cloudflare.com/ajax/=
libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/otf/MathJax_Math-Italic.otf?V=3D2.7.1=
') format('opentype')}
@font-face {font-family: MathJax_Caligraphic; src: url('https://cdnjs.cloud=
flare.com/ajax/libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/woff/MathJax_Caligraph=
ic-Regular.woff?V=3D2.7.1') format('woff'), url('https://cdnjs.cloudflare.c=
om/ajax/libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/otf/MathJax_Caligraphic-Regul=
ar.otf?V=3D2.7.1') format('opentype')}
@font-face {font-family: MathJax_Size1; src: url('https://cdnjs.cloudflare.=
com/ajax/libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/woff/MathJax_Size1-Regular.w=
off?V=3D2.7.1') format('woff'), url('https://cdnjs.cloudflare.com/ajax/libs=
/mathjax/2.7.1/fonts/HTML-CSS/TeX/otf/MathJax_Size1-Regular.otf?V=3D2.7.1')=
 format('opentype')}
@font-face {font-family: MathJax_Size2; src: url('https://cdnjs.cloudflare.=
com/ajax/libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/woff/MathJax_Size2-Regular.w=
off?V=3D2.7.1') format('woff'), url('https://cdnjs.cloudflare.com/ajax/libs=
/mathjax/2.7.1/fonts/HTML-CSS/TeX/otf/MathJax_Size2-Regular.otf?V=3D2.7.1')=
 format('opentype')}
@font-face {font-family: MathJax_Size3; src: url('https://cdnjs.cloudflare.=
com/ajax/libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/woff/MathJax_Size3-Regular.w=
off?V=3D2.7.1') format('woff'), url('https://cdnjs.cloudflare.com/ajax/libs=
/mathjax/2.7.1/fonts/HTML-CSS/TeX/otf/MathJax_Size3-Regular.otf?V=3D2.7.1')=
 format('opentype')}
@font-face {font-family: MathJax_Size4; src: url('https://cdnjs.cloudflare.=
com/ajax/libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/woff/MathJax_Size4-Regular.w=
off?V=3D2.7.1') format('woff'), url('https://cdnjs.cloudflare.com/ajax/libs=
/mathjax/2.7.1/fonts/HTML-CSS/TeX/otf/MathJax_Size4-Regular.otf?V=3D2.7.1')=
 format('opentype')}
.MathJax .noError {vertical-align: ; font-size: 90%; text-align: left; colo=
r: black; padding: 1px 3px; border: 1px solid}
</style></head>
  <body><div style=3D"visibility: hidden; overflow: hidden; position: absol=
ute; top: 0px; height: 1px; width: auto; padding: 0px; border: 0px; margin:=
 0px; text-align: left; text-indent: 0px; text-transform: none; line-height=
: normal; letter-spacing: normal; word-spacing: normal;"><div id=3D"MathJax=
_Hidden"></div></div><div id=3D"MathJax_Message" style=3D"display: none;"><=
/div>
    <div class=3D"container">
      <div class=3D"row">
        <div class=3D"hero-unit">
	  <a class=3D"pull-right" href=3D"http://aosabook.org/en/index.html"></a>
          <h1>Optical Character Recognition (OCR)</h1>
          <h2 class=3D"author">Marina Samuel</h2>
          <blockquote class=3D"pull-right">
            </blockquote>

        </div>
      </div>
      <div class=3D"row">
        <div class=3D"span10 offset1" id=3D"content">
          <h2 id=3D"introduction">Introduction</h2>

<p>What if your computer could wash your dishes, do your laundry, cook you =
dinner, and clean your home? I think I can safely say that most people woul=
d be happy to get a helping hand! But what would it take for a computer to =
be able to perform these tasks in the same way that humans can?</p>

<p>The famous computer scientist Alan Turing proposed the Turing Test as a =
way to identify whether a machine could have intelligence indistinguishable=
 from that of a human being. The test involves a human posing questions to =
two hidden entities, one human, and the other a machine, and trying to iden=
tify which is which. If the interrogator is unable to identify the machine,=
 then the machine is considered to have human-level intelligence.</p>

<p>While there is a lot of controversy surrounding whether the Turing Test =
is a valid assessment of intelligence, and whether we can build such intell=
igent machines, there is no doubt that machines with some degree of intelli=
gence already exist. There is currently software that helps robots navigate=
 an office and perform small tasks, or help those suffering with Alzheimer'=
s. More common examples of Artificial Intelligence (A.I.) are the way that =
Google estimates what you=E2=80=99re looking for when you search for some k=
eywords, or the way that Facebook decides what to put in your news feed.</p=
>

<p>One well known application of A.I. is Optical Character Recognition (OCR=
). An OCR system is a piece of software that can take images of handwritten=
 characters as input and interpret them into machine readable text. While y=
ou may not think twice when depositing a handwritten cheque into a bank mac=
hine , there is some interesting work going on in the background. This chap=
ter will examine a working example of a simple OCR system that recognizes n=
umerical digits using an Artificial Neural Network (ANN). But first, let=E2=
=80=99s establish a bit more context.</p>

<h2 id=3D"what-is-artificial-intelligence">What is Artificial Intelligence?=
</h2>

<p><a name=3D"sec.ocr.ai">&nbsp;</a> While Turing=E2=80=99s definition of i=
ntelligence sounds reasonable, at the end of the day what constitutes intel=
ligence is fundamentally a philosophical debate. Computer scientists have, =
however, categorized certain types of systems and algorithms into branches =
of AI. Each branch is used to solve certain sets of problems. These branche=
s include the following examples, as well as <a href=3D"http://www-formal.s=
tanford.edu/jmc/whatisai/node2.html">many others</a>:</p>

<ul>
<li>Logical and probabilistic deduction and inference based on some predefi=
ned knowledge of a world. e.g. <a href=3D"http://www.cs.princeton.edu/cours=
es/archive/fall07/cos436/HIDDEN/Knapp/fuzzy004.htm">Fuzzy inference</a> can=
 help a thermostat decide when to turn on the air conditioning when it dete=
cts that the temperature is hot and the atmosphere is humid</li>
<li>Heuristic search. e.g. Searching can be used to find the best possible =
next move in a game of chess by searching all possible moves and choosing t=
he one that most improves your position</li>
<li>Machine learning (ML) with feedback models. e.g. Pattern-recognition pr=
oblems like OCR.</li>
</ul>

<p>In general, ML involves using large data sets to train a system to ident=
ify patterns. The training data sets may be labelled, meaning the system=E2=
=80=99s expected outputs are specified for given inputs, or unlabelled mean=
ing expected outputs are not specified. Algorithms that train systems with =
unlabelled data are called <em>unsupervised</em> algorithms and those that =
train with labelled data are called <em>supervised</em>. Many ML algorithms=
 and techniques exist for creating OCR systems, of which ANNs are one appro=
ach.</p>

<h2 id=3D"artificial-neural-networks">Artificial Neural Networks</h2>

<h3 id=3D"what-are-anns">What Are ANNs?</h3>

<p><a name=3D"sec.ocr.ann">&nbsp;</a> An ANN is a structure consisting of i=
nterconnected nodes that communicate with one another. The structure and it=
s functionality are inspired by neural networks found in a biological brain=
. <a href=3D"http://www.nbb.cornell.edu/neurobio/linster/BioNB420/hebb.pdf"=
>Hebbian Theory</a> explains how these networks can learn to identify patte=
rns by physically altering their structure and link strengths. Similarly, a=
 typical ANN (shown in <a href=3D"http://aosabook.org/en/500L/optical-chara=
cter-recognition-ocr.html#figure-15.1">Figure 15.1</a>) has connections bet=
ween nodes that have a weight which is updated as the network learns. The n=
odes labelled "+1" are called <em>biases</em>. The leftmost blue column of =
nodes are <em>input nodes</em>, the middle column contains <em>hidden nodes=
</em>, and the rightmost column contains <em>output nodes</em>. There may b=
e many columns of hidden nodes, known as <em>hidden layers</em>.</p>

<div class=3D"center figure">
<a name=3D"figure-15.1"></a><img src=3D"http://aosabook.org/en/500L/ocr-ima=
ges/ann.png" alt=3D"Figure 15.1 - An Artificial Neural Network" title=3D"Fi=
gure 15.1 - An Artificial Neural Network">
</div>

<p class=3D"center figcaption">
<small>Figure 15.1 - An Artificial Neural Network</small>
</p>

<p>The values inside all of the circular nodes in <a href=3D"http://aosaboo=
k.org/en/500L/optical-character-recognition-ocr.html#figure-15.1">Figure 15=
.1</a> represent the output of the node. If we call the output of the <span=
 class=3D"math"><span class=3D"MathJax_Preview" style=3D"color: inherit; di=
splay: none;"></span><span class=3D"MathJax" id=3D"MathJax-Element-1-Frame"=
 tabindex=3D"0" data-mathml=3D"<math xmlns=3D&quot;http://www.w3.org/1998/M=
ath/MathML&quot;><mi>n</mi></math>" role=3D"presentation" style=3D"position=
: relative;"><nobr aria-hidden=3D"true"><span class=3D"math" id=3D"MathJax-=
Span-1" style=3D"width: 0.708em; display: inline-block;"><span style=3D"dis=
play: inline-block; position: relative; width: 0.58em; height: 0px; font-si=
ze: 120%;"><span style=3D"position: absolute; clip: rect(1.542em 1000.58em =
2.375em -999.997em); top: -2.176em; left: 0em;"><span class=3D"mrow" id=3D"=
MathJax-Span-2"><span class=3D"mi" id=3D"MathJax-Span-3" style=3D"font-fami=
ly: MathJax_Math-italic;">n</span></span><span style=3D"display: inline-blo=
ck; width: 0px; height: 2.183em;"></span></span></span><span style=3D"displ=
ay: inline-block; overflow: hidden; vertical-align: -0.073em; border-left: =
0px solid; width: 0px; height: 0.696em;"></span></span></nobr><span class=
=3D"MJX_Assistive_MathML" role=3D"presentation"><math xmlns=3D"http://www.w=
3.org/1998/Math/MathML"><mi>n</mi></math></span></span></span>th node from =
the top in layer <span class=3D"math"><span class=3D"MathJax_Preview" style=
=3D"color: inherit; display: none;"></span><span class=3D"MathJax" id=3D"Ma=
thJax-Element-2-Frame" tabindex=3D"0" data-mathml=3D"<math xmlns=3D&quot;ht=
tp://www.w3.org/1998/Math/MathML&quot;><mi>L</mi></math>" role=3D"presentat=
ion" style=3D"position: relative;"><nobr aria-hidden=3D"true"><span class=
=3D"math" id=3D"MathJax-Span-4" style=3D"width: 0.901em; display: inline-bl=
ock;"><span style=3D"display: inline-block; position: relative; width: 0.70=
8em; height: 0px; font-size: 120%;"><span style=3D"position: absolute; clip=
: rect(1.285em 1000.64em 2.375em -999.997em); top: -2.176em; left: 0em;"><s=
pan class=3D"mrow" id=3D"MathJax-Span-5"><span class=3D"mi" id=3D"MathJax-S=
pan-6" style=3D"font-family: MathJax_Math-italic;">L</span></span><span sty=
le=3D"display: inline-block; width: 0px; height: 2.183em;"></span></span></=
span><span style=3D"display: inline-block; overflow: hidden; vertical-align=
: -0.073em; border-left: 0px solid; width: 0px; height: 1.004em;"></span></=
span></nobr><span class=3D"MJX_Assistive_MathML" role=3D"presentation"><mat=
h xmlns=3D"http://www.w3.org/1998/Math/MathML"><mi>L</mi></math></span></sp=
an></span> as a <span class=3D"math"><span class=3D"MathJax_Preview" style=
=3D"color: inherit; display: none;"></span><span class=3D"MathJax" id=3D"Ma=
thJax-Element-3-Frame" tabindex=3D"0" data-mathml=3D"<math xmlns=3D&quot;ht=
tp://www.w3.org/1998/Math/MathML&quot;><mi>n</mi><mo stretchy=3D&quot;false=
&quot;>(</mo><mi>L</mi><mo stretchy=3D&quot;false&quot;>)</mo></math>" role=
=3D"presentation" style=3D"position: relative;"><nobr aria-hidden=3D"true">=
<span class=3D"math" id=3D"MathJax-Span-7" style=3D"width: 2.503em; display=
: inline-block;"><span style=3D"display: inline-block; position: relative; =
width: 2.054em; height: 0px; font-size: 120%;"><span style=3D"position: abs=
olute; clip: rect(1.221em 1001.99em 2.631em -999.997em); top: -2.176em; lef=
t: 0em;"><span class=3D"mrow" id=3D"MathJax-Span-8"><span class=3D"mi" id=
=3D"MathJax-Span-9" style=3D"font-family: MathJax_Math-italic;">n</span><sp=
an class=3D"mo" id=3D"MathJax-Span-10" style=3D"font-family: MathJax_Main;"=
>(</span><span class=3D"mi" id=3D"MathJax-Span-11" style=3D"font-family: Ma=
thJax_Math-italic;">L</span><span class=3D"mo" id=3D"MathJax-Span-12" style=
=3D"font-family: MathJax_Main;">)</span></span><span style=3D"display: inli=
ne-block; width: 0px; height: 2.183em;"></span></span></span><span style=3D=
"display: inline-block; overflow: hidden; vertical-align: -0.381em; border-=
left: 0px solid; width: 0px; height: 1.388em;"></span></span></nobr><span c=
lass=3D"MJX_Assistive_MathML" role=3D"presentation"><math xmlns=3D"http://w=
ww.w3.org/1998/Math/MathML"><mi>n</mi><mo stretchy=3D"false">(</mo><mi>L</m=
i><mo stretchy=3D"false">)</mo></math></span></span></span> and the connect=
ion between the <span class=3D"math"><span class=3D"MathJax_Preview" style=
=3D"color: inherit; display: none;"></span><span class=3D"MathJax" id=3D"Ma=
thJax-Element-4-Frame" tabindex=3D"0" data-mathml=3D"<math xmlns=3D&quot;ht=
tp://www.w3.org/1998/Math/MathML&quot;><mi>i</mi></math>" role=3D"presentat=
ion" style=3D"position: relative;"><nobr aria-hidden=3D"true"><span class=
=3D"math" id=3D"MathJax-Span-13" style=3D"width: 0.388em; display: inline-b=
lock;"><span style=3D"display: inline-block; position: relative; width: 0.3=
24em; height: 0px; font-size: 120%;"><span style=3D"position: absolute; cli=
p: rect(1.349em 1000.26em 2.375em -999.997em); top: -2.176em; left: 0em;"><=
span class=3D"mrow" id=3D"MathJax-Span-14"><span class=3D"mi" id=3D"MathJax=
-Span-15" style=3D"font-family: MathJax_Math-italic;">i</span></span><span =
style=3D"display: inline-block; width: 0px; height: 2.183em;"></span></span=
></span><span style=3D"display: inline-block; overflow: hidden; vertical-al=
ign: -0.073em; border-left: 0px solid; width: 0px; height: 0.927em;"></span=
></span></nobr><span class=3D"MJX_Assistive_MathML" role=3D"presentation"><=
math xmlns=3D"http://www.w3.org/1998/Math/MathML"><mi>i</mi></math></span><=
/span></span>th node in layer <span class=3D"math"><span class=3D"MathJax_P=
review" style=3D"color: inherit; display: none;"></span><span class=3D"Math=
Jax" id=3D"MathJax-Element-5-Frame" tabindex=3D"0" data-mathml=3D"<math xml=
ns=3D&quot;http://www.w3.org/1998/Math/MathML&quot;><mi>L</mi></math>" role=
=3D"presentation" style=3D"position: relative;"><nobr aria-hidden=3D"true">=
<span class=3D"math" id=3D"MathJax-Span-16" style=3D"width: 0.901em; displa=
y: inline-block;"><span style=3D"display: inline-block; position: relative;=
 width: 0.708em; height: 0px; font-size: 120%;"><span style=3D"position: ab=
solute; clip: rect(1.285em 1000.64em 2.375em -999.997em); top: -2.176em; le=
ft: 0em;"><span class=3D"mrow" id=3D"MathJax-Span-17"><span class=3D"mi" id=
=3D"MathJax-Span-18" style=3D"font-family: MathJax_Math-italic;">L</span></=
span><span style=3D"display: inline-block; width: 0px; height: 2.183em;"></=
span></span></span><span style=3D"display: inline-block; overflow: hidden; =
vertical-align: -0.073em; border-left: 0px solid; width: 0px; height: 1.004=
em;"></span></span></nobr><span class=3D"MJX_Assistive_MathML" role=3D"pres=
entation"><math xmlns=3D"http://www.w3.org/1998/Math/MathML"><mi>L</mi></ma=
th></span></span></span> and the <span class=3D"math"><span class=3D"MathJa=
x_Preview" style=3D"color: inherit; display: none;"></span><span class=3D"M=
athJax" id=3D"MathJax-Element-6-Frame" tabindex=3D"0" data-mathml=3D"<math =
xmlns=3D&quot;http://www.w3.org/1998/Math/MathML&quot;><mi>j</mi></math>" r=
ole=3D"presentation" style=3D"position: relative;"><nobr aria-hidden=3D"tru=
e"><span class=3D"math" id=3D"MathJax-Span-19" style=3D"width: 0.516em; dis=
play: inline-block;"><span style=3D"display: inline-block; position: relati=
ve; width: 0.388em; height: 0px; font-size: 120%;"><span style=3D"position:=
 absolute; clip: rect(1.349em 1000.39em 2.567em -999.997em); top: -2.176em;=
 left: 0em;"><span class=3D"mrow" id=3D"MathJax-Span-20"><span class=3D"mi"=
 id=3D"MathJax-Span-21" style=3D"font-family: MathJax_Math-italic;">j</span=
></span><span style=3D"display: inline-block; width: 0px; height: 2.183em;"=
></span></span></span><span style=3D"display: inline-block; overflow: hidde=
n; vertical-align: -0.304em; border-left: 0px solid; width: 0px; height: 1.=
158em;"></span></span></nobr><span class=3D"MJX_Assistive_MathML" role=3D"p=
resentation"><math xmlns=3D"http://www.w3.org/1998/Math/MathML"><mi>j</mi><=
/math></span></span></span>th node in layer <span class=3D"math"><span clas=
s=3D"MathJax_Preview" style=3D"color: inherit; display: none;"></span><span=
 class=3D"MathJax" id=3D"MathJax-Element-7-Frame" tabindex=3D"0" data-mathm=
l=3D"<math xmlns=3D&quot;http://www.w3.org/1998/Math/MathML&quot;><mi>L</mi=
><mo>+</mo><mn>1</mn></math>" role=3D"presentation" style=3D"position: rela=
tive;"><nobr aria-hidden=3D"true"><span class=3D"math" id=3D"MathJax-Span-2=
2" style=3D"width: 2.888em; display: inline-block;"><span style=3D"display:=
 inline-block; position: relative; width: 2.375em; height: 0px; font-size: =
120%;"><span style=3D"position: absolute; clip: rect(1.285em 1002.31em 2.43=
9em -999.997em); top: -2.176em; left: 0em;"><span class=3D"mrow" id=3D"Math=
Jax-Span-23"><span class=3D"mi" id=3D"MathJax-Span-24" style=3D"font-family=
: MathJax_Math-italic;">L</span><span class=3D"mo" id=3D"MathJax-Span-25" s=
tyle=3D"font-family: MathJax_Main; padding-left: 0.196em;">+</span><span cl=
ass=3D"mn" id=3D"MathJax-Span-26" style=3D"font-family: MathJax_Main; paddi=
ng-left: 0.196em;">1</span></span><span style=3D"display: inline-block; wid=
th: 0px; height: 2.183em;"></span></span></span><span style=3D"display: inl=
ine-block; overflow: hidden; vertical-align: -0.15em; border-left: 0px soli=
d; width: 0px; height: 1.081em;"></span></span></nobr><span class=3D"MJX_As=
sistive_MathML" role=3D"presentation"><math xmlns=3D"http://www.w3.org/1998=
/Math/MathML"><mi>L</mi><mo>+</mo><mn>1</mn></math></span></span></span> as=
 <span class=3D"math"><span class=3D"MathJax_Preview" style=3D"color: inher=
it; display: none;"></span><span class=3D"MathJax" id=3D"MathJax-Element-8-=
Frame" tabindex=3D"0" data-mathml=3D"<math xmlns=3D&quot;http://www.w3.org/=
1998/Math/MathML&quot;><msubsup><mi>w</mi><mi>j</mi><mrow class=3D&quot;MJX=
-TeXAtom-ORD&quot;><mo stretchy=3D&quot;false&quot;>(</mo><mi>L</mi><mo str=
etchy=3D&quot;false&quot;>)</mo></mrow></msubsup><mi>i</mi></math>" role=3D=
"presentation" style=3D"position: relative;"><nobr aria-hidden=3D"true"><sp=
an class=3D"math" id=3D"MathJax-Span-27" style=3D"width: 2.567em; display: =
inline-block;"><span style=3D"display: inline-block; position: relative; wi=
dth: 2.119em; height: 0px; font-size: 120%;"><span style=3D"position: absol=
ute; clip: rect(0.965em 1002.05em 2.824em -999.997em); top: -2.176em; left:=
 0em;"><span class=3D"mrow" id=3D"MathJax-Span-28"><span class=3D"msubsup" =
id=3D"MathJax-Span-29"><span style=3D"display: inline-block; position: rela=
tive; width: 1.798em; height: 0px;"><span style=3D"position: absolute; clip=
: rect(3.337em 1000.71em 4.17em -999.997em); top: -3.971em; left: 0em;"><sp=
an class=3D"mi" id=3D"MathJax-Span-30" style=3D"font-family: MathJax_Math-i=
talic;">w</span><span style=3D"display: inline-block; width: 0px; height: 3=
.978em;"></span></span><span style=3D"position: absolute; clip: rect(3.272e=
m 1001.09em 4.362em -999.997em); top: -4.484em; left: 0.708em;"><span class=
=3D"texatom" id=3D"MathJax-Span-31"><span class=3D"mrow" id=3D"MathJax-Span=
-32"><span class=3D"mo" id=3D"MathJax-Span-33" style=3D"font-size: 70.7%; f=
ont-family: MathJax_Main;">(</span><span class=3D"mi" id=3D"MathJax-Span-34=
" style=3D"font-size: 70.7%; font-family: MathJax_Math-italic;">L</span><sp=
an class=3D"mo" id=3D"MathJax-Span-35" style=3D"font-size: 70.7%; font-fami=
ly: MathJax_Main;">)</span></span></span><span style=3D"display: inline-blo=
ck; width: 0px; height: 3.978em;"></span></span><span style=3D"position: ab=
solute; clip: rect(3.337em 1000.39em 4.298em -999.997em); top: -3.651em; le=
ft: 0.708em;"><span class=3D"mi" id=3D"MathJax-Span-36" style=3D"font-size:=
 70.7%; font-family: MathJax_Math-italic;">j</span><span style=3D"display: =
inline-block; width: 0px; height: 3.978em;"></span></span></span></span><sp=
an class=3D"mi" id=3D"MathJax-Span-37" style=3D"font-family: MathJax_Math-i=
talic;">i</span></span><span style=3D"display: inline-block; width: 0px; he=
ight: 2.183em;"></span></span></span><span style=3D"display: inline-block; =
overflow: hidden; vertical-align: -0.612em; border-left: 0px solid; width: =
0px; height: 1.927em;"></span></span></nobr><span class=3D"MJX_Assistive_Ma=
thML" role=3D"presentation"><math xmlns=3D"http://www.w3.org/1998/Math/Math=
ML"><msubsup><mi>w</mi><mi>j</mi><mrow class=3D"MJX-TeXAtom-ORD"><mo stretc=
hy=3D"false">(</mo><mi>L</mi><mo stretchy=3D"false">)</mo></mrow></msubsup>=
<mi>i</mi></math></span></span></span>, then the output of node <span class=
=3D"math"><span class=3D"MathJax_Preview" style=3D"color: inherit; display:=
 none;"></span><span class=3D"MathJax" id=3D"MathJax-Element-9-Frame" tabin=
dex=3D"0" data-mathml=3D"<math xmlns=3D&quot;http://www.w3.org/1998/Math/Ma=
thML&quot;><msubsup><mi>a</mi><mn>2</mn><mrow class=3D&quot;MJX-TeXAtom-ORD=
&quot;><mo stretchy=3D&quot;false&quot;>(</mo><mn>2</mn><mo stretchy=3D&quo=
t;false&quot;>)</mo></mrow></msubsup></math>" role=3D"presentation" style=
=3D"position: relative;"><nobr aria-hidden=3D"true"><span class=3D"math" id=
=3D"MathJax-Span-38" style=3D"width: 1.862em; display: inline-block;"><span=
 style=3D"display: inline-block; position: relative; width: 1.542em; height=
: 0px; font-size: 120%;"><span style=3D"position: absolute; clip: rect(0.96=
5em 1001.54em 2.696em -999.997em); top: -2.176em; left: 0em;"><span class=
=3D"mrow" id=3D"MathJax-Span-39"><span class=3D"msubsup" id=3D"MathJax-Span=
-40"><span style=3D"display: inline-block; position: relative; width: 1.542=
em; height: 0px;"><span style=3D"position: absolute; clip: rect(3.337em 100=
0.52em 4.17em -999.997em); top: -3.971em; left: 0em;"><span class=3D"mi" id=
=3D"MathJax-Span-41" style=3D"font-family: MathJax_Math-italic;">a</span><s=
pan style=3D"display: inline-block; width: 0px; height: 3.978em;"></span></=
span><span style=3D"position: absolute; clip: rect(3.272em 1000.97em 4.362e=
m -999.997em); top: -4.484em; left: 0.516em;"><span class=3D"texatom" id=3D=
"MathJax-Span-42"><span class=3D"mrow" id=3D"MathJax-Span-43"><span class=
=3D"mo" id=3D"MathJax-Span-44" style=3D"font-size: 70.7%; font-family: Math=
Jax_Main;">(</span><span class=3D"mn" id=3D"MathJax-Span-45" style=3D"font-=
size: 70.7%; font-family: MathJax_Main;">2</span><span class=3D"mo" id=3D"M=
athJax-Span-46" style=3D"font-size: 70.7%; font-family: MathJax_Main;">)</s=
pan></span></span><span style=3D"display: inline-block; width: 0px; height:=
 3.978em;"></span></span><span style=3D"position: absolute; clip: rect(3.33=
7em 1000.45em 4.17em -999.997em); top: -3.651em; left: 0.516em;"><span clas=
s=3D"mn" id=3D"MathJax-Span-47" style=3D"font-size: 70.7%; font-family: Mat=
hJax_Main;">2</span><span style=3D"display: inline-block; width: 0px; heigh=
t: 3.978em;"></span></span></span></span></span><span style=3D"display: inl=
ine-block; width: 0px; height: 2.183em;"></span></span></span><span style=
=3D"display: inline-block; overflow: hidden; vertical-align: -0.458em; bord=
er-left: 0px solid; width: 0px; height: 1.773em;"></span></span></nobr><spa=
n class=3D"MJX_Assistive_MathML" role=3D"presentation"><math xmlns=3D"http:=
//www.w3.org/1998/Math/MathML"><msubsup><mi>a</mi><mn>2</mn><mrow class=3D"=
MJX-TeXAtom-ORD"><mo stretchy=3D"false">(</mo><mn>2</mn><mo stretchy=3D"fal=
se">)</mo></mrow></msubsup></math></span></span></span> is:</p>

<p><span class=3D"math"><span class=3D"MathJax_Preview" style=3D"color: inh=
erit; display: none;"></span><div class=3D"MathJax_Display" style=3D"text-a=
lign: center;"><span class=3D"MathJax" id=3D"MathJax-Element-10-Frame" tabi=
ndex=3D"0" style=3D"text-align: center; position: relative;" data-mathml=3D=
"<math xmlns=3D&quot;http://www.w3.org/1998/Math/MathML&quot; display=3D&qu=
ot;block&quot;><msubsup><mi>a</mi><mn>2</mn><mrow class=3D&quot;MJX-TeXAtom=
-ORD&quot;><mo stretchy=3D&quot;false&quot;>(</mo><mn>2</mn><mo stretchy=3D=
&quot;false&quot;>)</mo></mrow></msubsup><mo>=3D</mo><mi>f</mi><mo stretchy=
=3D&quot;false&quot;>(</mo><msubsup><mi>w</mi><mrow class=3D&quot;MJX-TeXAt=
om-ORD&quot;><mn>21</mn></mrow><mrow class=3D&quot;MJX-TeXAtom-ORD&quot;><m=
o stretchy=3D&quot;false&quot;>(</mo><mn>1</mn><mo stretchy=3D&quot;false&q=
uot;>)</mo></mrow></msubsup><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msu=
bsup><mi>w</mi><mrow class=3D&quot;MJX-TeXAtom-ORD&quot;><mn>22</mn></mrow>=
<mrow class=3D&quot;MJX-TeXAtom-ORD&quot;><mo stretchy=3D&quot;false&quot;>=
(</mo><mn>1</mn><mo stretchy=3D&quot;false&quot;>)</mo></mrow></msubsup><ms=
ub><mi>x</mi><mn>2</mn></msub><mo>+</mo><msubsup><mi>b</mi><mrow class=3D&q=
uot;MJX-TeXAtom-ORD&quot;><mn>2</mn></mrow><mrow class=3D&quot;MJX-TeXAtom-=
ORD&quot;><mo stretchy=3D&quot;false&quot;>(</mo><mn>1</mn><mo stretchy=3D&=
quot;false&quot;>)</mo></mrow></msubsup><mo stretchy=3D&quot;false&quot;>)<=
/mo></math>" role=3D"presentation"><nobr aria-hidden=3D"true"><span class=
=3D"math" id=3D"MathJax-Span-48" style=3D"width: 15.965em; display: inline-=
block;"><span style=3D"display: inline-block; position: relative; width: 13=
.272em; height: 0px; font-size: 120%;"><span style=3D"position: absolute; c=
lip: rect(0.965em 1013.21em 2.696em -999.997em); top: -2.176em; left: 0em;"=
><span class=3D"mrow" id=3D"MathJax-Span-49"><span class=3D"msubsup" id=3D"=
MathJax-Span-50"><span style=3D"display: inline-block; position: relative; =
width: 1.542em; height: 0px;"><span style=3D"position: absolute; clip: rect=
(3.337em 1000.52em 4.17em -999.997em); top: -3.971em; left: 0em;"><span cla=
ss=3D"mi" id=3D"MathJax-Span-51" style=3D"font-family: MathJax_Math-italic;=
">a</span><span style=3D"display: inline-block; width: 0px; height: 3.978em=
;"></span></span><span style=3D"position: absolute; clip: rect(3.272em 1000=
.97em 4.362em -999.997em); top: -4.484em; left: 0.516em;"><span class=3D"te=
xatom" id=3D"MathJax-Span-52"><span class=3D"mrow" id=3D"MathJax-Span-53"><=
span class=3D"mo" id=3D"MathJax-Span-54" style=3D"font-size: 70.7%; font-fa=
mily: MathJax_Main;">(</span><span class=3D"mn" id=3D"MathJax-Span-55" styl=
e=3D"font-size: 70.7%; font-family: MathJax_Main;">2</span><span class=3D"m=
o" id=3D"MathJax-Span-56" style=3D"font-size: 70.7%; font-family: MathJax_M=
ain;">)</span></span></span><span style=3D"display: inline-block; width: 0p=
x; height: 3.978em;"></span></span><span style=3D"position: absolute; clip:=
 rect(3.337em 1000.45em 4.17em -999.997em); top: -3.651em; left: 0.516em;">=
<span class=3D"mn" id=3D"MathJax-Span-57" style=3D"font-size: 70.7%; font-f=
amily: MathJax_Main;">2</span><span style=3D"display: inline-block; width: =
0px; height: 3.978em;"></span></span></span></span><span class=3D"mo" id=3D=
"MathJax-Span-58" style=3D"font-family: MathJax_Main; padding-left: 0.26em;=
">=3D</span><span class=3D"mi" id=3D"MathJax-Span-59" style=3D"font-family:=
 MathJax_Math-italic; padding-left: 0.26em;">f<span style=3D"display: inlin=
e-block; overflow: hidden; height: 1px; width: 0.067em;"></span></span><spa=
n class=3D"mo" id=3D"MathJax-Span-60" style=3D"font-family: MathJax_Main;">=
(</span><span class=3D"msubsup" id=3D"MathJax-Span-61"><span style=3D"displ=
ay: inline-block; position: relative; width: 1.67em; height: 0px;"><span st=
yle=3D"position: absolute; clip: rect(3.337em 1000.71em 4.17em -999.997em);=
 top: -3.971em; left: 0em;"><span class=3D"mi" id=3D"MathJax-Span-62" style=
=3D"font-family: MathJax_Math-italic;">w</span><span style=3D"display: inli=
ne-block; width: 0px; height: 3.978em;"></span></span><span style=3D"positi=
on: absolute; clip: rect(3.272em 1000.97em 4.362em -999.997em); top: -4.484=
em; left: 0.708em;"><span class=3D"texatom" id=3D"MathJax-Span-63"><span cl=
ass=3D"mrow" id=3D"MathJax-Span-64"><span class=3D"mo" id=3D"MathJax-Span-6=
5" style=3D"font-size: 70.7%; font-family: MathJax_Main;">(</span><span cla=
ss=3D"mn" id=3D"MathJax-Span-66" style=3D"font-size: 70.7%; font-family: Ma=
thJax_Main;">1</span><span class=3D"mo" id=3D"MathJax-Span-67" style=3D"fon=
t-size: 70.7%; font-family: MathJax_Main;">)</span></span></span><span styl=
e=3D"display: inline-block; width: 0px; height: 3.978em;"></span></span><sp=
an style=3D"position: absolute; clip: rect(3.337em 1000.77em 4.17em -999.99=
7em); top: -3.651em; left: 0.708em;"><span class=3D"texatom" id=3D"MathJax-=
Span-68"><span class=3D"mrow" id=3D"MathJax-Span-69"><span class=3D"mn" id=
=3D"MathJax-Span-70" style=3D"font-size: 70.7%; font-family: MathJax_Main;"=
>21</span></span></span><span style=3D"display: inline-block; width: 0px; h=
eight: 3.978em;"></span></span></span></span><span class=3D"msubsup" id=3D"=
MathJax-Span-71"><span style=3D"display: inline-block; position: relative; =
width: 1.029em; height: 0px;"><span style=3D"position: absolute; clip: rect=
(3.337em 1000.52em 4.17em -999.997em); top: -3.971em; left: 0em;"><span cla=
ss=3D"mi" id=3D"MathJax-Span-72" style=3D"font-family: MathJax_Math-italic;=
">x</span><span style=3D"display: inline-block; width: 0px; height: 3.978em=
;"></span></span><span style=3D"position: absolute; top: -3.843em; left: 0.=
58em;"><span class=3D"mn" id=3D"MathJax-Span-73" style=3D"font-size: 70.7%;=
 font-family: MathJax_Main;">1</span><span style=3D"display: inline-block; =
width: 0px; height: 3.978em;"></span></span></span></span><span class=3D"mo=
" id=3D"MathJax-Span-74" style=3D"font-family: MathJax_Main; padding-left: =
0.196em;">+</span><span class=3D"msubsup" id=3D"MathJax-Span-75" style=3D"p=
adding-left: 0.196em;"><span style=3D"display: inline-block; position: rela=
tive; width: 1.67em; height: 0px;"><span style=3D"position: absolute; clip:=
 rect(3.337em 1000.71em 4.17em -999.997em); top: -3.971em; left: 0em;"><spa=
n class=3D"mi" id=3D"MathJax-Span-76" style=3D"font-family: MathJax_Math-it=
alic;">w</span><span style=3D"display: inline-block; width: 0px; height: 3.=
978em;"></span></span><span style=3D"position: absolute; clip: rect(3.272em=
 1000.97em 4.362em -999.997em); top: -4.484em; left: 0.708em;"><span class=
=3D"texatom" id=3D"MathJax-Span-77"><span class=3D"mrow" id=3D"MathJax-Span=
-78"><span class=3D"mo" id=3D"MathJax-Span-79" style=3D"font-size: 70.7%; f=
ont-family: MathJax_Main;">(</span><span class=3D"mn" id=3D"MathJax-Span-80=
" style=3D"font-size: 70.7%; font-family: MathJax_Main;">1</span><span clas=
s=3D"mo" id=3D"MathJax-Span-81" style=3D"font-size: 70.7%; font-family: Mat=
hJax_Main;">)</span></span></span><span style=3D"display: inline-block; wid=
th: 0px; height: 3.978em;"></span></span><span style=3D"position: absolute;=
 clip: rect(3.337em 1000.77em 4.17em -999.997em); top: -3.651em; left: 0.70=
8em;"><span class=3D"texatom" id=3D"MathJax-Span-82"><span class=3D"mrow" i=
d=3D"MathJax-Span-83"><span class=3D"mn" id=3D"MathJax-Span-84" style=3D"fo=
nt-size: 70.7%; font-family: MathJax_Main;">22</span></span></span><span st=
yle=3D"display: inline-block; width: 0px; height: 3.978em;"></span></span><=
/span></span><span class=3D"msubsup" id=3D"MathJax-Span-85"><span style=3D"=
display: inline-block; position: relative; width: 1.029em; height: 0px;"><s=
pan style=3D"position: absolute; clip: rect(3.337em 1000.52em 4.17em -999.9=
97em); top: -3.971em; left: 0em;"><span class=3D"mi" id=3D"MathJax-Span-86"=
 style=3D"font-family: MathJax_Math-italic;">x</span><span style=3D"display=
: inline-block; width: 0px; height: 3.978em;"></span></span><span style=3D"=
position: absolute; top: -3.843em; left: 0.58em;"><span class=3D"mn" id=3D"=
MathJax-Span-87" style=3D"font-size: 70.7%; font-family: MathJax_Main;">2</=
span><span style=3D"display: inline-block; width: 0px; height: 3.978em;"></=
span></span></span></span><span class=3D"mo" id=3D"MathJax-Span-88" style=
=3D"font-family: MathJax_Main; padding-left: 0.196em;">+</span><span class=
=3D"msubsup" id=3D"MathJax-Span-89" style=3D"padding-left: 0.196em;"><span =
style=3D"display: inline-block; position: relative; width: 1.413em; height:=
 0px;"><span style=3D"position: absolute; clip: rect(3.08em 1000.45em 4.17e=
m -999.997em); top: -3.971em; left: 0em;"><span class=3D"mi" id=3D"MathJax-=
Span-90" style=3D"font-family: MathJax_Math-italic;">b</span><span style=3D=
"display: inline-block; width: 0px; height: 3.978em;"></span></span><span s=
tyle=3D"position: absolute; clip: rect(3.272em 1000.97em 4.362em -999.997em=
); top: -4.484em; left: 0.452em;"><span class=3D"texatom" id=3D"MathJax-Spa=
n-91"><span class=3D"mrow" id=3D"MathJax-Span-92"><span class=3D"mo" id=3D"=
MathJax-Span-93" style=3D"font-size: 70.7%; font-family: MathJax_Main;">(</=
span><span class=3D"mn" id=3D"MathJax-Span-94" style=3D"font-size: 70.7%; f=
ont-family: MathJax_Main;">1</span><span class=3D"mo" id=3D"MathJax-Span-95=
" style=3D"font-size: 70.7%; font-family: MathJax_Main;">)</span></span></s=
pan><span style=3D"display: inline-block; width: 0px; height: 3.978em;"></s=
pan></span><span style=3D"position: absolute; clip: rect(3.337em 1000.45em =
4.17em -999.997em); top: -3.651em; left: 0.452em;"><span class=3D"texatom" =
id=3D"MathJax-Span-96"><span class=3D"mrow" id=3D"MathJax-Span-97"><span cl=
ass=3D"mn" id=3D"MathJax-Span-98" style=3D"font-size: 70.7%; font-family: M=
athJax_Main;">2</span></span></span><span style=3D"display: inline-block; w=
idth: 0px; height: 3.978em;"></span></span></span></span><span class=3D"mo"=
 id=3D"MathJax-Span-99" style=3D"font-family: MathJax_Main;">)</span></span=
><span style=3D"display: inline-block; width: 0px; height: 2.183em;"></span=
></span></span><span style=3D"display: inline-block; overflow: hidden; vert=
ical-align: -0.458em; border-left: 0px solid; width: 0px; height: 1.773em;"=
></span></span></nobr><span class=3D"MJX_Assistive_MathML MJX_Assistive_Mat=
hML_Block" role=3D"presentation"><math xmlns=3D"http://www.w3.org/1998/Math=
/MathML" display=3D"block"><msubsup><mi>a</mi><mn>2</mn><mrow class=3D"MJX-=
TeXAtom-ORD"><mo stretchy=3D"false">(</mo><mn>2</mn><mo stretchy=3D"false">=
)</mo></mrow></msubsup><mo>=3D</mo><mi>f</mi><mo stretchy=3D"false">(</mo><=
msubsup><mi>w</mi><mrow class=3D"MJX-TeXAtom-ORD"><mn>21</mn></mrow><mrow c=
lass=3D"MJX-TeXAtom-ORD"><mo stretchy=3D"false">(</mo><mn>1</mn><mo stretch=
y=3D"false">)</mo></mrow></msubsup><msub><mi>x</mi><mn>1</mn></msub><mo>+</=
mo><msubsup><mi>w</mi><mrow class=3D"MJX-TeXAtom-ORD"><mn>22</mn></mrow><mr=
ow class=3D"MJX-TeXAtom-ORD"><mo stretchy=3D"false">(</mo><mn>1</mn><mo str=
etchy=3D"false">)</mo></mrow></msubsup><msub><mi>x</mi><mn>2</mn></msub><mo=
>+</mo><msubsup><mi>b</mi><mrow class=3D"MJX-TeXAtom-ORD"><mn>2</mn></mrow>=
<mrow class=3D"MJX-TeXAtom-ORD"><mo stretchy=3D"false">(</mo><mn>1</mn><mo =
stretchy=3D"false">)</mo></mrow></msubsup><mo stretchy=3D"false">)</mo></ma=
th></span></span></div></span></p>

<p>where <span class=3D"math"><span class=3D"MathJax_Preview" style=3D"colo=
r: inherit; display: none;"></span><span class=3D"MathJax" id=3D"MathJax-El=
ement-11-Frame" tabindex=3D"0" data-mathml=3D"<math xmlns=3D&quot;http://ww=
w.w3.org/1998/Math/MathML&quot;><mi>f</mi><mo stretchy=3D&quot;false&quot;>=
(</mo><mo>.</mo><mo stretchy=3D&quot;false&quot;>)</mo></math>" role=3D"pre=
sentation" style=3D"position: relative;"><nobr aria-hidden=3D"true"><span c=
lass=3D"math" id=3D"MathJax-Span-100" style=3D"width: 2.183em; display: inl=
ine-block;"><span style=3D"display: inline-block; position: relative; width=
: 1.798em; height: 0px; font-size: 120%;"><span style=3D"position: absolute=
; clip: rect(1.221em 1001.73em 2.631em -999.997em); top: -2.176em; left: 0e=
m;"><span class=3D"mrow" id=3D"MathJax-Span-101"><span class=3D"mi" id=3D"M=
athJax-Span-102" style=3D"font-family: MathJax_Math-italic;">f<span style=
=3D"display: inline-block; overflow: hidden; height: 1px; width: 0.067em;">=
</span></span><span class=3D"mo" id=3D"MathJax-Span-103" style=3D"font-fami=
ly: MathJax_Main;">(</span><span class=3D"mo" id=3D"MathJax-Span-104" style=
=3D"font-family: MathJax_Main;">.</span><span class=3D"mo" id=3D"MathJax-Sp=
an-105" style=3D"font-family: MathJax_Main; padding-left: 0.196em;">)</span=
></span><span style=3D"display: inline-block; width: 0px; height: 2.183em;"=
></span></span></span><span style=3D"display: inline-block; overflow: hidde=
n; vertical-align: -0.381em; border-left: 0px solid; width: 0px; height: 1.=
388em;"></span></span></nobr><span class=3D"MJX_Assistive_MathML" role=3D"p=
resentation"><math xmlns=3D"http://www.w3.org/1998/Math/MathML"><mi>f</mi><=
mo stretchy=3D"false">(</mo><mo>.</mo><mo stretchy=3D"false">)</mo></math><=
/span></span></span> is known as the <em>activation function</em> and <span=
 class=3D"math"><span class=3D"MathJax_Preview" style=3D"color: inherit; di=
splay: none;"></span><span class=3D"MathJax" id=3D"MathJax-Element-12-Frame=
" tabindex=3D"0" data-mathml=3D"<math xmlns=3D&quot;http://www.w3.org/1998/=
Math/MathML&quot;><mi>b</mi></math>" role=3D"presentation" style=3D"positio=
n: relative;"><nobr aria-hidden=3D"true"><span class=3D"math" id=3D"MathJax=
-Span-106" style=3D"width: 0.58em; display: inline-block;"><span style=3D"d=
isplay: inline-block; position: relative; width: 0.452em; height: 0px; font=
-size: 120%;"><span style=3D"position: absolute; clip: rect(1.285em 1000.45=
em 2.375em -999.997em); top: -2.176em; left: 0em;"><span class=3D"mrow" id=
=3D"MathJax-Span-107"><span class=3D"mi" id=3D"MathJax-Span-108" style=3D"f=
ont-family: MathJax_Math-italic;">b</span></span><span style=3D"display: in=
line-block; width: 0px; height: 2.183em;"></span></span></span><span style=
=3D"display: inline-block; overflow: hidden; vertical-align: -0.073em; bord=
er-left: 0px solid; width: 0px; height: 1.004em;"></span></span></nobr><spa=
n class=3D"MJX_Assistive_MathML" role=3D"presentation"><math xmlns=3D"http:=
//www.w3.org/1998/Math/MathML"><mi>b</mi></math></span></span></span> is th=
e <em>bias</em>. An activation function is the decision-maker for what type=
 of output a node has. A bias is an additional node with a fixed output of =
1 that may be added to an ANN to improve its accuracy. We=E2=80=99ll see mo=
re details on both of these in <a href=3D"http://aosabook.org/en/500L/optic=
al-character-recognition-ocr.html#sec.ocr.feedforward">Designing a Feedforw=
ard ANN (<code>neural_network_design.py</code>)</a>.</p>

<p>This type of network topology is called a <em>feedforward</em> neural ne=
twork because there are no cycles in the network. ANNs with nodes whose out=
puts feed into their inputs are called recurrent neural networks. There are=
 many algorithms that can be applied to train feedforward ANNs; one commonl=
y used algorithm is called <em>backpropagation</em>. The OCR system we will=
 implement in this chapter will use backpropagation.</p>

<h3 id=3D"how-do-we-use-anns">How Do We Use ANNs?</h3>

<p>Like most other ML approaches, the first step for using backpropagation =
is to decide how to transform or reduce our problem into one that can be so=
lved by an ANN. In other words, how can we manipulate our input data so we =
can feed it into the ANN? For the case of our OCR system, we can use the po=
sitions of the pixels for a given digit as input. It is worth noting that, =
often times, choosing the input data format is not this simple. If we were =
analyzing large images to identify shapes in them, for instance, we may nee=
d to pre-process the image to identify contours within it. These contours w=
ould be the input.</p>

<p>Once we=E2=80=99ve decided on our input data format, what=E2=80=99s next=
? Since backpropagation is a supervised algorithm, it will need to be train=
ed with labelled data, as mentioned in <a href=3D"http://aosabook.org/en/50=
0L/optical-character-recognition-ocr.html#sec.ocr.ai">What is Artificial In=
telligence?</a>. Thus, when passing the pixel positions as training input, =
we must also pass the associated digit. This means that we must find or gat=
her a large data set of drawn digits and associated values.</p>

<p>The next step is to partition the data set into a training set and valid=
ation set. The training data is used to run the backpropagation algorithm t=
o set the weights of the ANN. The validation data is used to make predictio=
ns using the trained network and compute its accuracy. If we were comparing=
 the performance of backpropagation vs. another algorithm on our data, we w=
ould <a href=3D"http://www-group.slac.stanford.edu/sluo/Lectures/stat_lectu=
re_files/sluo2006lec7.pdf">split the data</a> into 50% for training, 25% fo=
r comparing performance of the 2 algorithms (validation set) and the final =
25% for testing accuracy of the chosen algorithm (test set). Since we=E2=80=
=99re not comparing algorithms, we can group one of the 25% sets as part of=
 the training set and use 75% of the data to train the network and 25% for =
validating that it was trained well.</p>

<p>The purpose of identifying the accuracy of the ANN is two-fold. First, i=
t is to avoid the problem of <em>overfitting</em>. Overfitting occurs when =
the network has a much higher accuracy on predicting the training set than =
the validation set. Overfitting tells us that the chosen training data does=
 not generalize well enough and needs to be refined. Secondly, testing the =
accuracy of several different numbers of hidden layers and hidden nodes hel=
ps in designing the most optimal ANN size. An optimal ANN size will have en=
ough hidden nodes and layers to make accurate predictions but also as few n=
odes/connections as possible to reduce computational overhead that may slow=
 down training and predictions. Once the optimal size has been decided and =
the network has been trained, it=E2=80=99s ready to make predictions!</p>

<h2 id=3D"design-decisions-in-a-simple-ocr-system">Design Decisions in a Si=
mple OCR System</h2>

<p><a name=3D"sec.ocr.decisions">&nbsp;</a> In the last few paragraphs we=
=E2=80=99ve gone over some of the basics of feedforward ANNs and how to use=
 them. Now it=E2=80=99s time to talk about how we can build an OCR system.<=
/p>

<p>First off, we must decide what we want our system to be able to do. To k=
eep things simple, let=E2=80=99s allow users to draw a single digit and be =
able to train the OCR system with that drawn digit or to request that the s=
ystem predict what the drawn digit is. While an OCR system could run locall=
y on a single machine, having a client-server setup gives much more flexibi=
lity. It makes crowd-sourced training of an ANN possible and allows powerfu=
l servers to handle intensive computations.</p>

<p>Our OCR system will consist of 5 main components, divided into 5 files. =
There will be:</p>

<ul>
<li>a client (<code>ocr.js</code>)</li>
<li>a server (<code>server.py</code>)</li>
<li>a simple user interface (<code>ocr.html</code>)</li>
<li>an ANN trained via backpropagation (<code>ocr.py</code>)</li>
<li>an ANN design script (<code>neural_network_design.py</code>)</li>
</ul>

<p>The user interface will be simple: a canvas to draw digits on and button=
s to either train the ANN or request a prediction. The client will gather t=
he drawn digit, translate it into an array, and pass it to the server to be=
 processed either as a training sample or as a prediction request. The serv=
er will simply route the training or prediction request by making API calls=
 to the ANN module. The ANN module will train the network with an existing =
data set on its first initialization. It will then save the ANN weights to =
a file and re-load them on subsequent startups. This module is where the co=
re of training and prediction logic happens. Finally, the design script is =
for experimenting with different hidden node counts and deciding what works=
 best. Together, these pieces give us a very simplistic, but functional OCR=
 system.</p>

<p>Now that we've thought about how the system will work at a high level, i=
t's time to put the concepts into code!</p>

<h3 id=3D"a-simple-interface-ocr.html">A Simple Interface (<code>ocr.html</=
code>)</h3>

<p>As mentioned earlier, the first step is to gather data for training the =
network. We could upload a sequence of hand-written digits to the server, b=
ut that would be awkward. Instead, we could have users actually handwrite t=
he digits on the page using an HTML canvas. We could then give them a coupl=
e of options to either train or test the network, where training the networ=
k also involves specifying what digit was drawn. This way it is possible to=
 easily outsource the data collection by pointing people to a website to re=
ceive their input. Here=E2=80=99s some HTML to get us started.</p>

<pre class=3D"sourceCode html"><code class=3D"sourceCode html"><span class=
=3D"kw">&lt;html&gt;</span>
<span class=3D"kw">&lt;head&gt;</span>
    <span class=3D"kw">&lt;script</span><span class=3D"ot"> src=3D</span><s=
pan class=3D"st">"ocr.js"</span><span class=3D"kw">&gt;&lt;/script&gt;</spa=
n>
    <span class=3D"kw">&lt;link</span><span class=3D"ot"> rel=3D</span><spa=
n class=3D"st">"stylesheet"</span><span class=3D"ot"> type=3D</span><span c=
lass=3D"st">"text/css"</span><span class=3D"ot"> href=3D</span><span class=
=3D"st">"ocr.css"</span><span class=3D"kw">&gt;</span>
<span class=3D"kw">&lt;/head&gt;</span>
<span class=3D"kw">&lt;body</span><span class=3D"ot"> onload=3D</span><span=
 class=3D"st">"ocrDemo.onLoadFunction()"</span><span class=3D"kw">&gt;</spa=
n>
    <span class=3D"kw">&lt;div</span><span class=3D"ot"> id=3D</span><span =
class=3D"st">"main-container"</span><span class=3D"ot"> style=3D</span><spa=
n class=3D"st">"text-align: center;"</span><span class=3D"kw">&gt;</span>
        <span class=3D"kw">&lt;h1&gt;</span>OCR Demo<span class=3D"kw">&lt;=
/h1&gt;</span>
        <span class=3D"kw">&lt;canvas</span><span class=3D"ot"> id=3D</span=
><span class=3D"st">"canvas"</span><span class=3D"ot"> width=3D</span><span=
 class=3D"st">"200"</span><span class=3D"ot"> height=3D</span><span class=
=3D"st">"200"</span><span class=3D"kw">&gt;&lt;/canvas&gt;</span>
        <span class=3D"kw">&lt;form</span><span class=3D"ot"> name=3D</span=
><span class=3D"st">"input"</span><span class=3D"kw">&gt;</span>
            <span class=3D"kw">&lt;p&gt;</span>Digit: <span class=3D"kw">&l=
t;input</span><span class=3D"ot"> id=3D</span><span class=3D"st">"digit"</s=
pan><span class=3D"ot"> type=3D</span><span class=3D"st">"text"</span><span=
 class=3D"kw">&gt;</span> <span class=3D"kw">&lt;/p&gt;</span>
            <span class=3D"kw">&lt;input</span><span class=3D"ot"> type=3D<=
/span><span class=3D"st">"button"</span><span class=3D"ot"> value=3D</span>=
<span class=3D"st">"Train"</span><span class=3D"ot"> onclick=3D</span><span=
 class=3D"st">"ocrDemo.train()"</span><span class=3D"kw">&gt;</span>
            <span class=3D"kw">&lt;input</span><span class=3D"ot"> type=3D<=
/span><span class=3D"st">"button"</span><span class=3D"ot"> value=3D</span>=
<span class=3D"st">"Test"</span><span class=3D"ot"> onclick=3D</span><span =
class=3D"st">"ocrDemo.test()"</span><span class=3D"kw">&gt;</span>
            <span class=3D"kw">&lt;input</span><span class=3D"ot"> type=3D<=
/span><span class=3D"st">"button"</span><span class=3D"ot"> value=3D</span>=
<span class=3D"st">"Reset"</span><span class=3D"ot"> onclick=3D</span><span=
 class=3D"st">"ocrDemo.resetCanvas();"</span><span class=3D"kw">/&gt;</span=
>
        <span class=3D"kw">&lt;/form&gt;</span>=20
    <span class=3D"kw">&lt;/div&gt;</span>
<span class=3D"kw">&lt;/body&gt;</span>
<span class=3D"kw">&lt;/html&gt;</span></code></pre>

<h3 id=3D"an-ocr-client-ocr.js">An OCR Client (<code>ocr.js</code>)</h3>

<p>Since a single pixel on an HTML canvas might be hard to see, we can repr=
esent a single pixel for the ANN input as a square of 10x10 real pixels. Th=
us the real canvas is 200x200 pixels and it is represented by a 20x20 canva=
s from the perspective of the ANN. The variables below will help us keep tr=
ack of these measurements.</p>

<pre class=3D"sourceCode javascript"><code class=3D"sourceCode javascript">=
<span class=3D"kw">var</span> ocrDemo =3D {
    <span class=3D"dt">CANVAS_WIDTH</span>: <span class=3D"dv">200</span>,
    <span class=3D"dt">TRANSLATED_WIDTH</span>: <span class=3D"dv">20</span=
>,
    <span class=3D"dt">PIXEL_WIDTH</span>: <span class=3D"dv">10</span>, <s=
pan class=3D"co">// TRANSLATED_WIDTH =3D CANVAS_WIDTH / PIXEL_WIDTH</span><=
/code></pre>

<p>We can then outline the pixels in the new representation so they are eas=
ier to see. Here we have a blue grid generated by <code>drawGrid()</code>.<=
/p>

<pre class=3D"sourceCode javascript"><code class=3D"sourceCode javascript">=
    drawGrid: <span class=3D"kw">function</span>(ctx) {
        <span class=3D"kw">for</span> (<span class=3D"kw">var</span> x =3D =
<span class=3D"kw">this</span>.<span class=3D"fu">PIXEL_WIDTH</span>, y =3D=
 <span class=3D"kw">this</span>.<span class=3D"fu">PIXEL_WIDTH</span>;=20
                 x &lt; <span class=3D"kw">this</span>.<span class=3D"fu">C=
ANVAS_WIDTH</span>; x +=3D <span class=3D"kw">this</span>.<span class=3D"fu=
">PIXEL_WIDTH</span>,=20
                 y +=3D <span class=3D"kw">this</span>.<span class=3D"fu">P=
IXEL_WIDTH</span>) {
            <span class=3D"ot">ctx</span>.<span class=3D"fu">strokeStyle</s=
pan> =3D <span class=3D"kw">this</span>.<span class=3D"fu">BLUE</span>;
            <span class=3D"ot">ctx</span>.<span class=3D"fu">beginPath</spa=
n>();
            <span class=3D"ot">ctx</span>.<span class=3D"fu">moveTo</span>(=
x, <span class=3D"dv">0</span>);
            <span class=3D"ot">ctx</span>.<span class=3D"fu">lineTo</span>(=
x, <span class=3D"kw">this</span>.<span class=3D"fu">CANVAS_WIDTH</span>);
            <span class=3D"ot">ctx</span>.<span class=3D"fu">stroke</span>(=
);

            <span class=3D"ot">ctx</span>.<span class=3D"fu">beginPath</spa=
n>();
            <span class=3D"ot">ctx</span>.<span class=3D"fu">moveTo</span>(=
<span class=3D"dv">0</span>, y);
            <span class=3D"ot">ctx</span>.<span class=3D"fu">lineTo</span>(=
<span class=3D"kw">this</span>.<span class=3D"fu">CANVAS_WIDTH</span>, y);
            <span class=3D"ot">ctx</span>.<span class=3D"fu">stroke</span>(=
);
        }
    },</code></pre>

<p>We also need to store the data drawn on the grid in a form that can be s=
ent to the server. For simplicity, we can have an array called <code>data</=
code> which labels an uncoloured, black pixel as <code>0</code> and a colou=
red white pixel as <code>1</code>. We also need some mouse listeners on the=
 canvas so we know when to call <code>fillSquare()</code> to colour a pixel=
 white while a user is drawing a digit. These listeners should keep track o=
f whether we are in a drawing state and then call <code>fillSquare()</code>=
 to do some simple math and decide which pixels need to be filled in.</p>

<pre class=3D"sourceCode javascript"><code class=3D"sourceCode javascript">=
    onMouseMove: <span class=3D"kw">function</span>(e, ctx, canvas) {
        <span class=3D"kw">if</span> (!<span class=3D"ot">canvas</span>.<sp=
an class=3D"fu">isDrawing</span>) {
            <span class=3D"kw">return</span>;
        }
        <span class=3D"kw">this</span>.<span class=3D"fu">fillSquare</span>=
(ctx,=20
            <span class=3D"ot">e</span>.<span class=3D"fu">clientX</span> -=
 <span class=3D"ot">canvas</span>.<span class=3D"fu">offsetLeft</span>, <sp=
an class=3D"ot">e</span>.<span class=3D"fu">clientY</span> - <span class=3D=
"ot">canvas</span>.<span class=3D"fu">offsetTop</span>);
    },

    onMouseDown: <span class=3D"kw">function</span>(e, ctx, canvas) {
        <span class=3D"ot">canvas</span>.<span class=3D"fu">isDrawing</span=
> =3D <span class=3D"kw">true</span>;
        <span class=3D"kw">this</span>.<span class=3D"fu">fillSquare</span>=
(ctx,=20
            <span class=3D"ot">e</span>.<span class=3D"fu">clientX</span> -=
 <span class=3D"ot">canvas</span>.<span class=3D"fu">offsetLeft</span>, <sp=
an class=3D"ot">e</span>.<span class=3D"fu">clientY</span> - <span class=3D=
"ot">canvas</span>.<span class=3D"fu">offsetTop</span>);
    },

    onMouseUp: <span class=3D"kw">function</span>(e) {
        <span class=3D"ot">canvas</span>.<span class=3D"fu">isDrawing</span=
> =3D <span class=3D"kw">false</span>;
    },

    fillSquare: <span class=3D"kw">function</span>(ctx, x, y) {
        <span class=3D"kw">var</span> xPixel =3D <span class=3D"ot">Math</s=
pan>.<span class=3D"fu">floor</span>(x / <span class=3D"kw">this</span>.<sp=
an class=3D"fu">PIXEL_WIDTH</span>);
        <span class=3D"kw">var</span> yPixel =3D <span class=3D"ot">Math</s=
pan>.<span class=3D"fu">floor</span>(y / <span class=3D"kw">this</span>.<sp=
an class=3D"fu">PIXEL_WIDTH</span>);
        <span class=3D"kw">this</span>.<span class=3D"fu">data</span>[((xPi=
xel - <span class=3D"dv">1</span>)  * <span class=3D"kw">this</span>.<span =
class=3D"fu">TRANSLATED_WIDTH</span> + yPixel) - <span class=3D"dv">1</span=
>] =3D <span class=3D"dv">1</span>;

        <span class=3D"ot">ctx</span>.<span class=3D"fu">fillStyle</span> =
=3D <span class=3D"st">'#ffffff'</span>;
        <span class=3D"ot">ctx</span>.<span class=3D"fu">fillRect</span>(xP=
ixel * <span class=3D"kw">this</span>.<span class=3D"fu">PIXEL_WIDTH</span>=
, yPixel * <span class=3D"kw">this</span>.<span class=3D"fu">PIXEL_WIDTH</s=
pan>,=20
            <span class=3D"kw">this</span>.<span class=3D"fu">PIXEL_WIDTH</=
span>, <span class=3D"kw">this</span>.<span class=3D"fu">PIXEL_WIDTH</span>=
);
    },</code></pre>

<p>Now we=E2=80=99re getting closer to the juicy stuff! We need a function =
that prepares training data to be sent to the server. Here we have a relati=
vely straight forward <code>train()</code> function that does some error ch=
ecking on the data to be sent, adds it to <code>trainArray</code> and sends=
 it off by calling <code>sendData()</code>.</p>

<pre class=3D"sourceCode javascript"><code class=3D"sourceCode javascript">=
    train: <span class=3D"kw">function</span>() {
        <span class=3D"kw">var</span> digitVal =3D <span class=3D"ot">docum=
ent</span>.<span class=3D"fu">getElementById</span>(<span class=3D"st">"dig=
it"</span>).<span class=3D"fu">value</span>;
        <span class=3D"kw">if</span> (!digitVal || <span class=3D"kw">this<=
/span>.<span class=3D"ot">data</span>.<span class=3D"fu">indexOf</span>(<sp=
an class=3D"dv">1</span>) &lt; <span class=3D"dv">0</span>) {
            <span class=3D"fu">alert</span>(<span class=3D"st">"Please type=
 and draw a digit value in order to train the network"</span>);
            <span class=3D"kw">return</span>;
        }
        <span class=3D"kw">this</span>.<span class=3D"ot">trainArray</span>=
.<span class=3D"fu">push</span>({<span class=3D"st">"y0"</span>: <span clas=
s=3D"kw">this</span>.<span class=3D"fu">data</span>, <span class=3D"st">"la=
bel"</span>: <span class=3D"fu">parseInt</span>(digitVal)});
        <span class=3D"kw">this</span>.<span class=3D"fu">trainingRequestCo=
unt</span>++;

        <span class=3D"co">// Time to send a training batch to the server.<=
/span>
        <span class=3D"kw">if</span> (<span class=3D"kw">this</span>.<span =
class=3D"fu">trainingRequestCount</span> =3D=3D <span class=3D"kw">this</sp=
an>.<span class=3D"fu">BATCH_SIZE</span>) {
            <span class=3D"fu">alert</span>(<span class=3D"st">"Sending tra=
ining data to server..."</span>);
            <span class=3D"kw">var</span> json =3D {
                <span class=3D"dt">trainArray</span>: <span class=3D"kw">th=
is</span>.<span class=3D"fu">trainArray</span>,
                <span class=3D"dt">train</span>: <span class=3D"kw">true</s=
pan>
            };

            <span class=3D"kw">this</span>.<span class=3D"fu">sendData</spa=
n>(json);
            <span class=3D"kw">this</span>.<span class=3D"fu">trainingReque=
stCount</span> =3D <span class=3D"dv">0</span>;
            <span class=3D"kw">this</span>.<span class=3D"fu">trainArray</s=
pan> =3D [];
        }
    },</code></pre>

<p>An interesting design worth noting here is the use of <code>trainingRequ=
estCount</code>, <code>trainArray</code>, and <code>BATCH_SIZE</code>. What=
=E2=80=99s happening here is that <code>BATCH_SIZE</code> is some pre-defin=
ed constant for how much training data a client will keep track of before i=
t sends a batched request to the server to be processed by the OCR. The mai=
n reason to batch requests is to avoid overwhelming the server with many re=
quests at once. If many clients exist (e.g. many users are on the <code>ocr=
.html</code> page training the system), or if another layer existed in the =
client that takes scanned drawn digits and translated them to pixels to tra=
in the network, a <code>BATCH_SIZE</code> of 1 would result in many, unnece=
ssary requests. This approach is good because it gives more flexibility to =
the client, however, in practice, batching should also take place on the se=
rver, when needed. A denial of service (DoS) attack could occur in which a =
malicious client purposely sends many requests to the server to overwhelm i=
t so that it breaks down.</p>

<p>We will also need a <code>test()</code> function. Similar to <code>train=
()</code>, it should do a simple check on the validity of the data and send=
 it off. For <code>test()</code>, however, no batching occurs since users s=
hould be able to request a prediction and get immediate results.</p>

<pre class=3D"sourceCode javascript"><code class=3D"sourceCode javascript">=
    test: <span class=3D"kw">function</span>() {
        <span class=3D"kw">if</span> (<span class=3D"kw">this</span>.<span =
class=3D"ot">data</span>.<span class=3D"fu">indexOf</span>(<span class=3D"d=
v">1</span>) &lt; <span class=3D"dv">0</span>) {
            <span class=3D"fu">alert</span>(<span class=3D"st">"Please draw=
 a digit in order to test the network"</span>);
            <span class=3D"kw">return</span>;
        }
        <span class=3D"kw">var</span> json =3D {
            <span class=3D"dt">image</span>: <span class=3D"kw">this</span>=
.<span class=3D"fu">data</span>,
            <span class=3D"dt">predict</span>: <span class=3D"kw">true</spa=
n>
        };
        <span class=3D"kw">this</span>.<span class=3D"fu">sendData</span>(j=
son);
    },</code></pre>

<p>Finally, we will need some functions to make an HTTP POST request, recei=
ve a response, and handle any potential errors along the way.</p>

<pre class=3D"sourceCode javascript"><code class=3D"sourceCode javascript">=
    receiveResponse: <span class=3D"kw">function</span>(xmlHttp) {
        <span class=3D"kw">if</span> (<span class=3D"ot">xmlHttp</span>.<sp=
an class=3D"fu">status</span> !=3D <span class=3D"dv">200</span>) {
            <span class=3D"fu">alert</span>(<span class=3D"st">"Server retu=
rned status "</span> + <span class=3D"ot">xmlHttp</span>.<span class=3D"fu"=
>status</span>);
            <span class=3D"kw">return</span>;
        }
        <span class=3D"kw">var</span> responseJSON =3D <span class=3D"ot">J=
SON</span>.<span class=3D"fu">parse</span>(<span class=3D"ot">xmlHttp</span=
>.<span class=3D"fu">responseText</span>);
        <span class=3D"kw">if</span> (<span class=3D"ot">xmlHttp</span>.<sp=
an class=3D"fu">responseText</span> &amp;&amp; <span class=3D"ot">responseJ=
SON</span>.<span class=3D"fu">type</span> =3D=3D <span class=3D"st">"test"<=
/span>) {
            <span class=3D"fu">alert</span>(<span class=3D"st">"The neural =
network predicts you wrote a </span><span class=3D"ch">\'</span><span class=
=3D"st">"</span>=20
                   + <span class=3D"ot">responseJSON</span>.<span class=3D"=
fu">result</span> + <span class=3D"st">'</span><span class=3D"ch">\'</span>=
<span class=3D"st">'</span>);
        }
    },

    onError: <span class=3D"kw">function</span>(e) {
        <span class=3D"fu">alert</span>(<span class=3D"st">"Error occurred =
while connecting to server: "</span> + <span class=3D"ot">e</span>.<span cl=
ass=3D"ot">target</span>.<span class=3D"fu">statusText</span>);
    },

    sendData: <span class=3D"kw">function</span>(json) {
        <span class=3D"kw">var</span> xmlHttp =3D <span class=3D"kw">new</s=
pan> <span class=3D"fu">XMLHttpRequest</span>();
        <span class=3D"ot">xmlHttp</span>.<span class=3D"fu">open</span>(<s=
pan class=3D"st">'POST'</span>, <span class=3D"kw">this</span>.<span class=
=3D"fu">HOST</span> + <span class=3D"st">":"</span> + <span class=3D"kw">th=
is</span>.<span class=3D"fu">PORT</span>, <span class=3D"kw">false</span>);
        <span class=3D"ot">xmlHttp</span>.<span class=3D"fu">onload</span> =
=3D <span class=3D"kw">function</span>() { <span class=3D"kw">this</span>.<=
span class=3D"fu">receiveResponse</span>(xmlHttp); }.<span class=3D"fu">bin=
d</span>(<span class=3D"kw">this</span>);
        <span class=3D"ot">xmlHttp</span>.<span class=3D"fu">onerror</span>=
 =3D <span class=3D"kw">function</span>() { <span class=3D"kw">this</span>.=
<span class=3D"fu">onError</span>(xmlHttp) }.<span class=3D"fu">bind</span>=
(<span class=3D"kw">this</span>);
        <span class=3D"kw">var</span> msg =3D <span class=3D"ot">JSON</span=
>.<span class=3D"fu">stringify</span>(json);
        <span class=3D"ot">xmlHttp</span>.<span class=3D"fu">setRequestHead=
er</span>(<span class=3D"st">'Content-length'</span>, <span class=3D"ot">ms=
g</span>.<span class=3D"fu">length</span>);
        <span class=3D"ot">xmlHttp</span>.<span class=3D"fu">setRequestHead=
er</span>(<span class=3D"st">"Connection"</span>, <span class=3D"st">"close=
"</span>);
        <span class=3D"ot">xmlHttp</span>.<span class=3D"fu">send</span>(ms=
g);
    }</code></pre>

<h3 id=3D"a-server-server.py">A Server (<code>server.py</code>)</h3>

<p>Despite being a small server that simply relays information, we still ne=
ed to consider how to receive and handle the HTTP requests. First we need t=
o decide what kind of HTTP request to use. In the last section, the client =
is using POST, but why did we decide on this? Since data is being sent to t=
he server, a PUT or POST request makes the most sense. We only need to send=
 a json body and no URL parameters. So in theory, a GET request could have =
worked as well but would not make sense semantically. The choice between PU=
T and POST, however, is a long, on-going debate among programmers; KNPLabs =
summarizes the issues <a href=3D"https://knpuniversity.com/screencast/rest/=
put-versus-post">with humour</a>.</p>

<p>Another consideration is whether to send the "train" vs. "predict" reque=
sts to different endpoints (e.g. <code>http://localhost/train</code> and <c=
ode>http://localhost/predict</code>) or the same endpoint which then proces=
ses the data separately. In this case, we can go with the latter approach s=
ince the difference between what is done with the data in each case is mino=
r enough to fit into a short if statement. In practice, it would be better =
to have these as separate endpoints if the server were to do any more detai=
led processing for each request type. This decision, in turn impacted what =
server error codes were used when. For example, a 400 "Bad Request" error i=
s sent when neither "train" or "predict" is specified in the payload. If se=
parate endpoints were used instead, this would not be an issue. The process=
ing done in the background by the OCR system may fail for any reason and if=
 it's not handled correctly within the server, a 500 "Internal Server Error=
" is sent. Again, if the endpoints were separated, there would have been mo=
re room to go into detail to send more appropriate errors. For example, ide=
ntifying that an internal server error was actually caused by a bad request=
.</p>

<p>Finally, we need to decide when and where to initialize the OCR system. =
A good approach would be to initialize it within <code>server.py</code> but=
 before the server is started. This is because on first run, the OCR system=
 needs to train the network on some pre-existing data the first time it sta=
rts and this may take a few minutes. If the server started before this proc=
essing was complete, any requests to train or predict would throw an except=
ion since the OCR object would not yet have been initialized, given the cur=
rent implementation. Another possible implementation could create some inac=
curate initial ANN to be used for the first few queries while the new ANN i=
s asynchronously trained in the background. This alternative approach does =
allow the ANN to be used immediately, but the implementation is more comple=
x and it would only save on time on server startup if the servers are reset=
. This type of implementation would be more beneficial for an OCR service t=
hat requires high availability.</p>

<p>Here we have the majority of our server code in one short function that =
handles POST requests.</p>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python">    <spa=
n class=3D"kw">def</span> do_POST(s):
        response_code =3D <span class=3D"dv">200</span>
        response =3D <span class=3D"st">""</span>
        var_len =3D <span class=3D"dt">int</span>(s.headers.get(<span class=
=3D"st">'Content-Length'</span>))
        content =3D s.rfile.read(var_len);
        payload =3D json.loads(content);

        <span class=3D"kw">if</span> payload.get(<span class=3D"st">'train'=
</span>):
            nn.train(payload[<span class=3D"st">'trainArray'</span>])
            nn.save()
        <span class=3D"kw">elif</span> payload.get(<span class=3D"st">'pred=
ict'</span>):
            <span class=3D"kw">try</span>:
                response =3D {
                    <span class=3D"st">"type"</span>:<span class=3D"st">"te=
st"</span>,=20
                    <span class=3D"co">"result"</span>:nn.predict(<span cla=
ss=3D"dt">str</span>(payload[<span class=3D"st">'image'</span>]))
                }
            <span class=3D"kw">except</span>:
                response_code =3D <span class=3D"dv">500</span>
        <span class=3D"kw">else</span>:
            response_code =3D <span class=3D"dv">400</span>

        s.send_response(response_code)
        s.send_header(<span class=3D"st">"Content-type"</span>, <span class=
=3D"st">"application/json"</span>)
        s.send_header(<span class=3D"st">"Access-Control-Allow-Origin"</spa=
n>, <span class=3D"st">"*"</span>)
        s.end_headers()
        <span class=3D"kw">if</span> response:
            s.wfile.write(json.dumps(response))
        <span class=3D"kw">return</span></code></pre>

<h3 id=3D"designing-a-feedforward-ann-neural_network_design.py">Designing a=
 Feedforward ANN (<code>neural_network_design.py</code>)</h3>

<p><a name=3D"sec.ocr.feedforward">&nbsp;</a> When designing a feedforward =
ANN, there are a few factors we must consider. The first is what activation=
 function to use. We mentioned activation functions earlier as the decision=
-maker for a node=E2=80=99s output. The type of the decision an activation =
function makes will help us decide which one to use. In our case, we will b=
e designing an ANN that outputs a value between 0 and 1 for each digit (0-9=
). Values closer to 1 would mean the ANN predicts this is the drawn digit a=
nd values closer to 0 would mean it=E2=80=99s predicted to not be the drawn=
 digit. Thus, we want an activation function that would have outputs either=
 close to 0 or close to 1. We also need a function that is differentiable b=
ecause we will need the derivative for our backpropagation computation. A c=
ommonly used function in this case is the sigmoid because it satisfies both=
 these constraints. StatSoft provides a <a href=3D"http://www.fmi.uni-sofia=
.bg/fmi/statist/education/textbook/eng/glosa.html">nice list</a> of common =
activation functions and their properties.</p>

<p>A second factor to consider is whether we want to include biases. We've =
mentioned biases a couple of times before but haven't really talked about w=
hat they are or why we use them. Let's try to understand this by going back=
 to how the output of a node is computed in <a href=3D"http://aosabook.org/=
en/500L/optical-character-recognition-ocr.html#figure-15.1">Figure 15.1</a>=
. Suppose we had a single input node and a single output node, our output f=
ormula would be <span class=3D"math"><span class=3D"MathJax_Preview" style=
=3D"color: inherit; display: none;"></span><span class=3D"MathJax" id=3D"Ma=
thJax-Element-13-Frame" tabindex=3D"0" data-mathml=3D"<math xmlns=3D&quot;h=
ttp://www.w3.org/1998/Math/MathML&quot;><mi>y</mi><mo>=3D</mo><mi>f</mi><mo=
 stretchy=3D&quot;false&quot;>(</mo><mi>w</mi><mi>x</mi><mo stretchy=3D&quo=
t;false&quot;>)</mo></math>" role=3D"presentation" style=3D"position: relat=
ive;"><nobr aria-hidden=3D"true"><span class=3D"math" id=3D"MathJax-Span-10=
9" style=3D"width: 5.324em; display: inline-block;"><span style=3D"display:=
 inline-block; position: relative; width: 4.426em; height: 0px; font-size: =
120%;"><span style=3D"position: absolute; clip: rect(1.221em 1004.36em 2.63=
1em -999.997em); top: -2.176em; left: 0em;"><span class=3D"mrow" id=3D"Math=
Jax-Span-110"><span class=3D"mi" id=3D"MathJax-Span-111" style=3D"font-fami=
ly: MathJax_Math-italic;">y<span style=3D"display: inline-block; overflow: =
hidden; height: 1px; width: 0.003em;"></span></span><span class=3D"mo" id=
=3D"MathJax-Span-112" style=3D"font-family: MathJax_Main; padding-left: 0.2=
6em;">=3D</span><span class=3D"mi" id=3D"MathJax-Span-113" style=3D"font-fa=
mily: MathJax_Math-italic; padding-left: 0.26em;">f<span style=3D"display: =
inline-block; overflow: hidden; height: 1px; width: 0.067em;"></span></span=
><span class=3D"mo" id=3D"MathJax-Span-114" style=3D"font-family: MathJax_M=
ain;">(</span><span class=3D"mi" id=3D"MathJax-Span-115" style=3D"font-fami=
ly: MathJax_Math-italic;">w</span><span class=3D"mi" id=3D"MathJax-Span-116=
" style=3D"font-family: MathJax_Math-italic;">x</span><span class=3D"mo" id=
=3D"MathJax-Span-117" style=3D"font-family: MathJax_Main;">)</span></span><=
span style=3D"display: inline-block; width: 0px; height: 2.183em;"></span><=
/span></span><span style=3D"display: inline-block; overflow: hidden; vertic=
al-align: -0.381em; border-left: 0px solid; width: 0px; height: 1.388em;"><=
/span></span></nobr><span class=3D"MJX_Assistive_MathML" role=3D"presentati=
on"><math xmlns=3D"http://www.w3.org/1998/Math/MathML"><mi>y</mi><mo>=3D</m=
o><mi>f</mi><mo stretchy=3D"false">(</mo><mi>w</mi><mi>x</mi><mo stretchy=
=3D"false">)</mo></math></span></span></span>, where <span class=3D"math"><=
span class=3D"MathJax_Preview" style=3D"color: inherit; display: none;"></s=
pan><span class=3D"MathJax" id=3D"MathJax-Element-14-Frame" tabindex=3D"0" =
data-mathml=3D"<math xmlns=3D&quot;http://www.w3.org/1998/Math/MathML&quot;=
><mi>y</mi></math>" role=3D"presentation" style=3D"position: relative;"><no=
br aria-hidden=3D"true"><span class=3D"math" id=3D"MathJax-Span-118" style=
=3D"width: 0.644em; display: inline-block;"><span style=3D"display: inline-=
block; position: relative; width: 0.516em; height: 0px; font-size: 120%;"><=
span style=3D"position: absolute; clip: rect(1.542em 1000.52em 2.567em -999=
.997em); top: -2.176em; left: 0em;"><span class=3D"mrow" id=3D"MathJax-Span=
-119"><span class=3D"mi" id=3D"MathJax-Span-120" style=3D"font-family: Math=
Jax_Math-italic;">y<span style=3D"display: inline-block; overflow: hidden; =
height: 1px; width: 0.003em;"></span></span></span><span style=3D"display: =
inline-block; width: 0px; height: 2.183em;"></span></span></span><span styl=
e=3D"display: inline-block; overflow: hidden; vertical-align: -0.304em; bor=
der-left: 0px solid; width: 0px; height: 0.927em;"></span></span></nobr><sp=
an class=3D"MJX_Assistive_MathML" role=3D"presentation"><math xmlns=3D"http=
://www.w3.org/1998/Math/MathML"><mi>y</mi></math></span></span></span> is t=
he output, <span class=3D"math"><span class=3D"MathJax_Preview" style=3D"co=
lor: inherit; display: none;"></span><span class=3D"MathJax" id=3D"MathJax-=
Element-15-Frame" tabindex=3D"0" data-mathml=3D"<math xmlns=3D&quot;http://=
www.w3.org/1998/Math/MathML&quot;><mi>f</mi><mo stretchy=3D&quot;false&quot=
;>(</mo><mo stretchy=3D&quot;false&quot;>)</mo></math>" role=3D"presentatio=
n" style=3D"position: relative;"><nobr aria-hidden=3D"true"><span class=3D"=
math" id=3D"MathJax-Span-121" style=3D"width: 1.67em; display: inline-block=
;"><span style=3D"display: inline-block; position: relative; width: 1.349em=
; height: 0px; font-size: 120%;"><span style=3D"position: absolute; clip: r=
ect(1.221em 1001.28em 2.631em -999.997em); top: -2.176em; left: 0em;"><span=
 class=3D"mrow" id=3D"MathJax-Span-122"><span class=3D"mi" id=3D"MathJax-Sp=
an-123" style=3D"font-family: MathJax_Math-italic;">f<span style=3D"display=
: inline-block; overflow: hidden; height: 1px; width: 0.067em;"></span></sp=
an><span class=3D"mo" id=3D"MathJax-Span-124" style=3D"font-family: MathJax=
_Main;">(</span><span class=3D"mo" id=3D"MathJax-Span-125" style=3D"font-fa=
mily: MathJax_Main;">)</span></span><span style=3D"display: inline-block; w=
idth: 0px; height: 2.183em;"></span></span></span><span style=3D"display: i=
nline-block; overflow: hidden; vertical-align: -0.381em; border-left: 0px s=
olid; width: 0px; height: 1.388em;"></span></span></nobr><span class=3D"MJX=
_Assistive_MathML" role=3D"presentation"><math xmlns=3D"http://www.w3.org/1=
998/Math/MathML"><mi>f</mi><mo stretchy=3D"false">(</mo><mo stretchy=3D"fal=
se">)</mo></math></span></span></span> is the activation function, <span cl=
ass=3D"math"><span class=3D"MathJax_Preview" style=3D"color: inherit; displ=
ay: none;"></span><span class=3D"MathJax" id=3D"MathJax-Element-16-Frame" t=
abindex=3D"0" data-mathml=3D"<math xmlns=3D&quot;http://www.w3.org/1998/Mat=
h/MathML&quot;><mi>w</mi></math>" role=3D"presentation" style=3D"position: =
relative;"><nobr aria-hidden=3D"true"><span class=3D"math" id=3D"MathJax-Sp=
an-126" style=3D"width: 0.901em; display: inline-block;"><span style=3D"dis=
play: inline-block; position: relative; width: 0.708em; height: 0px; font-s=
ize: 120%;"><span style=3D"position: absolute; clip: rect(1.542em 1000.71em=
 2.375em -999.997em); top: -2.176em; left: 0em;"><span class=3D"mrow" id=3D=
"MathJax-Span-127"><span class=3D"mi" id=3D"MathJax-Span-128" style=3D"font=
-family: MathJax_Math-italic;">w</span></span><span style=3D"display: inlin=
e-block; width: 0px; height: 2.183em;"></span></span></span><span style=3D"=
display: inline-block; overflow: hidden; vertical-align: -0.073em; border-l=
eft: 0px solid; width: 0px; height: 0.696em;"></span></span></nobr><span cl=
ass=3D"MJX_Assistive_MathML" role=3D"presentation"><math xmlns=3D"http://ww=
w.w3.org/1998/Math/MathML"><mi>w</mi></math></span></span></span> is the we=
ight for the link between the nodes, and <span class=3D"math"><span class=
=3D"MathJax_Preview" style=3D"color: inherit; display: none;"></span><span =
class=3D"MathJax" id=3D"MathJax-Element-17-Frame" tabindex=3D"0" data-mathm=
l=3D"<math xmlns=3D&quot;http://www.w3.org/1998/Math/MathML&quot;><mi>x</mi=
></math>" role=3D"presentation" style=3D"position: relative;"><nobr aria-hi=
dden=3D"true"><span class=3D"math" id=3D"MathJax-Span-129" style=3D"width: =
0.708em; display: inline-block;"><span style=3D"display: inline-block; posi=
tion: relative; width: 0.58em; height: 0px; font-size: 120%;"><span style=
=3D"position: absolute; clip: rect(1.542em 1000.52em 2.375em -999.997em); t=
op: -2.176em; left: 0em;"><span class=3D"mrow" id=3D"MathJax-Span-130"><spa=
n class=3D"mi" id=3D"MathJax-Span-131" style=3D"font-family: MathJax_Math-i=
talic;">x</span></span><span style=3D"display: inline-block; width: 0px; he=
ight: 2.183em;"></span></span></span><span style=3D"display: inline-block; =
overflow: hidden; vertical-align: -0.073em; border-left: 0px solid; width: =
0px; height: 0.696em;"></span></span></nobr><span class=3D"MJX_Assistive_Ma=
thML" role=3D"presentation"><math xmlns=3D"http://www.w3.org/1998/Math/Math=
ML"><mi>x</mi></math></span></span></span> is the variable input for the no=
de. The bias is essentially a node whose output is always <span class=3D"ma=
th"><span class=3D"MathJax_Preview" style=3D"color: inherit; display: none;=
"></span><span class=3D"MathJax" id=3D"MathJax-Element-18-Frame" tabindex=
=3D"0" data-mathml=3D"<math xmlns=3D&quot;http://www.w3.org/1998/Math/MathM=
L&quot;><mn>1</mn></math>" role=3D"presentation" style=3D"position: relativ=
e;"><nobr aria-hidden=3D"true"><span class=3D"math" id=3D"MathJax-Span-132"=
 style=3D"width: 0.644em; display: inline-block;"><span style=3D"display: i=
nline-block; position: relative; width: 0.516em; height: 0px; font-size: 12=
0%;"><span style=3D"position: absolute; clip: rect(1.349em 1000.45em 2.375e=
m -999.997em); top: -2.176em; left: 0em;"><span class=3D"mrow" id=3D"MathJa=
x-Span-133"><span class=3D"mn" id=3D"MathJax-Span-134" style=3D"font-family=
: MathJax_Main;">1</span></span><span style=3D"display: inline-block; width=
: 0px; height: 2.183em;"></span></span></span><span style=3D"display: inlin=
e-block; overflow: hidden; vertical-align: -0.073em; border-left: 0px solid=
; width: 0px; height: 0.927em;"></span></span></nobr><span class=3D"MJX_Ass=
istive_MathML" role=3D"presentation"><math xmlns=3D"http://www.w3.org/1998/=
Math/MathML"><mn>1</mn></math></span></span></span>. This would change the =
output formula to <span class=3D"math"><span class=3D"MathJax_Preview" styl=
e=3D"color: inherit; display: none;"></span><span class=3D"MathJax" id=3D"M=
athJax-Element-19-Frame" tabindex=3D"0" data-mathml=3D"<math xmlns=3D&quot;=
http://www.w3.org/1998/Math/MathML&quot;><mi>y</mi><mo>=3D</mo><mi>f</mi><m=
o stretchy=3D&quot;false&quot;>(</mo><mi>w</mi><mi>x</mi><mo>+</mo><mi>b</m=
i><mo stretchy=3D&quot;false&quot;>)</mo></math>" role=3D"presentation" sty=
le=3D"position: relative;"><nobr aria-hidden=3D"true"><span class=3D"math" =
id=3D"MathJax-Span-135" style=3D"width: 7.183em; display: inline-block;"><s=
pan style=3D"display: inline-block; position: relative; width: 5.965em; hei=
ght: 0px; font-size: 120%;"><span style=3D"position: absolute; clip: rect(1=
.221em 1005.9em 2.631em -999.997em); top: -2.176em; left: 0em;"><span class=
=3D"mrow" id=3D"MathJax-Span-136"><span class=3D"mi" id=3D"MathJax-Span-137=
" style=3D"font-family: MathJax_Math-italic;">y<span style=3D"display: inli=
ne-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span><sp=
an class=3D"mo" id=3D"MathJax-Span-138" style=3D"font-family: MathJax_Main;=
 padding-left: 0.26em;">=3D</span><span class=3D"mi" id=3D"MathJax-Span-139=
" style=3D"font-family: MathJax_Math-italic; padding-left: 0.26em;">f<span =
style=3D"display: inline-block; overflow: hidden; height: 1px; width: 0.067=
em;"></span></span><span class=3D"mo" id=3D"MathJax-Span-140" style=3D"font=
-family: MathJax_Main;">(</span><span class=3D"mi" id=3D"MathJax-Span-141" =
style=3D"font-family: MathJax_Math-italic;">w</span><span class=3D"mi" id=
=3D"MathJax-Span-142" style=3D"font-family: MathJax_Math-italic;">x</span><=
span class=3D"mo" id=3D"MathJax-Span-143" style=3D"font-family: MathJax_Mai=
n; padding-left: 0.196em;">+</span><span class=3D"mi" id=3D"MathJax-Span-14=
4" style=3D"font-family: MathJax_Math-italic; padding-left: 0.196em;">b</sp=
an><span class=3D"mo" id=3D"MathJax-Span-145" style=3D"font-family: MathJax=
_Main;">)</span></span><span style=3D"display: inline-block; width: 0px; he=
ight: 2.183em;"></span></span></span><span style=3D"display: inline-block; =
overflow: hidden; vertical-align: -0.381em; border-left: 0px solid; width: =
0px; height: 1.388em;"></span></span></nobr><span class=3D"MJX_Assistive_Ma=
thML" role=3D"presentation"><math xmlns=3D"http://www.w3.org/1998/Math/Math=
ML"><mi>y</mi><mo>=3D</mo><mi>f</mi><mo stretchy=3D"false">(</mo><mi>w</mi>=
<mi>x</mi><mo>+</mo><mi>b</mi><mo stretchy=3D"false">)</mo></math></span></=
span></span> where <span class=3D"math"><span class=3D"MathJax_Preview" sty=
le=3D"color: inherit; display: none;"></span><span class=3D"MathJax" id=3D"=
MathJax-Element-20-Frame" tabindex=3D"0" data-mathml=3D"<math xmlns=3D&quot=
;http://www.w3.org/1998/Math/MathML&quot;><mi>b</mi></math>" role=3D"presen=
tation" style=3D"position: relative;"><nobr aria-hidden=3D"true"><span clas=
s=3D"math" id=3D"MathJax-Span-146" style=3D"width: 0.58em; display: inline-=
block;"><span style=3D"display: inline-block; position: relative; width: 0.=
452em; height: 0px; font-size: 120%;"><span style=3D"position: absolute; cl=
ip: rect(1.285em 1000.45em 2.375em -999.997em); top: -2.176em; left: 0em;">=
<span class=3D"mrow" id=3D"MathJax-Span-147"><span class=3D"mi" id=3D"MathJ=
ax-Span-148" style=3D"font-family: MathJax_Math-italic;">b</span></span><sp=
an style=3D"display: inline-block; width: 0px; height: 2.183em;"></span></s=
pan></span><span style=3D"display: inline-block; overflow: hidden; vertical=
-align: -0.073em; border-left: 0px solid; width: 0px; height: 1.004em;"></s=
pan></span></nobr><span class=3D"MJX_Assistive_MathML" role=3D"presentation=
"><math xmlns=3D"http://www.w3.org/1998/Math/MathML"><mi>b</mi></math></spa=
n></span></span> is the weight of the connection between the bias node and =
the next node. If we consider <span class=3D"math"><span class=3D"MathJax_P=
review" style=3D"color: inherit; display: none;"></span><span class=3D"Math=
Jax" id=3D"MathJax-Element-21-Frame" tabindex=3D"0" data-mathml=3D"<math xm=
lns=3D&quot;http://www.w3.org/1998/Math/MathML&quot;><mi>w</mi></math>" rol=
e=3D"presentation" style=3D"position: relative;"><nobr aria-hidden=3D"true"=
><span class=3D"math" id=3D"MathJax-Span-149" style=3D"width: 0.901em; disp=
lay: inline-block;"><span style=3D"display: inline-block; position: relativ=
e; width: 0.708em; height: 0px; font-size: 120%;"><span style=3D"position: =
absolute; clip: rect(1.542em 1000.71em 2.375em -999.997em); top: -2.176em; =
left: 0em;"><span class=3D"mrow" id=3D"MathJax-Span-150"><span class=3D"mi"=
 id=3D"MathJax-Span-151" style=3D"font-family: MathJax_Math-italic;">w</spa=
n></span><span style=3D"display: inline-block; width: 0px; height: 2.183em;=
"></span></span></span><span style=3D"display: inline-block; overflow: hidd=
en; vertical-align: -0.073em; border-left: 0px solid; width: 0px; height: 0=
.696em;"></span></span></nobr><span class=3D"MJX_Assistive_MathML" role=3D"=
presentation"><math xmlns=3D"http://www.w3.org/1998/Math/MathML"><mi>w</mi>=
</math></span></span></span> and <span class=3D"math"><span class=3D"MathJa=
x_Preview" style=3D"color: inherit; display: none;"></span><span class=3D"M=
athJax" id=3D"MathJax-Element-22-Frame" tabindex=3D"0" data-mathml=3D"<math=
 xmlns=3D&quot;http://www.w3.org/1998/Math/MathML&quot;><mi>b</mi></math>" =
role=3D"presentation" style=3D"position: relative;"><nobr aria-hidden=3D"tr=
ue"><span class=3D"math" id=3D"MathJax-Span-152" style=3D"width: 0.58em; di=
splay: inline-block;"><span style=3D"display: inline-block; position: relat=
ive; width: 0.452em; height: 0px; font-size: 120%;"><span style=3D"position=
: absolute; clip: rect(1.285em 1000.45em 2.375em -999.997em); top: -2.176em=
; left: 0em;"><span class=3D"mrow" id=3D"MathJax-Span-153"><span class=3D"m=
i" id=3D"MathJax-Span-154" style=3D"font-family: MathJax_Math-italic;">b</s=
pan></span><span style=3D"display: inline-block; width: 0px; height: 2.183e=
m;"></span></span></span><span style=3D"display: inline-block; overflow: hi=
dden; vertical-align: -0.073em; border-left: 0px solid; width: 0px; height:=
 1.004em;"></span></span></nobr><span class=3D"MJX_Assistive_MathML" role=
=3D"presentation"><math xmlns=3D"http://www.w3.org/1998/Math/MathML"><mi>b<=
/mi></math></span></span></span> as constants and <span class=3D"math"><spa=
n class=3D"MathJax_Preview" style=3D"color: inherit; display: none;"></span=
><span class=3D"MathJax" id=3D"MathJax-Element-23-Frame" tabindex=3D"0" dat=
a-mathml=3D"<math xmlns=3D&quot;http://www.w3.org/1998/Math/MathML&quot;><m=
i>x</mi></math>" role=3D"presentation" style=3D"position: relative;"><nobr =
aria-hidden=3D"true"><span class=3D"math" id=3D"MathJax-Span-155" style=3D"=
width: 0.708em; display: inline-block;"><span style=3D"display: inline-bloc=
k; position: relative; width: 0.58em; height: 0px; font-size: 120%;"><span =
style=3D"position: absolute; clip: rect(1.542em 1000.52em 2.375em -999.997e=
m); top: -2.176em; left: 0em;"><span class=3D"mrow" id=3D"MathJax-Span-156"=
><span class=3D"mi" id=3D"MathJax-Span-157" style=3D"font-family: MathJax_M=
ath-italic;">x</span></span><span style=3D"display: inline-block; width: 0p=
x; height: 2.183em;"></span></span></span><span style=3D"display: inline-bl=
ock; overflow: hidden; vertical-align: -0.073em; border-left: 0px solid; wi=
dth: 0px; height: 0.696em;"></span></span></nobr><span class=3D"MJX_Assisti=
ve_MathML" role=3D"presentation"><math xmlns=3D"http://www.w3.org/1998/Math=
/MathML"><mi>x</mi></math></span></span></span> as a variable, then adding =
a bias adds a constant to our linear function input to <span class=3D"math"=
><span class=3D"MathJax_Preview" style=3D"color: inherit; display: none;"><=
/span><span class=3D"MathJax" id=3D"MathJax-Element-24-Frame" tabindex=3D"0=
" data-mathml=3D"<math xmlns=3D&quot;http://www.w3.org/1998/Math/MathML&quo=
t;><mi>f</mi><mo stretchy=3D&quot;false&quot;>(</mo><mo>.</mo><mo stretchy=
=3D&quot;false&quot;>)</mo></math>" role=3D"presentation" style=3D"position=
: relative;"><nobr aria-hidden=3D"true"><span class=3D"math" id=3D"MathJax-=
Span-158" style=3D"width: 2.183em; display: inline-block;"><span style=3D"d=
isplay: inline-block; position: relative; width: 1.798em; height: 0px; font=
-size: 120%;"><span style=3D"position: absolute; clip: rect(1.221em 1001.73=
em 2.631em -999.997em); top: -2.176em; left: 0em;"><span class=3D"mrow" id=
=3D"MathJax-Span-159"><span class=3D"mi" id=3D"MathJax-Span-160" style=3D"f=
ont-family: MathJax_Math-italic;">f<span style=3D"display: inline-block; ov=
erflow: hidden; height: 1px; width: 0.067em;"></span></span><span class=3D"=
mo" id=3D"MathJax-Span-161" style=3D"font-family: MathJax_Main;">(</span><s=
pan class=3D"mo" id=3D"MathJax-Span-162" style=3D"font-family: MathJax_Main=
;">.</span><span class=3D"mo" id=3D"MathJax-Span-163" style=3D"font-family:=
 MathJax_Main; padding-left: 0.196em;">)</span></span><span style=3D"displa=
y: inline-block; width: 0px; height: 2.183em;"></span></span></span><span s=
tyle=3D"display: inline-block; overflow: hidden; vertical-align: -0.381em; =
border-left: 0px solid; width: 0px; height: 1.388em;"></span></span></nobr>=
<span class=3D"MJX_Assistive_MathML" role=3D"presentation"><math xmlns=3D"h=
ttp://www.w3.org/1998/Math/MathML"><mi>f</mi><mo stretchy=3D"false">(</mo><=
mo>.</mo><mo stretchy=3D"false">)</mo></math></span></span></span>.</p>

<p>Adding the bias therefore allows for a shift in the <span class=3D"math"=
><span class=3D"MathJax_Preview" style=3D"color: inherit; display: none;"><=
/span><span class=3D"MathJax" id=3D"MathJax-Element-25-Frame" tabindex=3D"0=
" data-mathml=3D"<math xmlns=3D&quot;http://www.w3.org/1998/Math/MathML&quo=
t;><mi>y</mi></math>" role=3D"presentation" style=3D"position: relative;"><=
nobr aria-hidden=3D"true"><span class=3D"math" id=3D"MathJax-Span-164" styl=
e=3D"width: 0.644em; display: inline-block;"><span style=3D"display: inline=
-block; position: relative; width: 0.516em; height: 0px; font-size: 120%;">=
<span style=3D"position: absolute; clip: rect(1.542em 1000.52em 2.567em -99=
9.997em); top: -2.176em; left: 0em;"><span class=3D"mrow" id=3D"MathJax-Spa=
n-165"><span class=3D"mi" id=3D"MathJax-Span-166" style=3D"font-family: Mat=
hJax_Math-italic;">y<span style=3D"display: inline-block; overflow: hidden;=
 height: 1px; width: 0.003em;"></span></span></span><span style=3D"display:=
 inline-block; width: 0px; height: 2.183em;"></span></span></span><span sty=
le=3D"display: inline-block; overflow: hidden; vertical-align: -0.304em; bo=
rder-left: 0px solid; width: 0px; height: 0.927em;"></span></span></nobr><s=
pan class=3D"MJX_Assistive_MathML" role=3D"presentation"><math xmlns=3D"htt=
p://www.w3.org/1998/Math/MathML"><mi>y</mi></math></span></span></span>-int=
ercept and in general gives more flexibility for the output of a node. It's=
 often good practice to include biases, especially for ANNs with a small nu=
mber of inputs and outputs. Biases allow for more flexibility in the output=
 of the ANN and thus provide the ANN with more room for accuracy. Without b=
iases, we=E2=80=99re less likely to make correct predictions with our ANN o=
r would need more hidden nodes to make more accurate predictions.</p>

<p>Other factors to consider are the number of hidden layers and the number=
 of hidden nodes per layer. For larger ANNs with many inputs and outputs, t=
hese numbers are decided by trying different values and testing the network=
's performance. In this case, the performance is measured by training an AN=
N of a given size and seeing what percentage of the validation set is class=
ified correctly. In most cases, a single hidden layer is sufficient for dec=
ent performance, so we only experiment with the number of hidden nodes here=
.</p>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python"><span cl=
ass=3D"co"># Try various number of hidden nodes and see what performs best<=
/span>
<span class=3D"kw">for</span> i in <span class=3D"dt">xrange</span>(<span c=
lass=3D"dv">5</span>, <span class=3D"dv">50</span>, <span class=3D"dv">5</s=
pan>):
    nn =3D OCRNeuralNetwork(i, data_matrix, data_labels, train_indices, <sp=
an class=3D"ot">False</span>)
    performance =3D <span class=3D"dt">str</span>(test(data_matrix, data_la=
bels, test_indices, nn))
    <span class=3D"dt">print</span> <span class=3D"st">"</span><span class=
=3D"ot">{i}</span><span class=3D"st"> Hidden Nodes: </span><span class=3D"o=
t">{val}</span><span class=3D"st">"</span>.<span class=3D"dt">format</span>=
(i=3Di, val=3Dperformance)</code></pre>

<p>Here we initialize an ANN with between 5 to 50 hidden nodes in increment=
s of 5. We then call the <code>test()</code> function.</p>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python"><span cl=
ass=3D"kw">def</span> test(data_matrix, data_labels, test_indices, nn):
    avg_sum =3D <span class=3D"dv">0</span>
    <span class=3D"kw">for</span> j in <span class=3D"dt">xrange</span>(<sp=
an class=3D"dv">100</span>):
        correct_guess_count =3D <span class=3D"dv">0</span>
        <span class=3D"kw">for</span> i in test_indices:
            test =3D data_matrix[i]
            prediction =3D nn.predict(test)
            <span class=3D"kw">if</span> data_labels[i] =3D=3D prediction:
                correct_guess_count +=3D <span class=3D"dv">1</span>

        avg_sum +=3D (correct_guess_count / <span class=3D"dt">float</span>=
(<span class=3D"dt">len</span>(test_indices)))
    <span class=3D"kw">return</span> avg_sum / <span class=3D"dv">100</span=
></code></pre>

<p>The inner loop is counting the number of correct classifications which a=
re then divided by the number of attempted classifications at the end. This=
 gives a ratio or percentage accuracy for the ANN. Since each time an ANN i=
s trained, its weights may be slightly different, we repeat this process 10=
0 times in the outer loop so we can take an average of this particular ANN =
configuration's accuracy. In our case, a sample run of <code>neural_network=
_design.py</code> looks like the following:</p>

<pre><code>PERFORMANCE
-----------
5 Hidden Nodes: 0.7792
10 Hidden Nodes: 0.8704
15 Hidden Nodes: 0.8808
20 Hidden Nodes: 0.8864
25 Hidden Nodes: 0.8808
30 Hidden Nodes: 0.888
35 Hidden Nodes: 0.8904
40 Hidden Nodes: 0.8896
45 Hidden Nodes: 0.8928</code></pre>

<p>From this output we can conclude that 15 hidden nodes would be most opti=
mal. Adding 5 nodes from 10 to 15 gets us ~1% more accuracy, whereas improv=
ing the accuracy by another 1% would require adding another 20 nodes. Incre=
asing the hidden node count also increases computational overhead. So it wo=
uld take networks with more hidden nodes longer to be trained and to make p=
redictions. Thus we choose to use the last hidden node count that resulted =
in a dramatic increase in accuracy. Of course, it=E2=80=99s possible when d=
esigning an ANN that computational overhead is no problem and it's top prio=
rity to have the most accurate ANN possible. In that case it would be bette=
r to choose 45 hidden nodes instead of 15.</p>

<h3 id=3D"core-ocr-functionality">Core OCR Functionality</h3>

<p>In this section we=E2=80=99ll talk about how the actual training occurs =
via backpropagation, how we can use the network to make predictions, and ot=
her key design decisions for core functionality.</p>

<h4 id=3D"training-via-backpropagation-ocr.py">Training via Backpropagation=
 (<code>ocr.py</code>)</h4>

<p>We use the backpropagation algorithm to train our ANN. It consists of 4 =
main steps that are repeated for every sample in the training set, updating=
 the ANN weights each time.</p>

<p>First, we initialize the weights to small (between -1 and 1) random valu=
es. In our case, we initialize them to values between -0.06 and 0.06 and st=
ore them in matrices <code>theta1</code>, <code>theta2</code>, <code>input_=
layer_bias</code>, and <code>hidden_layer_bias</code>. Since every node in =
a layer links to every node in the next layer we can create a matrix that h=
as m rows and n columns where n is the number of nodes in one layer and m i=
s the number of nodes in the adjacent layer. This matrix would represent al=
l the weights for the links between these two layers. Here theta1 has 400 c=
olumns for our 20x20 pixel inputs and <code>num_hidden_nodes</code> rows. L=
ikewise, <code>theta2</code> represents the links between the hidden layer =
and output layer. It has <code>num_hidden_nodes</code> columns and <code>NU=
M_DIGITS</code> (<code>10</code>) rows. The other two vectors (1 row), <cod=
e>input_layer_bias</code> and <code>hidden_layer_bias</code> represent the =
biases.</p>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python">    <spa=
n class=3D"kw">def</span> _rand_initialize_weights(<span class=3D"ot">self<=
/span>, size_in, size_out):
        <span class=3D"kw">return</span> [((x * <span class=3D"fl">0.12</sp=
an>) - <span class=3D"fl">0.06</span>) <span class=3D"kw">for</span> x in n=
p.random.rand(size_out, size_in)]</code></pre>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python">        =
    <span class=3D"ot">self</span>.theta1 =3D <span class=3D"ot">self</span=
>._rand_initialize_weights(<span class=3D"dv">400</span>, num_hidden_nodes)
            <span class=3D"ot">self</span>.theta2 =3D <span class=3D"ot">se=
lf</span>._rand_initialize_weights(num_hidden_nodes, <span class=3D"dv">10<=
/span>)
            <span class=3D"ot">self</span>.input_layer_bias =3D <span class=
=3D"ot">self</span>._rand_initialize_weights(<span class=3D"dv">1</span>,=
=20
                                                                  num_hidde=
n_nodes)
            <span class=3D"ot">self</span>.hidden_layer_bias =3D <span clas=
s=3D"ot">self</span>._rand_initialize_weights(<span class=3D"dv">1</span>, =
<span class=3D"dv">10</span>)</code></pre>

<p>The second step is <em>forward propagation</em>, which is essentially co=
mputing the node outputs as described in <a href=3D"http://aosabook.org/en/=
500L/optical-character-recognition-ocr.html#sec.ocr.ann">What Are ANNs?</a>=
, layer by layer starting from the input nodes. Here, <code>y0</code> is an=
 array of size 400 with the inputs we wish to use to train the ANN. We mult=
iply <code>theta1</code> by <code>y0</code> transposed so that we have two =
matrices with sizes <code>(num_hidden_nodes x 400) * (400 x 1)</code> and h=
ave a resulting vector of outputs for the hidden layer of size num_hidden_n=
odes. We then add the bias vector and apply the vectorized sigmoid activati=
on function to this output vector, giving us <code>y1</code>. <code>y1</cod=
e> is the output vector of our hidden layer. The same process is repeated a=
gain to compute <code>y2</code> for the output nodes. <code>y2</code> is no=
w our output layer vector with values representing the likelihood that thei=
r index is the drawn number. For example if someone draws an 8, the value o=
f <code>y2</code> at the 8th index will be the largest if the ANN has made =
the correct prediction. However, 6 may have a higher likelihood than 1 of b=
eing the drawn digit since it looks more similar to 8 and is more likely to=
 use up the same pixels to be drawn as the 8. <code>y2</code> becomes more =
accurate with each additional drawn digit the ANN is trained with.</p>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python">    <spa=
n class=3D"co"># The sigmoid activation function. Operates on scalars.</spa=
n>
    <span class=3D"kw">def</span> _sigmoid_scalar(<span class=3D"ot">self</=
span>, z):
        <span class=3D"kw">return</span> <span class=3D"dv">1</span> / (<sp=
an class=3D"dv">1</span> + math.e ** -z)</code></pre>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python">        =
    y1 =3D np.dot(np.mat(<span class=3D"ot">self</span>.theta1), np.mat(dat=
a[<span class=3D"st">'y0'</span>]).T)
            sum1 =3D  y1 + np.mat(<span class=3D"ot">self</span>.input_laye=
r_bias) <span class=3D"co"># Add the bias</span>
            y1 =3D <span class=3D"ot">self</span>.sigmoid(sum1)

            y2 =3D np.dot(np.array(<span class=3D"ot">self</span>.theta2), =
y1)
            y2 =3D np.add(y2, <span class=3D"ot">self</span>.hidden_layer_b=
ias) <span class=3D"co"># Add the bias</span>
            y2 =3D <span class=3D"ot">self</span>.sigmoid(y2)</code></pre>

<p>The third step is <em>back propagation</em>, which involves computing th=
e errors at the output nodes then at every intermediate layer back towards =
the input. Here we start by creating an expected output vector, <code>actua=
l_vals</code>, with a <code>1</code> at the index of the digit that represe=
nts the value of the drawn digit and <code>0</code>s otherwise. The vector =
of errors at the output nodes, <code>output_errors</code>, is computed by s=
ubtracting the actual output vector, <code>y2</code>, from <code>actual_val=
s</code>. For every hidden layer afterwards, we compute two components. Fir=
st, we have the next layer=E2=80=99s transposed weight matrix multiplied by=
 its output errors. Then we have the derivative of the activation function =
applied to the previous layer. We then perform an element-wise multiplicati=
on on these two components, giving a vector of errors for a hidden layer. H=
ere we call this <code>hidden_errors</code>.</p>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python">        =
    actual_vals =3D [<span class=3D"dv">0</span>] * <span class=3D"dv">10</=
span>=20
            actual_vals[data[<span class=3D"st">'label'</span>]] =3D <span =
class=3D"dv">1</span>
            output_errors =3D np.mat(actual_vals).T - np.mat(y2)
            hidden_errors =3D np.multiply(np.dot(np.mat(<span class=3D"ot">=
self</span>.theta2).T, output_errors),=20
                                        <span class=3D"ot">self</span>.sigm=
oid_prime(sum1))</code></pre>

<p>Weight updates that adjust the ANN weights based on the errors computed =
earlier. Weights are updated at each layer via matrix multiplication. The e=
rror matrix at each layer is multiplied by the output matrix of the previou=
s layer. This product is then multiplied by a scalar called the learning ra=
te and added to the weight matrix. The learning rate is a value between 0 a=
nd 1 that influences the speed and accuracy of learning in the ANN. Larger =
learning rate values will generate an ANN that learns quickly but is less a=
ccurate, while smaller values will will generate an ANN that learns slower =
but is more accurate. In our case, we have a relatively small value for lea=
rning rate, 0.1. This works well since we do not need the ANN to be immedia=
tely trained in order for a user to continue making train or predict reques=
ts. Biases are updated by simply multiplying the learning rate by the layer=
=E2=80=99s error vector.</p>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python">        =
    <span class=3D"ot">self</span>.theta1 +=3D <span class=3D"ot">self</spa=
n>.LEARNING_RATE * np.dot(np.mat(hidden_errors),=20
                                                       np.mat(data[<span cl=
ass=3D"st">'y0'</span>]))
            <span class=3D"ot">self</span>.theta2 +=3D <span class=3D"ot">s=
elf</span>.LEARNING_RATE * np.dot(np.mat(output_errors),=20
                                                       np.mat(y1).T)
            <span class=3D"ot">self</span>.hidden_layer_bias +=3D <span cla=
ss=3D"ot">self</span>.LEARNING_RATE * output_errors
            <span class=3D"ot">self</span>.input_layer_bias +=3D <span clas=
s=3D"ot">self</span>.LEARNING_RATE * hidden_errors</code></pre>

<h4 id=3D"testing-a-trained-network-ocr.py">Testing a Trained Network (<cod=
e>ocr.py</code>)</h4>

<p>Once an ANN has been trained via backpropagation, it is fairly straightf=
orward to use it for making predictions. As we can see here, we start by co=
mputing the output of the ANN, <code>y2</code>, exactly the way we did in s=
tep 2 of backpropagation. Then we look for the index in the vector with the=
 maximum value. This index is the digit predicted by the ANN.</p>

<pre><code>    def predict(self, test):
        y1 =3D np.dot(np.mat(self.theta1), np.mat(test).T)
        y1 =3D  y1 + np.mat(self.input_layer_bias) # Add the bias
        y1 =3D self.sigmoid(y1)

        y2 =3D np.dot(np.array(self.theta2), y1)
        y2 =3D np.add(y2, self.hidden_layer_bias) # Add the bias
        y2 =3D self.sigmoid(y2)

        results =3D y2.T.tolist()[0]
        return results.index(max(results))</code></pre>

<h4 id=3D"other-design-decisions-ocr.py">Other Design Decisions (<code>ocr.=
py</code>)</h4>

<p>Many resources are available online that go into greater detail on the i=
mplementation of backpropagation. One good resource is from a <a href=3D"ht=
tp://www.willamette.edu/~gorr/classes/cs449/backprop.html">course by the Un=
iversity of Willamette</a>. It goes over the steps of backpropagation and t=
hen explains how it can be translated into matrix form. While the amount of=
 computation using matrices is the same as using loops, the benefit is that=
 the code is simpler and easier to read with fewer nested loops. As we can =
see, the entire training process is written in under 25 lines of code using=
 matrix algebra.</p>

<p>As mentioned in the introduction of <a href=3D"http://aosabook.org/en/50=
0L/optical-character-recognition-ocr.html#sec.ocr.decisions">Design Decisio=
ns in a Simple OCR System</a>, persisting the weights of the ANN means we d=
o not lose the progress made in training it when the server is shut down or=
 abruptly goes down for any reason. We persist the weights by writing them =
as JSON to a file. On startup, the OCR loads the ANN=E2=80=99s saved weight=
s to memory. The save function is not called internally by the OCR but is u=
p to the server to decide when to perform a save. In our case, the server s=
aves the weights after each update. This is a quick and simple solution but=
 it is not optimal since writing to disk is time consuming. This also preve=
nts us from handling multiple concurrent requests since there is no mechani=
sm to prevent simultaneous writes to the same file. In a more sophisticated=
 server, saves could perhaps be done on shutdown or once every few minutes =
with some form of locking or a timestamp protocol to ensure no data loss.</=
p>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python">    <spa=
n class=3D"kw">def</span> save(<span class=3D"ot">self</span>):
        <span class=3D"kw">if</span> not <span class=3D"ot">self</span>._us=
e_file:
            <span class=3D"kw">return</span>

        json_neural_network =3D {
            <span class=3D"st">"theta1"</span>:[np_mat.tolist()[<span class=
=3D"dv">0</span>] <span class=3D"kw">for</span> np_mat in <span class=3D"ot=
">self</span>.theta1],
            <span class=3D"co">"theta2"</span>:[np_mat.tolist()[<span class=
=3D"dv">0</span>] <span class=3D"kw">for</span> np_mat in <span class=3D"ot=
">self</span>.theta2],
            <span class=3D"co">"b1"</span>:<span class=3D"ot">self</span>.i=
nput_layer_bias[<span class=3D"dv">0</span>].tolist()[<span class=3D"dv">0<=
/span>],
            <span class=3D"co">"b2"</span>:<span class=3D"ot">self</span>.h=
idden_layer_bias[<span class=3D"dv">0</span>].tolist()[<span class=3D"dv">0=
</span>]
        };
        <span class=3D"kw">with</span> <span class=3D"dt">open</span>(OCRNe=
uralNetwork.NN_FILE_PATH,<span class=3D"st">'w'</span>) <span class=3D"ch">=
as</span> nnFile:
            json.dump(json_neural_network, nnFile)

    <span class=3D"kw">def</span> _load(<span class=3D"ot">self</span>):
        <span class=3D"kw">if</span> not <span class=3D"ot">self</span>._us=
e_file:
            <span class=3D"kw">return</span>

        <span class=3D"kw">with</span> <span class=3D"dt">open</span>(OCRNe=
uralNetwork.NN_FILE_PATH) <span class=3D"ch">as</span> nnFile:
            nn =3D json.load(nnFile)
        <span class=3D"ot">self</span>.theta1 =3D [np.array(li) <span class=
=3D"kw">for</span> li in nn[<span class=3D"st">'theta1'</span>]]
        <span class=3D"ot">self</span>.theta2 =3D [np.array(li) <span class=
=3D"kw">for</span> li in nn[<span class=3D"st">'theta2'</span>]]
        <span class=3D"ot">self</span>.input_layer_bias =3D [np.array(nn[<s=
pan class=3D"st">'b1'</span>][<span class=3D"dv">0</span>])]
        <span class=3D"ot">self</span>.hidden_layer_bias =3D [np.array(nn[<=
span class=3D"st">'b2'</span>][<span class=3D"dv">0</span>])]</code></pre>

<h2 id=3D"conclusion">Conclusion</h2>

<p>Now that we=E2=80=99ve learned about AI, ANNs, backpropagation, and buil=
ding an end-to-end OCR system, let=E2=80=99s recap the highlights of this c=
hapter and the big picture.</p>

<p>We started off the chapter by giving background on AI, ANNs, and roughly=
 what we will be implementing. We discussed what AI is and examples of how =
it=E2=80=99s used. We saw that AI is essentially a set of algorithms or pro=
blem-solving approaches that can provide an answer to a question in a simil=
ar manner as a human would. We then took a look at the structure of a Feedf=
orward ANN. We learned that computing the output at a given node was as sim=
ple as summing the products of the outputs of the previous nodes and their =
connecting weights. We talked about how to use an ANN by first formatting t=
he input and partitioning the data into training and validation sets.</p>

<p>Once we had some background, we started talking about creating a web-bas=
ed, client-server system that would handle user requests to train or test t=
he OCR. We then discussed how the client would interpret the drawn pixels i=
nto an array and perform an HTTP request to the OCR server to perform the t=
raining or testing. We discussed how our simple server read requests and ho=
w to design an ANN by testing performance of several hidden node counts. We=
 finished off by going through the core training and testing code for backp=
ropagation.</p>

<p>Although we=E2=80=99ve built a seemingly functional OCR system, this cha=
pter simply scratches the surface of how a real OCR system might work. More=
 sophisticated OCR systems could have pre-processed inputs, use hybrid ML a=
lgorithms, have more extensive design phases, or other further optimization=
s.</p>
        </div>
      </div>
    </div>
 =20
<div id=3D"cntvlive2-is-installed"></div><div style=3D"position: absolute; =
width: 0px; height: 0px; overflow: hidden; padding: 0px; border: 0px; margi=
n: 0px;"><div id=3D"MathJax_Font_Test" style=3D"position: absolute; visibil=
ity: hidden; top: 0px; left: 0px; width: auto; padding: 0px; border: 0px; m=
argin: 0px; white-space: nowrap; text-align: left; text-indent: 0px; text-t=
ransform: none; line-height: normal; letter-spacing: normal; word-spacing: =
normal; font-size: 40px; font-weight: normal; font-style: normal; font-fami=
ly: MathJax_Main, sans-serif;"></div></div><div id=3D"qb-sougou-search" sty=
le=3D"display: none; opacity: 0;"><p>=E6=90=9C=E7=B4=A2</p><p class=3D"last=
-btn">=E5=A4=8D=E5=88=B6</p><iframe src=3D"cid:frame-108-41dfbff2-0862-4151=
-ab25-a51c29a0bfda@mhtml.blink"></iframe></div></body></html>
------MultipartBoundary--WtMIQ3AY6h6Gy9z4sTg6udpZx3WzfkPxVeadHQyMwV----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://aosabook.org/en/500L/theme/css/bootstrap.css

@charset "utf-8";

article, aside, details, figcaption, figure, footer, header, hgroup, nav, s=
ection { display: block; }

audio, canvas, video { display: inline-block; }

audio:not([controls]) { display: none; }

html { font-size: 100%; text-size-adjust: 100%; }

a:focus { outline: -webkit-focus-ring-color auto 5px; outline-offset: -2px;=
 }

a:hover, a:active { outline: 0px; }

sub, sup { position: relative; font-size: 75%; line-height: 0; vertical-ali=
gn: baseline; }

sup { top: -0.5em; }

sub { bottom: -0.25em; }

img { max-width: 100%; height: auto; border: 0px; }

button, input, select, textarea { margin: 0px; font-size: 100%; vertical-al=
ign: middle; }

button, input { line-height: normal; }

button, input[type=3D"button"], input[type=3D"reset"], input[type=3D"submit=
"] { cursor: pointer; -webkit-appearance: button; }

input[type=3D"search"] { -webkit-appearance: textfield; box-sizing: content=
-box; }

input[type=3D"search"]::-webkit-search-decoration, input[type=3D"search"]::=
-webkit-search-cancel-button { -webkit-appearance: none; }

textarea { overflow: auto; vertical-align: top; }

.clearfix { }

.clearfix::before, .clearfix::after { display: table; content: ""; }

.clearfix::after { clear: both; }

body { margin: 0px; font-family: "Helvetica Neue", Helvetica, Arial, sans-s=
erif; font-size: 13px; line-height: 18px; color: rgb(51, 51, 51); backgroun=
d-color: rgb(255, 255, 255); }

a { color: rgb(0, 136, 204); text-decoration: none; }

a:hover { color: rgb(0, 85, 128); text-decoration: underline; }

.row { margin-left: -20px; }

.row::before, .row::after { display: table; content: ""; }

.row::after { clear: both; }

[class*=3D"span"] { float: left; margin-left: 20px; }

.span1 { width: 60px; }

.span2 { width: 140px; }

.span3 { width: 220px; }

.span4 { width: 300px; }

.span5 { width: 380px; }

.span6 { width: 460px; }

.span7 { width: 540px; }

.span8 { width: 620px; }

.span9 { width: 700px; }

.span10 { width: 780px; }

.span11 { width: 860px; }

.span12, .container { width: 940px; }

.offset1 { margin-left: 100px; }

.offset2 { margin-left: 180px; }

.offset3 { margin-left: 260px; }

.offset4 { margin-left: 340px; }

.offset5 { margin-left: 420px; }

.offset6 { margin-left: 500px; }

.offset7 { margin-left: 580px; }

.offset8 { margin-left: 660px; }

.offset9 { margin-left: 740px; }

.offset10 { margin-left: 820px; }

.offset11 { margin-left: 900px; }

.row-fluid { width: 100%; }

.row-fluid::before, .row-fluid::after { display: table; content: ""; }

.row-fluid::after { clear: both; }

.row-fluid > [class*=3D"span"] { float: left; margin-left: 2.12766%; }

.row-fluid > [class*=3D"span"]:first-child { margin-left: 0px; }

.row-fluid > .span1 { width: 6.38298%; }

.row-fluid > .span2 { width: 14.8936%; }

.row-fluid > .span3 { width: 23.4043%; }

.row-fluid > .span4 { width: 31.9149%; }

.row-fluid > .span5 { width: 40.4255%; }

.row-fluid > .span6 { width: 48.9362%; }

.row-fluid > .span7 { width: 57.4468%; }

.row-fluid > .span8 { width: 65.9574%; }

.row-fluid > .span9 { width: 74.4681%; }

.row-fluid > .span10 { width: 82.9787%; }

.row-fluid > .span11 { width: 91.4894%; }

.row-fluid > .span12 { width: 100%; }

.container { width: 940px; margin-left: auto; margin-right: auto; }

.container::before, .container::after { display: table; content: ""; }

.container::after { clear: both; }

.container-fluid { padding-left: 20px; padding-right: 20px; }

.container-fluid::before, .container-fluid::after { display: table; content=
: ""; }

.container-fluid::after { clear: both; }

p { margin: 0px 0px 9px; font-family: "Helvetica Neue", Helvetica, Arial, s=
ans-serif; font-size: 13px; line-height: 18px; }

p small { font-size: 11px; color: rgb(153, 153, 153); }

.lead { margin-bottom: 18px; font-size: 20px; font-weight: 200; line-height=
: 27px; }

h1, h2, h3, h4, h5, h6 { margin: 0px; font-weight: bold; color: rgb(51, 51,=
 51); text-rendering: optimizeLegibility; }

h1 small, h2 small, h3 small, h4 small, h5 small, h6 small { font-weight: n=
ormal; color: rgb(153, 153, 153); }

h1 { font-size: 30px; line-height: 36px; }

h1 small { font-size: 18px; }

h2 { font-size: 24px; line-height: 36px; }

h2 small { font-size: 18px; }

h3 { line-height: 27px; font-size: 18px; }

h3 small { font-size: 14px; }

h4, h5, h6 { line-height: 18px; }

h4 { font-size: 14px; }

h4 small { font-size: 12px; }

h5 { font-size: 12px; }

h6 { font-size: 11px; color: rgb(153, 153, 153); text-transform: uppercase;=
 }

.page-header { padding-bottom: 17px; margin: 18px 0px; border-bottom: 1px s=
olid rgb(238, 238, 238); }

.page-header h1 { line-height: 1; }

ul, ol { padding: 0px; margin: 0px 0px 9px 25px; }

ul ul, ul ol, ol ol, ol ul { margin-bottom: 0px; }

ul { list-style: disc; }

ol { list-style: decimal; }

li { line-height: 18px; }

ul.unstyled, ol.unstyled { margin-left: 0px; list-style: none; }

dl { margin-bottom: 18px; }

dt, dd { line-height: 18px; }

dt { font-weight: bold; }

dd { margin-left: 9px; }

hr { margin: 18px 0px; border-width: 1px 0px; border-right-style: initial; =
border-left-style: initial; border-right-color: initial; border-left-color:=
 initial; border-image: initial; border-top-style: solid; border-top-color:=
 rgb(238, 238, 238); border-bottom-style: solid; border-bottom-color: rgb(2=
55, 255, 255); }

strong { font-weight: bold; }

em { font-style: italic; }

.muted { color: rgb(153, 153, 153); }

abbr { font-size: 90%; text-transform: uppercase; border-bottom: 1px dotted=
 rgb(221, 221, 221); cursor: help; }

blockquote { padding: 0px 0px 0px 15px; margin: 0px 0px 18px; border-left: =
5px solid rgb(238, 238, 238); }

blockquote p { margin-bottom: 0px; font-size: 16px; font-weight: 300; line-=
height: 22.5px; }

blockquote small { display: block; line-height: 18px; color: rgb(153, 153, =
153); }

blockquote small::before { content: "=E2=80=94=C2=A0"; }

blockquote.pull-right { float: right; padding-left: 0px; padding-right: 15p=
x; border-left: 0px; border-right: 5px solid rgb(238, 238, 238); }

blockquote.pull-right p, blockquote.pull-right small { text-align: right; }

q::before, q::after, blockquote::before, blockquote::after { content: ""; }

address { display: block; margin-bottom: 18px; line-height: 18px; font-styl=
e: normal; }

small { font-size: 100%; }

cite { font-style: normal; }

code, pre { padding: 0px 3px 2px; font-family: Menlo, Monaco, "Courier New"=
, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 3px; }

code { padding: 3px 4px; background-color: rgb(247, 247, 249); border: 1px =
solid rgb(225, 225, 232); }

pre { display: block; padding: 8.5px; margin: 0px 0px 9px; font-size: 12px;=
 line-height: 18px; background-color: rgb(245, 245, 245); border: 1px solid=
 rgba(0, 0, 0, 0.14902); border-radius: 4px; overflow-x: auto; overflow-y: =
hidden; width: auto; }

pre.prettyprint { margin-bottom: 18px; }

pre code { padding: 0px; color: inherit; background-color: transparent; bor=
der: 0px; }

.pre-scrollable { max-height: 340px; overflow-y: scroll; }

form { margin: 0px 0px 18px; }

fieldset { padding: 0px; margin: 0px; border: 0px; }

legend { display: block; width: 100%; padding: 0px; margin-bottom: 27px; fo=
nt-size: 19.5px; line-height: 36px; color: rgb(51, 51, 51); border-width: 0=
px 0px 1px; border-top-style: initial; border-right-style: initial; border-=
left-style: initial; border-top-color: initial; border-right-color: initial=
; border-left-color: initial; border-image: initial; border-bottom-style: s=
olid; border-bottom-color: rgb(238, 238, 238); }

legend small { font-size: 13.5px; color: rgb(153, 153, 153); }

label, input, button, select, textarea { font-size: 13px; font-weight: norm=
al; line-height: 18px; }

input, button, select, textarea { font-family: "Helvetica Neue", Helvetica,=
 Arial, sans-serif; }

label { display: block; margin-bottom: 5px; color: rgb(51, 51, 51); }

input, textarea, select, .uneditable-input { display: inline-block; width: =
210px; height: 18px; padding: 4px; margin-bottom: 9px; font-size: 13px; lin=
e-height: 18px; color: rgb(85, 85, 85); border: 1px solid rgb(204, 204, 204=
); border-radius: 3px; }

.uneditable-textarea { width: auto; height: auto; }

label input, label textarea, label select { display: block; }

input[type=3D"image"], input[type=3D"checkbox"], input[type=3D"radio"] { wi=
dth: auto; height: auto; padding: 0px; margin: 3px 0px; line-height: normal=
; cursor: pointer; border-radius: 0px; }

input[type=3D"image"] { border: 0px; }

input[type=3D"file"] { width: auto; padding: initial; line-height: initial;=
 border: initial; background-color: initial; box-shadow: none; }

input[type=3D"button"], input[type=3D"reset"], input[type=3D"submit"] { wid=
th: auto; height: auto; }

select, input[type=3D"file"] { height: 28px; line-height: 28px; }

input[type=3D"file"] { }

select { width: 220px; background-color: rgb(255, 255, 255); }

select[multiple], select[size] { height: auto; }

input[type=3D"image"] { box-shadow: none; }

textarea { height: auto; }

input[type=3D"hidden"] { display: none; }

.radio, .checkbox { padding-left: 18px; }

.radio input[type=3D"radio"], .checkbox input[type=3D"checkbox"] { float: l=
eft; margin-left: -18px; }

.controls > .radio:first-child, .controls > .checkbox:first-child { padding=
-top: 5px; }

.radio.inline, .checkbox.inline { display: inline-block; padding-top: 5px; =
margin-bottom: 0px; vertical-align: middle; }

.radio.inline + .radio.inline, .checkbox.inline + .checkbox.inline { margin=
-left: 10px; }

input, textarea { box-shadow: rgba(0, 0, 0, 0.0745098) 0px 1px 1px inset; t=
ransition: border 0.2s linear, box-shadow 0.2s linear; }

input:focus, textarea:focus { border-color: rgba(82, 168, 236, 0.8); box-sh=
adow: rgba(0, 0, 0, 0.0745098) 0px 1px 1px inset, rgba(82, 168, 236, 0.6) 0=
px 0px 8px; outline: 0px; }

input[type=3D"file"]:focus, input[type=3D"radio"]:focus, input[type=3D"chec=
kbox"]:focus, select:focus { box-shadow: none; outline: -webkit-focus-ring-=
color auto 5px; outline-offset: -2px; }

.input-mini { width: 60px; }

.input-small { width: 90px; }

.input-medium { width: 150px; }

.input-large { width: 210px; }

.input-xlarge { width: 270px; }

.input-xxlarge { width: 530px; }

input[class*=3D"span"], select[class*=3D"span"], textarea[class*=3D"span"],=
 .uneditable-input { float: none; margin-left: 0px; }

input.span1, textarea.span1, .uneditable-input.span1 { width: 50px; }

input.span2, textarea.span2, .uneditable-input.span2 { width: 130px; }

input.span3, textarea.span3, .uneditable-input.span3 { width: 210px; }

input.span4, textarea.span4, .uneditable-input.span4 { width: 290px; }

input.span5, textarea.span5, .uneditable-input.span5 { width: 370px; }

input.span6, textarea.span6, .uneditable-input.span6 { width: 450px; }

input.span7, textarea.span7, .uneditable-input.span7 { width: 530px; }

input.span8, textarea.span8, .uneditable-input.span8 { width: 610px; }

input.span9, textarea.span9, .uneditable-input.span9 { width: 690px; }

input.span10, textarea.span10, .uneditable-input.span10 { width: 770px; }

input.span11, textarea.span11, .uneditable-input.span11 { width: 850px; }

input.span12, textarea.span12, .uneditable-input.span12 { width: 930px; }

input[disabled], select[disabled], textarea[disabled], input[readonly], sel=
ect[readonly], textarea[readonly] { background-color: rgb(245, 245, 245); b=
order-color: rgb(221, 221, 221); cursor: not-allowed; }

.control-group.warning > label, .control-group.warning .help-block, .contro=
l-group.warning .help-inline { color: rgb(192, 152, 83); }

.control-group.warning input, .control-group.warning select, .control-group=
.warning textarea { color: rgb(192, 152, 83); border-color: rgb(192, 152, 8=
3); }

.control-group.warning input:focus, .control-group.warning select:focus, .c=
ontrol-group.warning textarea:focus { border-color: rgb(164, 126, 60); box-=
shadow: rgb(219, 197, 158) 0px 0px 6px; }

.control-group.warning .input-prepend .add-on, .control-group.warning .inpu=
t-append .add-on { color: rgb(192, 152, 83); background-color: rgb(252, 248=
, 227); border-color: rgb(192, 152, 83); }

.control-group.error > label, .control-group.error .help-block, .control-gr=
oup.error .help-inline { color: rgb(185, 74, 72); }

.control-group.error input, .control-group.error select, .control-group.err=
or textarea { color: rgb(185, 74, 72); border-color: rgb(185, 74, 72); }

.control-group.error input:focus, .control-group.error select:focus, .contr=
ol-group.error textarea:focus { border-color: rgb(149, 59, 57); box-shadow:=
 rgb(213, 147, 146) 0px 0px 6px; }

.control-group.error .input-prepend .add-on, .control-group.error .input-ap=
pend .add-on { color: rgb(185, 74, 72); background-color: rgb(242, 222, 222=
); border-color: rgb(185, 74, 72); }

.control-group.success > label, .control-group.success .help-block, .contro=
l-group.success .help-inline { color: rgb(70, 136, 71); }

.control-group.success input, .control-group.success select, .control-group=
.success textarea { color: rgb(70, 136, 71); border-color: rgb(70, 136, 71)=
; }

.control-group.success input:focus, .control-group.success select:focus, .c=
ontrol-group.success textarea:focus { border-color: rgb(53, 102, 53); box-s=
hadow: rgb(122, 186, 123) 0px 0px 6px; }

.control-group.success .input-prepend .add-on, .control-group.success .inpu=
t-append .add-on { color: rgb(70, 136, 71); background-color: rgb(223, 240,=
 216); border-color: rgb(70, 136, 71); }

input:focus:required:invalid, textarea:focus:required:invalid, select:focus=
:required:invalid { color: rgb(185, 74, 72); border-color: rgb(238, 95, 91)=
; }

input:focus:required:invalid:focus, textarea:focus:required:invalid:focus, =
select:focus:required:invalid:focus { border-color: rgb(233, 50, 45); box-s=
hadow: rgb(248, 185, 183) 0px 0px 6px; }

.form-actions { padding: 17px 20px 18px; margin-top: 18px; margin-bottom: 1=
8px; background-color: rgb(245, 245, 245); border-top: 1px solid rgb(221, 2=
21, 221); }

.uneditable-input { display: block; background-color: rgb(255, 255, 255); b=
order-color: rgb(238, 238, 238); box-shadow: rgba(0, 0, 0, 0.0235294) 0px 1=
px 2px inset; cursor: not-allowed; }

::-webkit-input-placeholder { color: rgb(153, 153, 153); }

.help-block { display: block; margin-top: 5px; margin-bottom: 0px; color: r=
gb(153, 153, 153); }

.help-inline { display: inline-block; margin-bottom: 9px; vertical-align: m=
iddle; padding-left: 5px; }

.input-prepend, .input-append { margin-bottom: 5px; }

.input-prepend::before, .input-append::before, .input-prepend::after, .inpu=
t-append::after { display: table; content: ""; }

.input-prepend::after, .input-append::after { clear: both; }

.input-prepend input, .input-append input, .input-prepend .uneditable-input=
, .input-append .uneditable-input { border-radius: 0px 3px 3px 0px; }

.input-prepend input:focus, .input-append input:focus, .input-prepend .uned=
itable-input:focus, .input-append .uneditable-input:focus { position: relat=
ive; z-index: 2; }

.input-prepend .uneditable-input, .input-append .uneditable-input { border-=
left-color: rgb(204, 204, 204); }

.input-prepend .add-on, .input-append .add-on { float: left; display: block=
; width: auto; min-width: 16px; height: 18px; margin-right: -1px; padding: =
4px 5px; font-weight: normal; line-height: 18px; color: rgb(153, 153, 153);=
 text-align: center; text-shadow: rgb(255, 255, 255) 0px 1px 0px; backgroun=
d-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-r=
adius: 3px 0px 0px 3px; }

.input-prepend .active, .input-append .active { background-color: rgb(169, =
219, 169); border-color: rgb(70, 165, 70); }

.input-prepend .add-on { }

.input-append input, .input-append .uneditable-input { float: left; border-=
radius: 3px 0px 0px 3px; }

.input-append .uneditable-input { border-left-color: rgb(238, 238, 238); bo=
rder-right-color: rgb(204, 204, 204); }

.input-append .add-on { margin-right: 0px; margin-left: -1px; border-radius=
: 0px 3px 3px 0px; }

.input-append input:first-child { }

.input-append input:first-child + .add-on { }

.search-query { padding-left: 14px; padding-right: 14px; margin-bottom: 0px=
; border-radius: 14px; }

.form-search input, .form-inline input, .form-horizontal input, .form-searc=
h textarea, .form-inline textarea, .form-horizontal textarea, .form-search =
select, .form-inline select, .form-horizontal select, .form-search .help-in=
line, .form-inline .help-inline, .form-horizontal .help-inline, .form-searc=
h .uneditable-input, .form-inline .uneditable-input, .form-horizontal .uned=
itable-input { display: inline-block; margin-bottom: 0px; }

.form-search .hide, .form-inline .hide, .form-horizontal .hide { display: n=
one; }

.form-search label, .form-inline label, .form-search .input-append, .form-i=
nline .input-append, .form-search .input-prepend, .form-inline .input-prepe=
nd { display: inline-block; }

.form-search .input-append .add-on, .form-inline .input-prepend .add-on, .f=
orm-search .input-append .add-on, .form-inline .input-prepend .add-on { ver=
tical-align: middle; }

.form-search .radio, .form-inline .radio, .form-search .checkbox, .form-inl=
ine .checkbox { margin-bottom: 0px; vertical-align: middle; }

.control-group { margin-bottom: 9px; }

legend + .control-group { margin-top: 18px; -webkit-margin-top-collapse: se=
parate; }

.form-horizontal .control-group { margin-bottom: 18px; }

.form-horizontal .control-group::before, .form-horizontal .control-group::a=
fter { display: table; content: ""; }

.form-horizontal .control-group::after { clear: both; }

.form-horizontal .control-label { float: left; width: 140px; padding-top: 5=
px; text-align: right; }

.form-horizontal .controls { margin-left: 160px; }

.form-horizontal .form-actions { padding-left: 160px; }

table { max-width: 100%; border-collapse: collapse; border-spacing: 0px; }

.table { width: 100%; margin-bottom: 18px; }

.table th, .table td { padding: 8px; line-height: 18px; text-align: left; v=
ertical-align: top; border-top: 1px solid rgb(221, 221, 221); }

.table th { font-weight: bold; }

.table thead th { vertical-align: bottom; }

.table thead:first-child tr th, .table thead:first-child tr td { border-top=
: 0px; }

.table tbody + tbody { border-top: 2px solid rgb(221, 221, 221); }

.table-condensed th, .table-condensed td { padding: 4px 5px; }

.table-bordered { border: 1px solid rgb(221, 221, 221); border-collapse: se=
parate; border-radius: 4px; }

.table-bordered th + th, .table-bordered td + td, .table-bordered th + td, =
.table-bordered td + th { border-left: 1px solid rgb(221, 221, 221); }

.table-bordered thead:first-child tr:first-child th, .table-bordered tbody:=
first-child tr:first-child th, .table-bordered tbody:first-child tr:first-c=
hild td { border-top: 0px; }

.table-bordered thead:first-child tr:first-child th:first-child, .table-bor=
dered tbody:first-child tr:first-child td:first-child { border-radius: 4px =
0px 0px; }

.table-bordered thead:first-child tr:first-child th:last-child, .table-bord=
ered tbody:first-child tr:first-child td:last-child { border-radius: 0px 4p=
x 0px 0px; }

.table-bordered thead:last-child tr:last-child th:first-child, .table-borde=
red tbody:last-child tr:last-child td:first-child { border-radius: 0px 0px =
0px 4px; }

.table-bordered thead:last-child tr:last-child th:last-child, .table-border=
ed tbody:last-child tr:last-child td:last-child { border-radius: 0px 0px 4p=
x; }

.table-striped tbody tr:nth-child(2n+1) td, .table-striped tbody tr:nth-chi=
ld(2n+1) th { background-color: rgb(249, 249, 249); }

.table tbody tr:hover td, .table tbody tr:hover th { background-color: rgb(=
245, 245, 245); }

table .span1 { float: none; width: 44px; margin-left: 0px; }

table .span2 { float: none; width: 124px; margin-left: 0px; }

table .span3 { float: none; width: 204px; margin-left: 0px; }

table .span4 { float: none; width: 284px; margin-left: 0px; }

table .span5 { float: none; width: 364px; margin-left: 0px; }

table .span6 { float: none; width: 444px; margin-left: 0px; }

table .span7 { float: none; width: 524px; margin-left: 0px; }

table .span8 { float: none; width: 604px; margin-left: 0px; }

table .span9 { float: none; width: 684px; margin-left: 0px; }

table .span10 { float: none; width: 764px; margin-left: 0px; }

table .span11 { float: none; width: 844px; margin-left: 0px; }

table .span12 { float: none; width: 924px; margin-left: 0px; }

[class^=3D"icon-"], [class*=3D" icon-"] { display: inline-block; width: 14p=
x; height: 14px; line-height: 14px; vertical-align: text-top; background-im=
age: url("../img/glyphicons-halflings.png"); background-position: 14px 14px=
; background-repeat: no-repeat; }

[class^=3D"icon-"]:last-child, [class*=3D" icon-"]:last-child { }

.icon-white { background-image: url("../img/glyphicons-halflings-white.png"=
); }

.icon-glass { background-position: 0px 0px; }

.icon-music { background-position: -24px 0px; }

.icon-search { background-position: -48px 0px; }

.icon-envelope { background-position: -72px 0px; }

.icon-heart { background-position: -96px 0px; }

.icon-star { background-position: -120px 0px; }

.icon-star-empty { background-position: -144px 0px; }

.icon-user { background-position: -168px 0px; }

.icon-film { background-position: -192px 0px; }

.icon-th-large { background-position: -216px 0px; }

.icon-th { background-position: -240px 0px; }

.icon-th-list { background-position: -264px 0px; }

.icon-ok { background-position: -288px 0px; }

.icon-remove { background-position: -312px 0px; }

.icon-zoom-in { background-position: -336px 0px; }

.icon-zoom-out { background-position: -360px 0px; }

.icon-off { background-position: -384px 0px; }

.icon-signal { background-position: -408px 0px; }

.icon-cog { background-position: -432px 0px; }

.icon-trash { background-position: -456px 0px; }

.icon-home { background-position: 0px -24px; }

.icon-file { background-position: -24px -24px; }

.icon-time { background-position: -48px -24px; }

.icon-road { background-position: -72px -24px; }

.icon-download-alt { background-position: -96px -24px; }

.icon-download { background-position: -120px -24px; }

.icon-upload { background-position: -144px -24px; }

.icon-inbox { background-position: -168px -24px; }

.icon-play-circle { background-position: -192px -24px; }

.icon-repeat { background-position: -216px -24px; }

.icon-refresh { background-position: -240px -24px; }

.icon-list-alt { background-position: -264px -24px; }

.icon-lock { background-position: -287px -24px; }

.icon-flag { background-position: -312px -24px; }

.icon-headphones { background-position: -336px -24px; }

.icon-volume-off { background-position: -360px -24px; }

.icon-volume-down { background-position: -384px -24px; }

.icon-volume-up { background-position: -408px -24px; }

.icon-qrcode { background-position: -432px -24px; }

.icon-barcode { background-position: -456px -24px; }

.icon-tag { background-position: 0px -48px; }

.icon-tags { background-position: -25px -48px; }

.icon-book { background-position: -48px -48px; }

.icon-bookmark { background-position: -72px -48px; }

.icon-print { background-position: -96px -48px; }

.icon-camera { background-position: -120px -48px; }

.icon-font { background-position: -144px -48px; }

.icon-bold { background-position: -167px -48px; }

.icon-italic { background-position: -192px -48px; }

.icon-text-height { background-position: -216px -48px; }

.icon-text-width { background-position: -240px -48px; }

.icon-align-left { background-position: -264px -48px; }

.icon-align-center { background-position: -288px -48px; }

.icon-align-right { background-position: -312px -48px; }

.icon-align-justify { background-position: -336px -48px; }

.icon-list { background-position: -360px -48px; }

.icon-indent-left { background-position: -384px -48px; }

.icon-indent-right { background-position: -408px -48px; }

.icon-facetime-video { background-position: -432px -48px; }

.icon-picture { background-position: -456px -48px; }

.icon-pencil { background-position: 0px -72px; }

.icon-map-marker { background-position: -24px -72px; }

.icon-adjust { background-position: -48px -72px; }

.icon-tint { background-position: -72px -72px; }

.icon-edit { background-position: -96px -72px; }

.icon-share { background-position: -120px -72px; }

.icon-check { background-position: -144px -72px; }

.icon-move { background-position: -168px -72px; }

.icon-step-backward { background-position: -192px -72px; }

.icon-fast-backward { background-position: -216px -72px; }

.icon-backward { background-position: -240px -72px; }

.icon-play { background-position: -264px -72px; }

.icon-pause { background-position: -288px -72px; }

.icon-stop { background-position: -312px -72px; }

.icon-forward { background-position: -336px -72px; }

.icon-fast-forward { background-position: -360px -72px; }

.icon-step-forward { background-position: -384px -72px; }

.icon-eject { background-position: -408px -72px; }

.icon-chevron-left { background-position: -432px -72px; }

.icon-chevron-right { background-position: -456px -72px; }

.icon-plus-sign { background-position: 0px -96px; }

.icon-minus-sign { background-position: -24px -96px; }

.icon-remove-sign { background-position: -48px -96px; }

.icon-ok-sign { background-position: -72px -96px; }

.icon-question-sign { background-position: -96px -96px; }

.icon-info-sign { background-position: -120px -96px; }

.icon-screenshot { background-position: -144px -96px; }

.icon-remove-circle { background-position: -168px -96px; }

.icon-ok-circle { background-position: -192px -96px; }

.icon-ban-circle { background-position: -216px -96px; }

.icon-arrow-left { background-position: -240px -96px; }

.icon-arrow-right { background-position: -264px -96px; }

.icon-arrow-up { background-position: -289px -96px; }

.icon-arrow-down { background-position: -312px -96px; }

.icon-share-alt { background-position: -336px -96px; }

.icon-resize-full { background-position: -360px -96px; }

.icon-resize-small { background-position: -384px -96px; }

.icon-plus { background-position: -408px -96px; }

.icon-minus { background-position: -433px -96px; }

.icon-asterisk { background-position: -456px -96px; }

.icon-exclamation-sign { background-position: 0px -120px; }

.icon-gift { background-position: -24px -120px; }

.icon-leaf { background-position: -48px -120px; }

.icon-fire { background-position: -72px -120px; }

.icon-eye-open { background-position: -96px -120px; }

.icon-eye-close { background-position: -120px -120px; }

.icon-warning-sign { background-position: -144px -120px; }

.icon-plane { background-position: -168px -120px; }

.icon-calendar { background-position: -192px -120px; }

.icon-random { background-position: -216px -120px; }

.icon-comment { background-position: -240px -120px; }

.icon-magnet { background-position: -264px -120px; }

.icon-chevron-up { background-position: -288px -120px; }

.icon-chevron-down { background-position: -313px -119px; }

.icon-retweet { background-position: -336px -120px; }

.icon-shopping-cart { background-position: -360px -120px; }

.icon-folder-close { background-position: -384px -120px; }

.icon-folder-open { background-position: -408px -120px; }

.icon-resize-vertical { background-position: -432px -119px; }

.icon-resize-horizontal { background-position: -456px -118px; }

.dropdown { position: relative; }

.dropdown-toggle { }

.dropdown-toggle:active, .open .dropdown-toggle { outline: 0px; }

.caret { display: inline-block; width: 0px; height: 0px; text-indent: -9999=
9px; vertical-align: top; border-left: 4px solid transparent; border-right:=
 4px solid transparent; border-top: 4px solid rgb(0, 0, 0); opacity: 0.3; c=
ontent: "=E2=86=93"; }

.dropdown .caret { margin-top: 8px; margin-left: 2px; }

.dropdown:hover .caret, .open.dropdown .caret { opacity: 1; }

.dropdown-menu { position: absolute; top: 100%; left: 0px; z-index: 1000; f=
loat: left; display: none; min-width: 160px; padding: 4px 0px; margin: 0px;=
 list-style: none; background-color: rgb(255, 255, 255); border-color: rgba=
(0, 0, 0, 0.2); border-style: solid; border-width: 1px; border-radius: 0px =
0px 5px 5px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 10px; -webkit-backgroun=
d-clip: padding-box; background-clip: padding-box; }

.dropdown-menu.bottom-up { top: auto; bottom: 100%; margin-bottom: 2px; }

.dropdown-menu .divider { height: 1px; margin: 5px 1px; overflow: hidden; b=
ackground-color: rgb(229, 229, 229); border-bottom: 1px solid rgb(255, 255,=
 255); }

.dropdown-menu a { display: block; padding: 3px 15px; clear: both; font-wei=
ght: normal; line-height: 18px; color: rgb(85, 85, 85); white-space: nowrap=
; }

.dropdown-menu li > a:hover, .dropdown-menu .active > a, .dropdown-menu .ac=
tive > a:hover { color: rgb(255, 255, 255); text-decoration: none; backgrou=
nd-color: rgb(0, 136, 204); }

.dropdown.open { }

.dropdown.open .dropdown-toggle { color: rgb(255, 255, 255); background: rg=
ba(0, 0, 0, 0.298039); }

.dropdown.open .dropdown-menu { display: block; }

.typeahead { margin-top: 2px; border-radius: 4px; }

.well { min-height: 20px; padding: 19px; margin-bottom: 20px; background-co=
lor: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.0470588); border=
-radius: 4px; box-shadow: rgba(0, 0, 0, 0.0470588) 0px 1px 1px inset; }

.well blockquote { border-color: rgba(0, 0, 0, 0.14902); }

.fade { transition: opacity 0.15s linear; opacity: 0; }

.fade.in { opacity: 1; }

.collapse { transition: height 0.35s ease; position: relative; overflow: hi=
dden; height: 0px; }

.collapse.in { height: auto; }

.close { float: right; font-size: 20px; font-weight: bold; line-height: 18p=
x; color: rgb(0, 0, 0); text-shadow: rgb(255, 255, 255) 0px 1px 0px; opacit=
y: 0.2; }

.close:hover { color: rgb(0, 0, 0); text-decoration: none; opacity: 0.4; cu=
rsor: pointer; }

.btn { display: inline-block; padding: 4px 10px; margin-bottom: 0px; font-s=
ize: 13px; line-height: 18px; color: rgb(51, 51, 51); text-align: center; t=
ext-shadow: rgba(255, 255, 255, 0.74902) 0px 1px 1px; vertical-align: middl=
e; background-color: rgb(245, 245, 245); background-image: -webkit-linear-g=
radient(top, rgb(255, 255, 255), rgb(230, 230, 230)); background-repeat: re=
peat-x; border-width: 1px; border-style: solid; border-color: rgb(204, 204,=
 204) rgb(204, 204, 204) rgb(187, 187, 187); border-image: initial; border-=
radius: 4px; box-shadow: rgba(255, 255, 255, 0.2) 0px 1px 0px inset, rgba(0=
, 0, 0, 0.0470588) 0px 1px 2px; cursor: pointer; }

.btn:hover, .btn:active, .btn.active, .btn.disabled, .btn[disabled] { backg=
round-color: rgb(230, 230, 230); }

.btn:active, .btn.active { }

.btn:first-child { }

.btn:hover { color: rgb(51, 51, 51); text-decoration: none; background-colo=
r: rgb(230, 230, 230); background-position: 0px -15px; transition: backgrou=
nd-position 0.1s linear; }

.btn:focus { outline: -webkit-focus-ring-color auto 5px; outline-offset: -2=
px; }

.btn.active, .btn:active { background-image: none; box-shadow: rgba(0, 0, 0=
, 0.14902) 0px 2px 4px inset, rgba(0, 0, 0, 0.0470588) 0px 1px 2px; backgro=
und-color: rgb(230, 230, 230); outline: 0px; }

.btn.disabled, .btn[disabled] { cursor: default; background-image: none; ba=
ckground-color: rgb(230, 230, 230); opacity: 0.65; box-shadow: none; }

.btn-large { padding: 9px 14px; font-size: 15px; line-height: normal; borde=
r-radius: 5px; }

.btn-large [class^=3D"icon-"] { margin-top: 1px; }

.btn-small { padding: 5px 9px; font-size: 11px; line-height: 16px; }

.btn-small [class^=3D"icon-"] { margin-top: -1px; }

.btn-mini { padding: 2px 6px; font-size: 11px; line-height: 14px; }

.btn-primary, .btn-primary:hover, .btn-warning, .btn-warning:hover, .btn-da=
nger, .btn-danger:hover, .btn-success, .btn-success:hover, .btn-info, .btn-=
info:hover, .btn-inverse, .btn-inverse:hover { text-shadow: rgba(0, 0, 0, 0=
.247059) 0px -1px 0px; color: rgb(255, 255, 255); }

.btn-primary.active, .btn-warning.active, .btn-danger.active, .btn-success.=
active, .btn-info.active, .btn-dark.active { color: rgba(255, 255, 255, 0.7=
4902); }

.btn-primary { background-color: rgb(0, 109, 204); background-image: -webki=
t-linear-gradient(top, rgb(0, 136, 204), rgb(0, 68, 204)); background-repea=
t: repeat-x; border-color: rgba(0, 0, 0, 0.0980392) rgba(0, 0, 0, 0.0980392=
) rgba(0, 0, 0, 0.247059); }

.btn-primary:hover, .btn-primary:active, .btn-primary.active, .btn-primary.=
disabled, .btn-primary[disabled] { background-color: rgb(0, 68, 204); }

.btn-primary:active, .btn-primary.active { }

.btn-warning { background-color: rgb(250, 167, 50); background-image: -webk=
it-linear-gradient(top, rgb(251, 180, 80), rgb(248, 148, 6)); background-re=
peat: repeat-x; border-color: rgba(0, 0, 0, 0.0980392) rgba(0, 0, 0, 0.0980=
392) rgba(0, 0, 0, 0.247059); }

.btn-warning:hover, .btn-warning:active, .btn-warning.active, .btn-warning.=
disabled, .btn-warning[disabled] { background-color: rgb(248, 148, 6); }

.btn-warning:active, .btn-warning.active { }

.btn-danger { background-color: rgb(218, 79, 73); background-image: -webkit=
-linear-gradient(top, rgb(238, 95, 91), rgb(189, 54, 47)); background-repea=
t: repeat-x; border-color: rgba(0, 0, 0, 0.0980392) rgba(0, 0, 0, 0.0980392=
) rgba(0, 0, 0, 0.247059); }

.btn-danger:hover, .btn-danger:active, .btn-danger.active, .btn-danger.disa=
bled, .btn-danger[disabled] { background-color: rgb(189, 54, 47); }

.btn-danger:active, .btn-danger.active { }

.btn-success { background-color: rgb(91, 183, 91); background-image: -webki=
t-linear-gradient(top, rgb(98, 196, 98), rgb(81, 163, 81)); background-repe=
at: repeat-x; border-color: rgba(0, 0, 0, 0.0980392) rgba(0, 0, 0, 0.098039=
2) rgba(0, 0, 0, 0.247059); }

.btn-success:hover, .btn-success:active, .btn-success.active, .btn-success.=
disabled, .btn-success[disabled] { background-color: rgb(81, 163, 81); }

.btn-success:active, .btn-success.active { }

.btn-info { background-color: rgb(73, 175, 205); background-image: -webkit-=
linear-gradient(top, rgb(91, 192, 222), rgb(47, 150, 180)); background-repe=
at: repeat-x; border-color: rgba(0, 0, 0, 0.0980392) rgba(0, 0, 0, 0.098039=
2) rgba(0, 0, 0, 0.247059); }

.btn-info:hover, .btn-info:active, .btn-info.active, .btn-info.disabled, .b=
tn-info[disabled] { background-color: rgb(47, 150, 180); }

.btn-info:active, .btn-info.active { }

.btn-inverse { background-color: rgb(57, 57, 57); background-image: -webkit=
-linear-gradient(top, rgb(69, 69, 69), rgb(38, 38, 38)); background-repeat:=
 repeat-x; border-color: rgba(0, 0, 0, 0.0980392) rgba(0, 0, 0, 0.0980392) =
rgba(0, 0, 0, 0.247059); }

.btn-inverse:hover, .btn-inverse:active, .btn-inverse.active, .btn-inverse.=
disabled, .btn-inverse[disabled] { background-color: rgb(38, 38, 38); }

.btn-inverse:active, .btn-inverse.active { }

button.btn, input[type=3D"submit"].btn { }

button.btn.large, input[type=3D"submit"].btn.large { }

button.btn.small, input[type=3D"submit"].btn.small { }

.btn-group { position: relative; }

.btn-group::before, .btn-group::after { display: table; content: ""; }

.btn-group::after { clear: both; }

.btn-group:first-child { }

.btn-group + .btn-group { margin-left: 5px; }

.btn-toolbar { margin-top: 9px; margin-bottom: 9px; }

.btn-toolbar .btn-group { display: inline-block; }

.btn-group .btn { position: relative; float: left; margin-left: -1px; borde=
r-radius: 0px; }

.btn-group .btn:first-child { margin-left: 0px; border-top-left-radius: 4px=
; border-bottom-left-radius: 4px; }

.btn-group .btn:last-child, .btn-group .dropdown-toggle { border-top-right-=
radius: 4px; border-bottom-right-radius: 4px; }

.btn-group .btn.large:first-child { margin-left: 0px; border-top-left-radiu=
s: 6px; border-bottom-left-radius: 6px; }

.btn-group .btn.large:last-child, .btn-group .large.dropdown-toggle { borde=
r-top-right-radius: 6px; border-bottom-right-radius: 6px; }

.btn-group .btn:hover, .btn-group .btn:focus, .btn-group .btn:active, .btn-=
group .btn.active { z-index: 2; }

.btn-group .dropdown-toggle:active, .btn-group.open .dropdown-toggle { outl=
ine: 0px; }

.btn-group .dropdown-toggle { padding-left: 8px; padding-right: 8px; box-sh=
adow: rgba(255, 255, 255, 0.121569) 1px 0px 0px inset, rgba(255, 255, 255, =
0.2) 0px 1px 0px inset, rgba(0, 0, 0, 0.0470588) 0px 1px 2px; }

.btn-group.open { }

.btn-group.open .dropdown-menu { display: block; margin-top: 1px; border-ra=
dius: 5px; }

.btn-group.open .dropdown-toggle { background-image: none; box-shadow: rgba=
(0, 0, 0, 0.14902) 0px 1px 6px inset, rgba(0, 0, 0, 0.0470588) 0px 1px 2px;=
 }

.btn .caret { margin-top: 7px; margin-left: 0px; }

.btn:hover .caret, .open.btn-group .caret { opacity: 1; }

.btn-primary .caret, .btn-danger .caret, .btn-info .caret, .btn-success .ca=
ret, .btn-inverse .caret { border-top-color: rgb(255, 255, 255); opacity: 0=
.75; }

.btn-small .caret { margin-top: 4px; }

.alert { padding: 8px 35px 8px 14px; margin-bottom: 18px; text-shadow: rgba=
(255, 255, 255, 0.498039) 0px 1px 0px; background-color: rgb(252, 248, 227)=
; border: 1px solid rgb(251, 238, 213); border-radius: 4px; }

.alert, .alert-heading { color: rgb(192, 152, 83); }

.alert .close { position: relative; top: -2px; right: -21px; line-height: 1=
8px; }

.alert-success { background-color: rgb(223, 240, 216); border-color: rgb(21=
4, 233, 198); }

.alert-success, .alert-success .alert-heading { color: rgb(70, 136, 71); }

.alert-danger, .alert-error { background-color: rgb(242, 222, 222); border-=
color: rgb(238, 211, 215); }

.alert-danger, .alert-error, .alert-danger .alert-heading, .alert-error .al=
ert-heading { color: rgb(185, 74, 72); }

.alert-info { background-color: rgb(217, 237, 247); border-color: rgb(188, =
232, 241); }

.alert-info, .alert-info .alert-heading { color: rgb(58, 135, 173); }

.alert-block { padding-top: 14px; padding-bottom: 14px; }

.alert-block > p, .alert-block > ul { margin-bottom: 0px; }

.alert-block p + p { margin-top: 5px; }

.nav { margin-left: 0px; margin-bottom: 18px; list-style: none; }

.nav > li > a { display: block; }

.nav > li > a:hover { text-decoration: none; background-color: rgb(238, 238=
, 238); }

.nav .nav-header { display: block; padding: 3px 15px; font-size: 11px; font=
-weight: bold; line-height: 18px; color: rgb(153, 153, 153); text-shadow: r=
gba(255, 255, 255, 0.498039) 0px 1px 0px; text-transform: uppercase; }

.nav li + .nav-header { margin-top: 9px; }

.nav-list { padding-left: 14px; padding-right: 14px; margin-bottom: 0px; }

.nav-list > li > a, .nav-list .nav-header { margin-left: -15px; margin-righ=
t: -15px; text-shadow: rgba(255, 255, 255, 0.498039) 0px 1px 0px; }

.nav-list > li > a { padding: 3px 15px; }

.nav-list .active > a, .nav-list .active > a:hover { color: rgb(255, 255, 2=
55); text-shadow: rgba(0, 0, 0, 0.2) 0px -1px 0px; background-color: rgb(0,=
 136, 204); }

.nav-list [class^=3D"icon-"] { margin-right: 2px; }

.nav-tabs, .nav-pills { }

.nav-tabs::before, .nav-pills::before, .nav-tabs::after, .nav-pills::after =
{ display: table; content: ""; }

.nav-tabs::after, .nav-pills::after { clear: both; }

.nav-tabs > li, .nav-pills > li { float: left; }

.nav-tabs > li > a, .nav-pills > li > a { padding-right: 12px; padding-left=
: 12px; margin-right: 2px; line-height: 14px; }

.nav-tabs { border-bottom: 1px solid rgb(221, 221, 221); }

.nav-tabs > li { margin-bottom: -1px; }

.nav-tabs > li > a { padding-top: 9px; padding-bottom: 9px; border: 1px sol=
id transparent; border-radius: 4px 4px 0px 0px; }

.nav-tabs > li > a:hover { border-color: rgb(238, 238, 238) rgb(238, 238, 2=
38) rgb(221, 221, 221); }

.nav-tabs > .active > a, .nav-tabs > .active > a:hover { color: rgb(85, 85,=
 85); background-color: rgb(255, 255, 255); border-width: 1px; border-style=
: solid; border-color: rgb(221, 221, 221) rgb(221, 221, 221) transparent; b=
order-image: initial; cursor: default; }

.nav-pills > li > a { padding-top: 8px; padding-bottom: 8px; margin-top: 2p=
x; margin-bottom: 2px; border-radius: 5px; }

.nav-pills .active > a, .nav-pills .active > a:hover { color: rgb(255, 255,=
 255); background-color: rgb(0, 136, 204); }

.nav-stacked > li { float: none; }

.nav-stacked > li > a { margin-right: 0px; }

.nav-tabs.nav-stacked { border-bottom: 0px; }

.nav-tabs.nav-stacked > li > a { border: 1px solid rgb(221, 221, 221); bord=
er-radius: 0px; }

.nav-tabs.nav-stacked > li:first-child > a { border-radius: 4px 4px 0px 0px=
; }

.nav-tabs.nav-stacked > li:last-child > a { border-radius: 0px 0px 4px 4px;=
 }

.nav-tabs.nav-stacked > li > a:hover { border-color: rgb(221, 221, 221); z-=
index: 2; }

.nav-pills.nav-stacked > li > a { margin-bottom: 3px; }

.nav-pills.nav-stacked > li:last-child > a { margin-bottom: 1px; }

.nav-tabs .dropdown-menu, .nav-pills .dropdown-menu { margin-top: 1px; bord=
er-width: 1px; }

.nav-pills .dropdown-menu { border-radius: 4px; }

.nav-tabs .dropdown-toggle .caret, .nav-pills .dropdown-toggle .caret { bor=
der-top-color: rgb(0, 136, 204); margin-top: 6px; }

.nav-tabs .dropdown-toggle:hover .caret, .nav-pills .dropdown-toggle:hover =
.caret { border-top-color: rgb(0, 85, 128); }

.nav-tabs .active .dropdown-toggle .caret, .nav-pills .active .dropdown-tog=
gle .caret { border-top-color: rgb(51, 51, 51); }

.nav > .dropdown.active > a:hover { color: rgb(0, 0, 0); cursor: pointer; }

.nav-tabs .open .dropdown-toggle, .nav-pills .open .dropdown-toggle, .nav >=
 .open.active > a:hover { color: rgb(255, 255, 255); background-color: rgb(=
153, 153, 153); border-color: rgb(153, 153, 153); }

.nav .open .caret, .nav .open.active .caret, .nav .open a:hover .caret { bo=
rder-top-color: rgb(255, 255, 255); opacity: 1; }

.tabs-stacked .open > a:hover { border-color: rgb(153, 153, 153); }

.tabbable { }

.tabbable::before, .tabbable::after { display: table; content: ""; }

.tabbable::after { clear: both; }

.tab-content { overflow: hidden; }

.tabs-below .nav-tabs, .tabs-right .nav-tabs, .tabs-left .nav-tabs { border=
-bottom: 0px; }

.tab-content > .tab-pane, .pill-content > .pill-pane { display: none; }

.tab-content > .active, .pill-content > .active { display: block; }

.tabs-below .nav-tabs { border-top: 1px solid rgb(221, 221, 221); }

.tabs-below .nav-tabs > li { margin-top: -1px; margin-bottom: 0px; }

.tabs-below .nav-tabs > li > a { border-radius: 0px 0px 4px 4px; }

.tabs-below .nav-tabs > li > a:hover { border-bottom-color: transparent; bo=
rder-top-color: rgb(221, 221, 221); }

.tabs-below .nav-tabs .active > a, .tabs-below .nav-tabs .active > a:hover =
{ border-color: transparent rgb(221, 221, 221) rgb(221, 221, 221); }

.tabs-left .nav-tabs > li, .tabs-right .nav-tabs > li { float: none; }

.tabs-left .nav-tabs > li > a, .tabs-right .nav-tabs > li > a { min-width: =
74px; margin-right: 0px; margin-bottom: 3px; }

.tabs-left .nav-tabs { float: left; margin-right: 19px; border-right: 1px s=
olid rgb(221, 221, 221); }

.tabs-left .nav-tabs > li > a { margin-right: -1px; border-radius: 4px 0px =
0px 4px; }

.tabs-left .nav-tabs > li > a:hover { border-color: rgb(238, 238, 238) rgb(=
221, 221, 221) rgb(238, 238, 238) rgb(238, 238, 238); }

.tabs-left .nav-tabs .active > a, .tabs-left .nav-tabs .active > a:hover { =
border-color: rgb(221, 221, 221) transparent rgb(221, 221, 221) rgb(221, 22=
1, 221); }

.tabs-right .nav-tabs { float: right; margin-left: 19px; border-left: 1px s=
olid rgb(221, 221, 221); }

.tabs-right .nav-tabs > li > a { margin-left: -1px; border-radius: 0px 4px =
4px 0px; }

.tabs-right .nav-tabs > li > a:hover { border-color: rgb(238, 238, 238) rgb=
(238, 238, 238) rgb(238, 238, 238) rgb(221, 221, 221); }

.tabs-right .nav-tabs .active > a, .tabs-right .nav-tabs .active > a:hover =
{ border-color: rgb(221, 221, 221) rgb(221, 221, 221) rgb(221, 221, 221) tr=
ansparent; }

.navbar { overflow: visible; margin-bottom: 18px; }

.navbar-inner { padding-left: 20px; padding-right: 20px; background-color: =
rgb(44, 44, 44); background-image: -webkit-linear-gradient(top, rgb(51, 51,=
 51), rgb(34, 34, 34)); background-repeat: repeat-x; border-radius: 4px; bo=
x-shadow: rgba(0, 0, 0, 0.247059) 0px 1px 3px, rgba(0, 0, 0, 0.0980392) 0px=
 -1px 0px inset; }

.btn-navbar { display: none; float: right; padding: 7px 10px; margin-left: =
5px; margin-right: 5px; background-color: rgb(44, 44, 44); background-image=
: -webkit-linear-gradient(top, rgb(51, 51, 51), rgb(34, 34, 34)); backgroun=
d-repeat: repeat-x; border-color: rgba(0, 0, 0, 0.0980392) rgba(0, 0, 0, 0.=
0980392) rgba(0, 0, 0, 0.247059); box-shadow: rgba(255, 255, 255, 0.0980392=
) 0px 1px 0px inset, rgba(255, 255, 255, 0.0745098) 0px 1px 0px; }

.btn-navbar:hover, .btn-navbar:active, .btn-navbar.active, .btn-navbar.disa=
bled, .btn-navbar[disabled] { background-color: rgb(34, 34, 34); }

.btn-navbar:active, .btn-navbar.active { }

.btn-navbar .icon-bar { display: block; width: 18px; height: 2px; backgroun=
d-color: rgb(245, 245, 245); border-radius: 1px; box-shadow: rgba(0, 0, 0, =
0.247059) 0px 1px 0px; }

.btn-navbar .icon-bar + .icon-bar { margin-top: 3px; }

.nav-collapse.collapse { height: auto; }

.navbar .brand:hover { text-decoration: none; }

.navbar .brand { float: left; display: block; padding: 8px 20px 12px; margi=
n-left: -20px; font-size: 20px; font-weight: 200; line-height: 1; color: rg=
b(255, 255, 255); }

.navbar .navbar-text { margin-bottom: 0px; line-height: 40px; color: rgb(15=
3, 153, 153); }

.navbar .navbar-text a:hover { color: rgb(255, 255, 255); background-color:=
 transparent; }

.navbar .btn, .navbar .btn-group { margin-top: 5px; }

.navbar .btn-group .btn { margin-top: 0px; }

.navbar-form { margin-bottom: 0px; }

.navbar-form::before, .navbar-form::after { display: table; content: ""; }

.navbar-form::after { clear: both; }

.navbar-form input, .navbar-form select { display: inline-block; margin-top=
: 5px; margin-bottom: 0px; }

.navbar-form .radio, .navbar-form .checkbox { margin-top: 5px; }

.navbar-form input[type=3D"image"], .navbar-form input[type=3D"checkbox"], =
.navbar-form input[type=3D"radio"] { margin-top: 3px; }

.navbar-form .input-append, .navbar-form .input-prepend { margin-top: 6px; =
white-space: nowrap; }

.navbar-form .input-append input, .navbar-form .input-prepend input { margi=
n-top: 0px; }

.navbar-search { position: relative; float: left; margin-top: 6px; margin-b=
ottom: 0px; }

.navbar-search .search-query { padding: 4px 9px; font-family: "Helvetica Ne=
ue", Helvetica, Arial, sans-serif; font-size: 13px; font-weight: normal; li=
ne-height: 1; color: rgba(255, 255, 255, 0.74902); background: rgba(255, 25=
5, 255, 0.298039); border: 1px solid rgb(17, 17, 17); box-shadow: rgba(0, 0=
, 0, 0.0980392) 0px 1px 2px inset, rgba(255, 255, 255, 0.14902) 0px 1px 0px=
; transition: none; }

.navbar-search .search-query::-webkit-input-placeholder { color: rgb(238, 2=
38, 238); }

.navbar-search .search-query:hover { color: rgb(255, 255, 255); background-=
color: rgba(255, 255, 255, 0.498039); }

.navbar-search .search-query:focus, .navbar-search .search-query.focused { =
padding: 5px 10px; color: rgb(51, 51, 51); text-shadow: rgb(255, 255, 255) =
0px 1px 0px; background-color: rgb(255, 255, 255); border: 0px; box-shadow:=
 rgba(0, 0, 0, 0.14902) 0px 0px 3px; outline: 0px; }

.navbar-fixed-top { position: fixed; top: 0px; right: 0px; left: 0px; z-ind=
ex: 1030; }

.navbar-fixed-top .navbar-inner { padding-left: 0px; padding-right: 0px; bo=
rder-radius: 0px; }

.navbar .nav { position: relative; left: 0px; display: block; float: left; =
margin: 0px 10px 0px 0px; }

.navbar .nav.pull-right { float: right; }

.navbar .nav > li { display: block; float: left; }

.navbar .nav > li > a { float: none; padding: 10px 10px 11px; line-height: =
19px; color: rgb(153, 153, 153); text-decoration: none; text-shadow: rgba(0=
, 0, 0, 0.247059) 0px -1px 0px; }

.navbar .nav > li > a:hover { background-color: transparent; color: rgb(255=
, 255, 255); text-decoration: none; }

.navbar .nav .active > a, .navbar .nav .active > a:hover { color: rgb(255, =
255, 255); text-decoration: none; background-color: rgb(34, 34, 34); }

.navbar .divider-vertical { height: 40px; width: 1px; margin: 0px 9px; over=
flow: hidden; background-color: rgb(34, 34, 34); border-right: 1px solid rg=
b(51, 51, 51); }

.navbar .nav.pull-right { margin-left: 10px; margin-right: 0px; }

.navbar .dropdown-menu { margin-top: 1px; border-radius: 4px; }

.navbar .dropdown-menu::before { content: ""; display: inline-block; border=
-left: 7px solid transparent; border-right: 7px solid transparent; border-b=
ottom: 7px solid rgba(0, 0, 0, 0.2); position: absolute; top: -7px; left: 9=
px; }

.navbar .dropdown-menu::after { content: ""; display: inline-block; border-=
left: 6px solid transparent; border-right: 6px solid transparent; border-bo=
ttom: 6px solid rgb(255, 255, 255); position: absolute; top: -6px; left: 10=
px; }

.navbar .nav .dropdown-toggle .caret, .navbar .nav .open.dropdown .caret { =
border-top-color: rgb(255, 255, 255); }

.navbar .nav .active .caret { opacity: 1; }

.navbar .nav .open > .dropdown-toggle, .navbar .nav .active > .dropdown-tog=
gle, .navbar .nav .open.active > .dropdown-toggle { background-color: trans=
parent; }

.navbar .nav .active > .dropdown-toggle:hover { color: rgb(255, 255, 255); =
}

.navbar .nav.pull-right .dropdown-menu { left: auto; right: 0px; }

.navbar .nav.pull-right .dropdown-menu::before { left: auto; right: 12px; }

.navbar .nav.pull-right .dropdown-menu::after { left: auto; right: 13px; }

.breadcrumb { padding: 7px 14px; margin: 0px 0px 18px; background-color: rg=
b(251, 251, 251); background-image: -webkit-linear-gradient(top, rgb(255, 2=
55, 255), rgb(245, 245, 245)); background-repeat: repeat-x; border: 1px sol=
id rgb(221, 221, 221); border-radius: 3px; box-shadow: rgb(255, 255, 255) 0=
px 1px 0px inset; }

.breadcrumb li { display: inline-block; text-shadow: rgb(255, 255, 255) 0px=
 1px 0px; }

.breadcrumb .divider { padding: 0px 5px; color: rgb(153, 153, 153); }

.breadcrumb .active a { color: rgb(51, 51, 51); }

.pagination { height: 36px; margin: 18px 0px; }

.pagination ul { display: inline-block; margin-left: 0px; margin-bottom: 0p=
x; border-radius: 3px; box-shadow: rgba(0, 0, 0, 0.0470588) 0px 1px 2px; }

.pagination li { display: inline; }

.pagination a { float: left; padding: 0px 14px; line-height: 34px; text-dec=
oration: none; border-width: 1px 1px 1px 0px; border-style: solid; border-c=
olor: rgb(221, 221, 221); border-image: initial; }

.pagination a:hover, .pagination .active a { background-color: rgb(245, 245=
, 245); }

.pagination .active a { color: rgb(153, 153, 153); cursor: default; }

.pagination .disabled a, .pagination .disabled a:hover { color: rgb(153, 15=
3, 153); background-color: transparent; cursor: default; }

.pagination li:first-child a { border-left-width: 1px; border-radius: 3px 0=
px 0px 3px; }

.pagination li:last-child a { border-radius: 0px 3px 3px 0px; }

.pagination-centered { text-align: center; }

.pagination-right { text-align: right; }

.pager { margin-left: 0px; margin-bottom: 18px; list-style: none; text-alig=
n: center; }

.pager::before, .pager::after { display: table; content: ""; }

.pager::after { clear: both; }

.pager li { display: inline; }

.pager a { display: inline-block; padding: 5px 14px; background-color: rgb(=
255, 255, 255); border: 1px solid rgb(221, 221, 221); border-radius: 15px; =
}

.pager a:hover { text-decoration: none; background-color: rgb(245, 245, 245=
); }

.pager .next a { float: right; }

.pager .previous a { float: left; }

.modal-open .dropdown-menu { z-index: 2050; }

.modal-open .dropdown.open { }

.modal-open .popover { z-index: 2060; }

.modal-open .tooltip { z-index: 2070; }

.modal-backdrop { position: fixed; top: 0px; right: 0px; bottom: 0px; left:=
 0px; z-index: 1040; background-color: rgb(0, 0, 0); }

.modal-backdrop.fade { opacity: 0; }

.modal-backdrop, .modal-backdrop.fade.in { opacity: 0.8; }

.modal { position: fixed; top: 50%; left: 50%; z-index: 1050; max-height: 5=
00px; overflow: auto; width: 560px; margin: -250px 0px 0px -280px; backgrou=
nd-color: rgb(255, 255, 255); border: 1px solid rgba(0, 0, 0, 0.298039); bo=
rder-radius: 6px; box-shadow: rgba(0, 0, 0, 0.298039) 0px 3px 7px; -webkit-=
background-clip: padding-box; background-clip: padding-box; }

.modal.fade { transition: opacity 0.3s linear, top 0.3s ease-out; top: -25%=
; }

.modal.fade.in { top: 50%; }

.modal-header { padding: 9px 15px; border-bottom: 1px solid rgb(238, 238, 2=
38); }

.modal-header .close { margin-top: 2px; }

.modal-body { padding: 15px; }

.modal-body .modal-form { margin-bottom: 0px; }

.modal-footer { padding: 14px 15px 15px; margin-bottom: 0px; background-col=
or: rgb(245, 245, 245); border-top: 1px solid rgb(221, 221, 221); border-ra=
dius: 0px 0px 6px 6px; box-shadow: rgb(255, 255, 255) 0px 1px 0px inset; }

.modal-footer::before, .modal-footer::after { display: table; content: ""; =
}

.modal-footer::after { clear: both; }

.modal-footer .btn { float: right; margin-left: 5px; margin-bottom: 0px; }

.tooltip { position: absolute; z-index: 1020; display: block; visibility: v=
isible; padding: 5px; font-size: 11px; opacity: 0; }

.tooltip.in { opacity: 0.8; }

.tooltip.top { margin-top: -2px; }

.tooltip.right { margin-left: 2px; }

.tooltip.bottom { margin-top: 2px; }

.tooltip.left { margin-left: -2px; }

.tooltip.top .tooltip-arrow { bottom: 0px; left: 50%; margin-left: -5px; bo=
rder-left: 5px solid transparent; border-right: 5px solid transparent; bord=
er-top: 5px solid rgb(0, 0, 0); }

.tooltip.left .tooltip-arrow { top: 50%; right: 0px; margin-top: -5px; bord=
er-top: 5px solid transparent; border-bottom: 5px solid transparent; border=
-left: 5px solid rgb(0, 0, 0); }

.tooltip.bottom .tooltip-arrow { top: 0px; left: 50%; margin-left: -5px; bo=
rder-left: 5px solid transparent; border-right: 5px solid transparent; bord=
er-bottom: 5px solid rgb(0, 0, 0); }

.tooltip.right .tooltip-arrow { top: 50%; left: 0px; margin-top: -5px; bord=
er-top: 5px solid transparent; border-bottom: 5px solid transparent; border=
-right: 5px solid rgb(0, 0, 0); }

.tooltip-inner { max-width: 200px; padding: 3px 8px; color: rgb(255, 255, 2=
55); text-align: center; text-decoration: none; background-color: rgb(0, 0,=
 0); border-radius: 4px; }

.tooltip-arrow { position: absolute; width: 0px; height: 0px; }

.popover { position: absolute; top: 0px; left: 0px; z-index: 1010; display:=
 none; padding: 5px; }

.popover.top { margin-top: -5px; }

.popover.right { margin-left: 5px; }

.popover.bottom { margin-top: 5px; }

.popover.left { margin-left: -5px; }

.popover.top .arrow { bottom: 0px; left: 50%; margin-left: -5px; border-lef=
t: 5px solid transparent; border-right: 5px solid transparent; border-top: =
5px solid rgb(0, 0, 0); }

.popover.right .arrow { top: 50%; left: 0px; margin-top: -5px; border-top: =
5px solid transparent; border-bottom: 5px solid transparent; border-right: =
5px solid rgb(0, 0, 0); }

.popover.bottom .arrow { top: 0px; left: 50%; margin-left: -5px; border-lef=
t: 5px solid transparent; border-right: 5px solid transparent; border-botto=
m: 5px solid rgb(0, 0, 0); }

.popover.left .arrow { top: 50%; right: 0px; margin-top: -5px; border-top: =
5px solid transparent; border-bottom: 5px solid transparent; border-left: 5=
px solid rgb(0, 0, 0); }

.popover .arrow { position: absolute; width: 0px; height: 0px; }

.popover-inner { padding: 3px; width: 280px; overflow: hidden; background: =
rgba(0, 0, 0, 0.8); border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.298039)=
 0px 3px 7px; }

.popover-title { padding: 9px 15px; line-height: 1; background-color: rgb(2=
45, 245, 245); border-bottom: 1px solid rgb(238, 238, 238); border-radius: =
3px 3px 0px 0px; }

.popover-content { padding: 14px; background-color: rgb(255, 255, 255); bor=
der-radius: 0px 0px 3px 3px; -webkit-background-clip: padding-box; backgrou=
nd-clip: padding-box; }

.popover-content p, .popover-content ul, .popover-content ol { margin-botto=
m: 0px; }

.thumbnails { margin-left: -20px; list-style: none; }

.thumbnails::before, .thumbnails::after { display: table; content: ""; }

.thumbnails::after { clear: both; }

.thumbnails > li { float: left; margin: 0px 0px 18px 20px; }

.thumbnail { display: block; padding: 4px; line-height: 1; border: 1px soli=
d rgb(221, 221, 221); border-radius: 4px; box-shadow: rgba(0, 0, 0, 0.07450=
98) 0px 1px 1px; }

a.thumbnail:hover { border-color: rgb(0, 136, 204); box-shadow: rgba(0, 105=
, 214, 0.247059) 0px 1px 4px; }

.thumbnail > img { display: block; max-width: 100%; margin-left: auto; marg=
in-right: auto; }

.thumbnail .caption { padding: 9px; }

.label { padding: 2px 4px 3px; font-size: 11.05px; font-weight: bold; color=
: rgb(255, 255, 255); text-shadow: rgba(0, 0, 0, 0.247059) 0px -1px 0px; ba=
ckground-color: rgb(153, 153, 153); border-radius: 3px; }

.label:hover { color: rgb(255, 255, 255); text-decoration: none; }

.label-important { background-color: rgb(185, 74, 72); }

.label-important:hover { background-color: rgb(149, 59, 57); }

.label-warning { background-color: rgb(248, 148, 6); }

.label-warning:hover { background-color: rgb(198, 118, 5); }

.label-success { background-color: rgb(70, 136, 71); }

.label-success:hover { background-color: rgb(53, 102, 53); }

.label-info { background-color: rgb(58, 135, 173); }

.label-info:hover { background-color: rgb(45, 105, 135); }

@-webkit-keyframes progress-bar-stripes {=20
  0% { background-position: 0px 0px; }
  100% { background-position: 40px 0px; }
}

@keyframes progress-bar-stripes {=20
  0% { background-position: 0px 0px; }
  100% { background-position: 40px 0px; }
}

.progress { overflow: hidden; height: 18px; margin-bottom: 18px; background=
-color: rgb(247, 247, 247); background-image: -webkit-linear-gradient(top, =
rgb(245, 245, 245), rgb(249, 249, 249)); background-repeat: repeat-x; box-s=
hadow: rgba(0, 0, 0, 0.0980392) 0px 1px 2px inset; border-radius: 4px; }

.progress .bar { width: 0%; height: 18px; color: rgb(255, 255, 255); font-s=
ize: 12px; text-align: center; text-shadow: rgba(0, 0, 0, 0.247059) 0px -1p=
x 0px; background-color: rgb(14, 144, 210); background-image: -webkit-linea=
r-gradient(top, rgb(20, 155, 223), rgb(4, 128, 190)); background-repeat: re=
peat-x; box-shadow: rgba(0, 0, 0, 0.14902) 0px -1px 0px inset; box-sizing: =
border-box; transition: width 0.6s ease; }

.progress-striped .bar { background-color: rgb(98, 196, 98); background-ima=
ge: linear-gradient(-45deg, rgba(255, 255, 255, 0.14902) 25%, transparent 2=
5%, transparent 50%, rgba(255, 255, 255, 0.14902) 50%, rgba(255, 255, 255, =
0.14902) 75%, transparent 75%, transparent); background-size: 40px 40px; }

.progress.active .bar { animation: progress-bar-stripes 2s linear infinite;=
 }

.progress-danger .bar { background-color: rgb(221, 81, 76); background-imag=
e: -webkit-linear-gradient(top, rgb(238, 95, 91), rgb(196, 60, 53)); backgr=
ound-repeat: repeat-x; }

.progress-danger.progress-striped .bar { background-color: rgb(238, 95, 91)=
; background-image: linear-gradient(-45deg, rgba(255, 255, 255, 0.14902) 25=
%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.14902) 50%, rgba=
(255, 255, 255, 0.14902) 75%, transparent 75%, transparent); }

.progress-success .bar { background-color: rgb(94, 185, 94); background-ima=
ge: -webkit-linear-gradient(top, rgb(98, 196, 98), rgb(87, 169, 87)); backg=
round-repeat: repeat-x; }

.progress-success.progress-striped .bar { background-color: rgb(98, 196, 98=
); background-image: linear-gradient(-45deg, rgba(255, 255, 255, 0.14902) 2=
5%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.14902) 50%, rgb=
a(255, 255, 255, 0.14902) 75%, transparent 75%, transparent); }

.progress-info .bar { background-color: rgb(75, 177, 207); background-image=
: -webkit-linear-gradient(top, rgb(91, 192, 222), rgb(51, 155, 185)); backg=
round-repeat: repeat-x; }

.progress-info.progress-striped .bar { background-color: rgb(91, 192, 222);=
 background-image: linear-gradient(-45deg, rgba(255, 255, 255, 0.14902) 25%=
, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.14902) 50%, rgba(=
255, 255, 255, 0.14902) 75%, transparent 75%, transparent); }

.accordion { margin-bottom: 18px; }

.accordion-group { margin-bottom: 2px; border: 1px solid rgb(229, 229, 229)=
; border-radius: 4px; }

.accordion-heading { border-bottom: 0px; }

.accordion-heading .accordion-toggle { display: block; padding: 8px 15px; }

.accordion-inner { padding: 9px 15px; border-top: 1px solid rgb(229, 229, 2=
29); }

.carousel { position: relative; margin-bottom: 18px; line-height: 1; }

.carousel-inner { overflow: hidden; width: 100%; position: relative; }

.carousel .item { display: none; position: relative; transition: left 0.6s =
ease-in-out; }

.carousel .item > img { display: block; line-height: 1; }

.carousel .active, .carousel .next, .carousel .prev { display: block; }

.carousel .active { left: 0px; }

.carousel .next, .carousel .prev { position: absolute; top: 0px; width: 100=
%; }

.carousel .next { left: 100%; }

.carousel .prev { left: -100%; }

.carousel .next.left, .carousel .prev.right { left: 0px; }

.carousel .active.left { left: -100%; }

.carousel .active.right { left: 100%; }

.carousel-control { position: absolute; top: 40%; left: 15px; width: 40px; =
height: 40px; margin-top: -20px; font-size: 60px; font-weight: 100; line-he=
ight: 30px; color: rgb(255, 255, 255); text-align: center; background: rgb(=
34, 34, 34); border: 3px solid rgb(255, 255, 255); border-radius: 23px; opa=
city: 0.5; }

.carousel-control.right { left: auto; right: 15px; }

.carousel-control:hover { color: rgb(255, 255, 255); text-decoration: none;=
 opacity: 0.9; }

.carousel-caption { position: absolute; left: 0px; right: 0px; bottom: 0px;=
 padding: 10px 15px 5px; background: rgba(0, 0, 0, 0.74902); }

.carousel-caption h4, .carousel-caption p { color: rgb(255, 255, 255); }

.hero-unit { padding: 20px; margin-top: 10px; margin-bottom: 30px; backgrou=
nd-color: rgb(245, 245, 245); border-radius: 6px; }

.hero-unit h1 { margin-bottom: 0px; font-size: 50px; line-height: 1; letter=
-spacing: -1px; }

.hero-unit p { font-size: 18px; font-weight: 200; line-height: 27px; }

.pull-right { float: right; }

.pull-left { float: left; }

.hide { display: none; }

.show { display: block; }

.invisible { visibility: hidden; }
------MultipartBoundary--WtMIQ3AY6h6Gy9z4sTg6udpZx3WzfkPxVeadHQyMwV----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://aosabook.org/en/500L/theme/css/bootstrap-responsive.css

@charset "utf-8";

.clearfix { }

.clearfix::before, .clearfix::after { display: table; content: ""; }

.clearfix::after { clear: both; }

.hidden { display: none; visibility: hidden; }

@media (max-width: 480px) {=20
  .nav-collapse { transform: translate3d(0px, 0px, 0px); }
  .page-header h1 small { display: block; line-height: 18px; }
  input[class*=3D"span"], select[class*=3D"span"], textarea[class*=3D"span"=
], .uneditable-input { display: block; width: 100%; min-height: 28px; box-s=
izing: border-box; }
  .input-prepend input[class*=3D"span"], .input-append input[class*=3D"span=
"] { width: auto; }
  input[type=3D"checkbox"], input[type=3D"radio"] { border: 1px solid rgb(2=
04, 204, 204); }
  .form-horizontal .control-group > label { float: none; width: auto; paddi=
ng-top: 0px; text-align: left; }
  .form-horizontal .controls { margin-left: 0px; }
  .form-horizontal .control-list { padding-top: 0px; }
  .form-horizontal .form-actions { padding-left: 10px; padding-right: 10px;=
 }
  .modal { position: absolute; top: 10px; left: 10px; right: 10px; width: a=
uto; margin: 0px; }
  .modal.fade.in { top: auto; }
  .modal-header .close { padding: 10px; margin: -10px; }
  .carousel-caption { position: static; }
}

@media (max-width: 767px) {=20
  .container { width: auto; padding: 0px 20px; }
  .row-fluid { width: 100%; }
  .row { margin-left: 0px; }
  .row > [class*=3D"span"], .row-fluid > [class*=3D"span"] { float: none; d=
isplay: block; width: auto; margin: 0px; }
}

@media (max-width: 979px) and (min-width: 768px) {=20
  .row { margin-left: -20px; }
  .row::before, .row::after { display: table; content: ""; }
  .row::after { clear: both; }
  [class*=3D"span"] { float: left; margin-left: 20px; }
  .span1 { width: 42px; }
  .span2 { width: 104px; }
  .span3 { width: 166px; }
  .span4 { width: 228px; }
  .span5 { width: 290px; }
  .span6 { width: 352px; }
  .span7 { width: 414px; }
  .span8 { width: 476px; }
  .span9 { width: 538px; }
  .span10 { width: 600px; }
  .span11 { width: 662px; }
  .span12, .container { width: 724px; }
  .offset1 { margin-left: 82px; }
  .offset2 { margin-left: 144px; }
  .offset3 { margin-left: 206px; }
  .offset4 { margin-left: 268px; }
  .offset5 { margin-left: 330px; }
  .offset6 { margin-left: 392px; }
  .offset7 { margin-left: 454px; }
  .offset8 { margin-left: 516px; }
  .offset9 { margin-left: 578px; }
  .offset10 { margin-left: 640px; }
  .offset11 { margin-left: 702px; }
  .row-fluid { width: 100%; }
  .row-fluid::before, .row-fluid::after { display: table; content: ""; }
  .row-fluid::after { clear: both; }
  .row-fluid > [class*=3D"span"] { float: left; margin-left: 2.76243%; }
  .row-fluid > [class*=3D"span"]:first-child { margin-left: 0px; }
  .row-fluid > .span1 { width: 5.8011%; }
  .row-fluid > .span2 { width: 14.3646%; }
  .row-fluid > .span3 { width: 22.9282%; }
  .row-fluid > .span4 { width: 31.4917%; }
  .row-fluid > .span5 { width: 40.0552%; }
  .row-fluid > .span6 { width: 48.6188%; }
  .row-fluid > .span7 { width: 57.1823%; }
  .row-fluid > .span8 { width: 65.7459%; }
  .row-fluid > .span9 { width: 74.3094%; }
  .row-fluid > .span10 { width: 82.8729%; }
  .row-fluid > .span11 { width: 91.4365%; }
  .row-fluid > .span12 { width: 100%; }
  input.span1, textarea.span1, .uneditable-input.span1 { width: 32px; }
  input.span2, textarea.span2, .uneditable-input.span2 { width: 94px; }
  input.span3, textarea.span3, .uneditable-input.span3 { width: 156px; }
  input.span4, textarea.span4, .uneditable-input.span4 { width: 218px; }
  input.span5, textarea.span5, .uneditable-input.span5 { width: 280px; }
  input.span6, textarea.span6, .uneditable-input.span6 { width: 342px; }
  input.span7, textarea.span7, .uneditable-input.span7 { width: 404px; }
  input.span8, textarea.span8, .uneditable-input.span8 { width: 466px; }
  input.span9, textarea.span9, .uneditable-input.span9 { width: 528px; }
  input.span10, textarea.span10, .uneditable-input.span10 { width: 590px; }
  input.span11, textarea.span11, .uneditable-input.span11 { width: 652px; }
  input.span12, textarea.span12, .uneditable-input.span12 { width: 714px; }
}

@media (max-width: 979px) {=20
  body { padding-top: 0px; }
  .navbar-fixed-top { position: static; margin-bottom: 18px; }
  .navbar-fixed-top .navbar-inner { padding: 5px; }
  .navbar .container { width: auto; padding: 0px; }
  .navbar .brand { padding-left: 10px; padding-right: 10px; margin: 0px 0px=
 0px -5px; }
  .navbar .nav-collapse { clear: left; }
  .navbar .nav { float: none; margin: 0px 0px 9px; }
  .navbar .nav > li { float: none; }
  .navbar .nav > li > a { margin-bottom: 2px; }
  .navbar .nav > .divider-vertical { display: none; }
  .navbar .nav .nav-header { color: rgb(153, 153, 153); text-shadow: none; =
}
  .navbar .nav > li > a, .navbar .dropdown-menu a { padding: 6px 15px; font=
-weight: bold; color: rgb(153, 153, 153); border-radius: 3px; }
  .navbar .dropdown-menu li + li a { margin-bottom: 2px; }
  .navbar .nav > li > a:hover, .navbar .dropdown-menu a:hover { background-=
color: rgb(34, 34, 34); }
  .navbar .dropdown-menu { position: static; top: auto; left: auto; float: =
none; display: block; max-width: none; margin: 0px 15px; padding: 0px; back=
ground-color: transparent; border: none; border-radius: 0px; box-shadow: no=
ne; }
  .navbar .dropdown-menu::before, .navbar .dropdown-menu::after { display: =
none; }
  .navbar .dropdown-menu .divider { display: none; }
  .navbar-form, .navbar-search { float: none; padding: 9px 15px; margin: 9p=
x 0px; border-top: 1px solid rgb(34, 34, 34); border-bottom: 1px solid rgb(=
34, 34, 34); box-shadow: rgba(255, 255, 255, 0.0980392) 0px 1px 0px inset, =
rgba(255, 255, 255, 0.0980392) 0px 1px 0px; }
  .navbar .nav.pull-right { float: none; margin-left: 0px; }
  .navbar-static .navbar-inner { padding-left: 10px; padding-right: 10px; }
  .btn-navbar { display: block; }
  .nav-collapse { overflow: hidden; height: 0px; }
}

@media (min-width: 980px) {=20
  .nav-collapse.collapse { height: auto !important; }
}

@media (min-width: 1200px) {=20
  .row { margin-left: -30px; }
  .row::before, .row::after { display: table; content: ""; }
  .row::after { clear: both; }
  [class*=3D"span"] { float: left; margin-left: 30px; }
  .span1 { width: 70px; }
  .span2 { width: 170px; }
  .span3 { width: 270px; }
  .span4 { width: 370px; }
  .span5 { width: 470px; }
  .span6 { width: 570px; }
  .span7 { width: 670px; }
  .span8 { width: 770px; }
  .span9 { width: 870px; }
  .span10 { width: 970px; }
  .span11 { width: 1070px; }
  .span12, .container { width: 1170px; }
  .offset1 { margin-left: 130px; }
  .offset2 { margin-left: 230px; }
  .offset3 { margin-left: 330px; }
  .offset4 { margin-left: 430px; }
  .offset5 { margin-left: 530px; }
  .offset6 { margin-left: 630px; }
  .offset7 { margin-left: 730px; }
  .offset8 { margin-left: 830px; }
  .offset9 { margin-left: 930px; }
  .offset10 { margin-left: 1030px; }
  .offset11 { margin-left: 1130px; }
  .row-fluid { width: 100%; }
  .row-fluid::before, .row-fluid::after { display: table; content: ""; }
  .row-fluid::after { clear: both; }
  .row-fluid > [class*=3D"span"] { float: left; margin-left: 2.5641%; }
  .row-fluid > [class*=3D"span"]:first-child { margin-left: 0px; }
  .row-fluid > .span1 { width: 5.98291%; }
  .row-fluid > .span2 { width: 14.5299%; }
  .row-fluid > .span3 { width: 23.0769%; }
  .row-fluid > .span4 { width: 31.6239%; }
  .row-fluid > .span5 { width: 40.1709%; }
  .row-fluid > .span6 { width: 48.7179%; }
  .row-fluid > .span7 { width: 57.265%; }
  .row-fluid > .span8 { width: 65.812%; }
  .row-fluid > .span9 { width: 74.359%; }
  .row-fluid > .span10 { width: 82.906%; }
  .row-fluid > .span11 { width: 91.453%; }
  .row-fluid > .span12 { width: 100%; }
  input.span1, textarea.span1, .uneditable-input.span1 { width: 60px; }
  input.span2, textarea.span2, .uneditable-input.span2 { width: 160px; }
  input.span3, textarea.span3, .uneditable-input.span3 { width: 260px; }
  input.span4, textarea.span4, .uneditable-input.span4 { width: 360px; }
  input.span5, textarea.span5, .uneditable-input.span5 { width: 460px; }
  input.span6, textarea.span6, .uneditable-input.span6 { width: 560px; }
  input.span7, textarea.span7, .uneditable-input.span7 { width: 660px; }
  input.span8, textarea.span8, .uneditable-input.span8 { width: 760px; }
  input.span9, textarea.span9, .uneditable-input.span9 { width: 860px; }
  input.span10, textarea.span10, .uneditable-input.span10 { width: 960px; }
  input.span11, textarea.span11, .uneditable-input.span11 { width: 1060px; =
}
  input.span12, textarea.span12, .uneditable-input.span12 { width: 1160px; =
}
  .thumbnails { margin-left: -30px; }
  .thumbnails > li { margin-left: 30px; }
}
------MultipartBoundary--WtMIQ3AY6h6Gy9z4sTg6udpZx3WzfkPxVeadHQyMwV----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://aosabook.org/en/500L/theme/css/code.css

@charset "utf-8";

.sourceCode span.kw { color: rgb(0, 112, 32); font-weight: bold; }

.sourceCode span.dt { color: rgb(144, 32, 0); }

.sourceCode span.dv { color: rgb(64, 160, 112); }

.sourceCode span.bn { color: rgb(64, 160, 112); }

.sourceCode span.fl { color: rgb(64, 160, 112); }

.sourceCode span.ch { color: rgb(64, 112, 160); }

.sourceCode span.st { color: rgb(64, 112, 160); }

.sourceCode span.co { color: rgb(96, 160, 176); font-style: italic; }

.sourceCode span.al { color: red; font-weight: bold; }

.sourceCode span.fu { color: rgb(6, 40, 126); }

.sourceCode span.re { }

.sourceCode span.er { color: red; font-weight: bold; }
------MultipartBoundary--WtMIQ3AY6h6Gy9z4sTg6udpZx3WzfkPxVeadHQyMwV----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://aosabook.org/en/500L/theme/css/500L.css

@charset "utf-8";

img.cover { display: block; margin-left: auto; margin-right: auto; padding-=
bottom: 2em; }

body.help { margin-left: auto; margin-right: auto; }

div.box { display: block; margin-left: auto; margin-right: auto; outline: g=
ray solid 1px; padding: 1px 10px; }

div.figure { display: block; margin-left: auto; margin-right: auto; padding=
: 1px 10px; text-align: center; }

div.footnotes { border-top: 1px solid gray; }

div.footnotes h2 { font-style: italic; }

div.sect h2 { font-style: italic; }

div.subsect h3 { font-style: italic; }

div.table { display: block; margin-left: auto; margin-right: auto; padding:=
 1px 10px; text-align: center; }

div.table table { font-size: small; margin-left: auto; margin-right: auto; =
outline: gray solid 1px; }

dl.faq dt { font-style: italic; }

dl.faq dd { margin-bottom: 10px; }

h1.chaptertitle { font-style: italic; font-size: xx-large; }

h1.chapterauthor { font-style: italic; font-size: x-large; }

p.boxtitle { text-align: center; font-style: italic; font-weight: bold; }

p.pullquote { font-style: italic; }

table.bibtable td { text-align: center; }

table.tasks th { vertical-align: top; }

td { vertical-align: top; }

td.center { vertical-align: top; text-align: center; }

th { text-align: left; }

th.center { text-align: center; }

.table-striped tbody tr:nth-child(2n+1) td, table.table-striped tbody tr:nt=
h-child(2n+1) th { background-color: rgb(211, 229, 240); }

.hero-unit { background-color: rgb(200, 217, 227); }

.center { text-align: center; }

* + table { border-style: solid; border-width: 1px; border-color: rgb(231, =
227, 231); }

* + table th, * + table td { border-style: dashed; border-width: 1px; borde=
r-color: rgb(231, 227, 231); padding-left: 3px; padding-right: 3px; }

* + table th { border-style: solid; font-weight: bold; background: url("/im=
ages/noise.png?1330434582") left top repeat scroll rgb(247, 243, 247); }

* + table th[align=3D"left"], * + table td[align=3D"left"] { text-align: le=
ft; }

* + table th[align=3D"right"], * + table td[align=3D"right"] { text-align: =
right; }

* + table th[align=3D"center"], * + table td[align=3D"center"] { text-align=
: center; }
------MultipartBoundary--WtMIQ3AY6h6Gy9z4sTg6udpZx3WzfkPxVeadHQyMwV----
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/woff/MathJax_Main-Regular.woff?V=2.7.1

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
AMbULpkAAAAAxvkyTwAAAADR7uVs
------MultipartBoundary--WtMIQ3AY6h6Gy9z4sTg6udpZx3WzfkPxVeadHQyMwV----
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/woff/MathJax_Math-Italic.woff?V=2.7.1

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
------MultipartBoundary--WtMIQ3AY6h6Gy9z4sTg6udpZx3WzfkPxVeadHQyMwV----
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/fonts/HTML-CSS/TeX/woff/MathJax_Size1-Regular.woff?V=2.7.1

d09GRk9UVE8AABagAAsAAAAAIDwAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAABDRkYgAAAFcAAAEGQA
ABUO0gggUEZGVE0AABaEAAAAHAAAABxfvEZXR0RFRgAAFdQAAAAdAAAAIABeAARPUy8yAAABZAAA
AE4AAABgQztYj2NtYXAAAAR0AAAA5wAAAhoVJZqOaGVhZAAAAQgAAAA0AAAANgXjDbVoaGVhAAAB
PAAAACAAAAAkBjkC2GhtdHgAABX0AAAAjwAAAMR1kQmkbWF4cAAAAVwAAAAGAAAABgAxUABuYW1l
AAABtAAAAr0AAAZv+wCdtHBvc3QAAAVcAAAAEwAAACD/hgAyeNpjYGRgYGBmYPCu/ZQcz2/zlYGb
+QVQhOHiu6d5MPrvmX+LWCWYg4BcDgYmkCgAluYOwHjaY2BkYGAO+reIgYGl7++Z/2WsEgxAERRg
CACVCwYWAABQAAAxAAB42mNgZupgnMDAysDA1MW0h4GBoQdCMz5gMGRkYkACDQwM7wUY3ryF8QPS
XFMYHBgU3v9nDvq3iIGBOYgxToGBoT+OGapAAQgZARyoEFgAAHjarVTLTttAFD2GBNRUiWBBF2w6
m0pQOc5D3RAQEgJFCkpBEITabpBxhniQ40S2kwBS1/2CfkDVL+gndNlFu+sX9Ae67LLHk6GQilSi
bSx7zty5c+65984EwCOrAAvjn41XBlvI473BM5jHR4Nn8cRaMjiDJatjcBYPrbcGz9H+2eA8fsx+
NbiA5WzG4AXks+sGL2I++5LMVuYBZy90lBRbWMYbg2e4+4PBs9jFJ4MzeGqtG5xlLq8NnqP9ncF5
67v1zeACnmW+GLxAPY8NXkQh28A2eujjEhEUOvCRQGAFHlY5VlHms4aiRhW+AjuQiLVvyFmLnoqW
kKNkLQUaGjvAdq9/GamOn4gVb1VUy+W1YrVcKYsdGatOKFqekqEnbdEIPXo/h8vQPtN0cYETEitc
kbLCJTfxd92Lk5a6kpwe0trBAAE9I05lZxC4BHUmEpIjHSN6SJ2Ao0XX+E6PUPyds94Lk3ov6khR
dcqiJiYUFH9FvAfjFIZjekW6nD1dzgr1MsVjGcWqF4qKU/kfUe7XYvseTU55NjDSj4OuUXqulTqm
D5uMYyNHD6VXhVYd68yH/LZpue6dwB73dnXvpuftkC2HI64p8tze3SI6IxrpeqQsY4+Ao6cziE3E
AXFbaxA6itS7G2hy3Ge1pM78hrk5wZDW4O7eORPKJuMKqhryVbpfp/ymtpu6uDriFg40Tnhqc7pb
CfXUUOITky3tYp+2mLFizXVd6RKV16l02tWz77x7YmVjNBo5XZ6dc/fC4bHfXLVzI5X44lDGMhrK
tkgvhNhzu3LyKji53JGv4vFyq3eWjNxIChoC5ckw5sZB2JaRSHwpWo2m2O/LcOzcHDvY4tZRd8Zk
Zq9wh64K3NNACq3FFfWtA+EmtZyfJP1aqRR7keonsROrIBVd2q8z878q158I//l/6ScbPUGCAAAA
eNpjYGBgZoBgGQZGIMnAKALkMYL5LAw/gLQVgwKQJQUkNRn0GWIZqhlqGRYwHWO6w8ysIKY4UXGy
4kXFy0qCSlJKykqqSnpKh5W5lS+ov9Ri0mLRYnv///9/oBkKDBpAvdFIepmQ9PJD9WorHVDmAOp9
ocUA1vsXqPnh/1v/r/5f9b/3f8//rL+ufw3+ct//ea/+Xt09x3sO91jv/r379e6Xu+/vxt2VuhN2
w/6a5jWNa+oChhC/kAsY2RgIGgCTZ2IGUywkGM/Kxo5XnoOBk2yni4kAowoKxCEUFwnauXlgLAB1
JkksAHjaY2BmAIP/zQxGDFgAAChEAbgAeNqlVwt4FMWW7mbopEgwKHHwlQ+QN34RQ1hR9lMUJLAi
EgS8AkFISCIk5k1ek2TeMz0zfXoePe/J5EUIIOEhIYBICCivIMYXKOL1Kqh3cb3uXhR2rQ41uFuT
AcXd6939vp3q6b/r1DmnTp+uc+oUywwdyrAsO+r5nMoNC3Nq1y4rqMuf/vDS/PVVRTkVDDuEYZmH
5acZeQ4rzx0iP6OQ5w2NnCZXU7h7By5zKUOUI1IY5s6UIdV3pTCjU0bOG8k8FBVBzAjmXmYMM4l5
hJnFZDCLmGXMaiaXKWTKGRWjYyyMg/ExTcxmppPpYg4yR5lTzHvMx8znzNfMd8wPDGZ+Zjl2OJvM
jmLnsi+xeWxhVUlBWtqctCjMSEuvLCjKy88tLV5H++lp02fmVFSU1lSVDUJeaU1J7GFd0S3SuqIo
tayiNK8qtzIqkz49bWNVcXFOZUFpSUVOXkFuTtEgOX1GDB4tKKnMX19xi/pMDObFIGMQnkmLwfQY
pMdgUH5G2uMxmBWDOTGYOwjzBuUey3g8BoMsc9LSYjA9Bukx+IcYzKSQMX/+vBhkxGD+jGlpz5SW
qSoK1m+oHDsld+rY9LS0WQ9Tb6SNnZe/sWB9ydhluQX5Jbn5qWOfLcmd9je/8G+Ii0srinOKGPpj
mWFMAnMn8wTzJDObfrk1rIXRMFrWytpYgQVWZO2sg3WyLlZi3ayH9bI+1s8G2CAbYhvZMNvENrMt
bCvbxm5i29nNbAe7hd3KbmNfY7eznewOZnp0kYxjJjI1TB8zwN7HPscWDZmreFAxQZGuWKnYoJAU
exTy0KeGvsst507GzYz7KT47viS+J/6D+CvovmGuYQMJhYmJiaMTZyZmJq5P1Ca6Er8YPnX4m3cs
TkpN6hnx0IhnRqwcsYGcgV45o5ftpT9F7yj8kLydPBTXG6lRUmokIz6JnEmaiFMvKnAqdiqBtH1D
cvAUkoy2xdntTic4wCHYDT6SiB9YipcAdgGWjuMleDh+wOsT7dFxi9NmR6VxhErNINlUBaIay6nG
k1GNuHUGziFTcDLSxNXzoBsj2lwmyYQTyf3HSCYQFxDncpJJaN9s4k2CDemdQtPoYByeipO/xtmA
N6GkZrlq4I9KXht5PIWYBAuo/QY/uMHjdHpcAfnxlKENohNCOq8O9MCbLWaURMaTH7uvX+tm8Zpu
BV5DflTi5d0k9fo1nNpNlsdRjS3kj0rBGYkK8wGL2+gyggYMGlEvWuToNC6t0+ixuMEPfi+Ebtc4
t1uxaeCIEqf+fI2k5uLlKUNfj6psvzXu+FIhl5PvlaF4CAt2k/2l0KId9d18CHjAs+AqHBUka7Oh
TReu7MzZktmGGqSAkzsc7t7U0dHaGuxwbhElOEr5KDPvCoW7z+w4GnLbqbPDCEJmSQ2cCYyCAAIY
rAbrnJpV5eWFOrWpnq9BApnJCSRDDJjrtcWlpeuqdLzWrDLVmwGgDuoBwuZmU8Ds59G+qm2lgWKp
XgiIJAOJ5FHOVS3VB9Sbiw5W9Nfu0juEEKAgfat/x7WPXUzW4SED/6y0WAUr9VKDaJNsDsFt9dhO
13SXBgtR8tMuNdBPOQsmwEui2aHyVvvr24sOlvbVoIClwcxlVueUVxbp6g3VVpVghpcoH7kTigWz
pc6kaWioqSmqW6dB1WZBsFlRsk6wgQUMUCsKLRAEp7jT199ysGNzZyAkhV1tSMSPciLOELRSOLz/
xL4TTW5H1D3QSN3tWNq0dF/9fnNY1Ao4Awl4Jse3msPa0MbONR0LWwp8VlEDyAg8nQNFl79F7sEv
snjHwHTl2ATa++5d67sjk3XHBmYoH0xIfnpcQrJuPEVtSG/gknUT6OPEhKTIiUEpsj0mRbs3xSK2
vyuHS9qqWew7gOcfUGDfqAPyX7PjcHnkr8rBp6SfoqP9dOhP8jfK1XOfXphejHgbrKUL5L2OU129
PSgYgIh4AEAWg1quN+tU/nsV1MPwBm/nHu18+tSqT5HJz/2qp/97pSbArexZ0vVsB9I6Ya3Lxn1V
dH7J4aeQW+fycoc+Pt//5+3IZYc3tBbu2Yol+SuzkEZL1WcD9xtr5bvkz5Urxs9Mm7CkTp9fW2dG
Gh6yOY9zm6/Z29N+qHPfTuTzQISJGjc1EODaOzo6W15zeVwSQHvh1le2lqCAFiJT6TheKOKFPiPX
XXioqKey2bBN77EgOKBxcXVSfkudb8KpmZdXXLN4afjRn8VkMSBqy6bbPId1Sr2HW7dzdWdWu8pb
6jM6EWQHea7J3FXbpL+65FLakfFOg9MUlXe6nd4j1y5dvnqqydfV0iShoAsOcEZLqV5lyKpcXZRb
iPRGAS+kZmUDNVCr5SorKopqS3gjTwOncmfZnrLXkDZAXyvqFPlu4ui+nkoDPR0PlSdjTjGwlTyi
HDga73u9o/EtBwp13/gkNxR32LpF7S9GDhPcOGo1crricvUqK1Ln4rPd6rg/OMobDXuQIM8DOUOe
DHDjP36P5/8yITn72wl/ilCVcoYoZ3C/y/MbowY+uX1CE3G8c31UN3t6QBeLeTUSdfh54uF+JGMv
kngQEHmOFHOTyPDHpgg2m5XGkg2sDt4hOGxvgpwESH5C/Ap7coEzNxiqjZpXXliSPbf6Zc0q8xxr
g0CGAmEBEWYciGPws7iQu4ITvvg3UXQ4BZdFEuzkU3mJxQliH3wKeATgx4RG4SP+TdM+Nfqi/KPM
7U+gVqEVOEuwfn/Fh2gdHhJ5ArhIOujAaqP2L7pe2KXAYWxXklSSuKWcE6Ex0BxCu7bQp8OE6yNj
EGaJFBC4RrCLkmS345G4CU/DHyO8Q/4cJE5wm/w6MIKJt5gFC0HETMaSg4h4Ils5m52slUsH00cN
nkiX4yRZVk6iuYN28IJf+rhiFNgEkgqDl0jvNrvBa/aBF7yS3UszFk795RLsyOo1SAa6gxlNNiNV
fWrP9U172GMn5edOKq6RScrJNHsEfqHi/Se/jd5uDuEro+i4fPW/jY/5n0wxzl/4du+99B3m9u6K
8ZRW1xSPgQZnrUfdtOH1ssPQAi3OZu+O8JZtrft3f+D+l9APSPRxfkeLw+96q23vvqa33W1iADpg
sxAwtTUcerUrexNvV3lARACu9x27PZhzHwjtDHQ2t+2CEIQsfqNEX5RuXoLaYrOheqOxDupQeWvl
a9vaWrePhjNZBxY7DXSD46GK7hwq7eqigvn1aTZtA+GsVUjQczprrVXH/6E6b13di6ZqQQsboULU
uqsbV+/IP1DltLUY6foEEFS2Si1J59eq84wVGlWDwWDWWbWgBrVT5zE7DN6ojWLIabeHPZ4maEJb
atpLRuMV8i6l4SndNH6BoKbNgszxa9pzD0I/nDv89vFGp2gXRRCpegCEF5BxSng2e0WWymDRWilJ
FP32kPczzznXGTEohkSaliSPhdtX8/pKyKRJbMuxC3L/BcW/EruyGbxuj9/h3H4JK/A5hMfKk/CD
kUkcHkLObZ/psHh0XlMzbIbmZmgHGhe02cnZ61N4j9GvcasB1YFGb9bZLOTczxOsOhql0VYVrtkC
v050bGCFEnjRIvJ2yzmS/w1x4jkRs3aX3+gxSzY/DBrhc3kwVSzakegSXeCEdlXzRlCBwWTUWS3F
Mwm1CBFqG6E2coRaW3zJ6jT6dZ466vu6WqiMTjgw7Uv22EX56JcKPIYU08rvvIg/tQe5xm+Of/jJ
nu7WHf4T8C28+0pPVlde+2rvi8iusd+4j5NUPnUHbIJg0BW2S3Ry3A94LeBhgsf0p8Kzy06+fGjJ
rkVNqNBT6SgAo2gGMy2kLCDQF6ZPAnm8jowjd9STfxKMQIYBWYuA9IPFbnbVBzWb6NL0NnqaogYS
+6CBvZcUHw3UKqckJA0cua0+7E4ZasG53QTiYnTVzSovN4WouqMlHh2gFd5tBSV0k1wqlHuTTgWw
iryjJLm5GKhA7m3beX9sp0/CcpdCHjZwWWkAC28xmWuJFDlOQ16PKUq1TqNk8YIPPB7RB5LgICNx
FyJ3432Y/jmaorpEB6V7jV4t/cYXuhQXBj5Wglm04pGkC+G7yT5C/xyhvah3RL3HGM02Eq2TpRYs
ycepbh+haG6xeHiHUURaMBoEurvKPcRxCX9LTwHfXmKPX8SXaS68fFFxd0RGA2uVUxPkv0TylfCq
oObLSshsOksSeTjvVWOJNR9eBbVY5kpvfPTQkvcXv7/hM91lJPigKdZEXwdegcfjsThje9je5uig
K45+EQGvqsRPkxlAGlBEN2rNjqKDB3d0HjxU8Nrq3MLC7NHUHpx3UUZfsbLvouKmDfhBoleSxREU
L7q4EE44ffX7j47s+aDz/GBxLAISIZ9MGYNZvFB52vBu2ZH1f8k4PSFEEpDIR2hCkJFL4OzgEzw2
RNgb/Upe5MiQ4ORj87/K6iv+xPAZElwyAk7O4pVV5Hm6qtLJmkrEC1QySh900sWBc1EHDZz91aza
Fcrzhg/L+tagkJ7cQ+6ljd7xPeQefG/Ix73V/c6Wfv/tL4+ILnJAGWUzBLmX+8o+MHx2u8e8n239
4M0+5A1iykHV3MvJKfQodTBzW4Z3tqinhfxgE/SGJ8sWvJyJDJpbs2HKzp37uO9UdINeFlmpjEqr
9VzmmgVlsw16oU4YlKRnnNneBVszDyK1D0fFqCAXCxB54kUaI1h7EWtuhQl+OJKnhHqfJmD2mZ3Q
B+jY0jgogI2i1VnbrG6msRsOO5voytwMu9CJY/F9NIh9UkDyBWlJ3qRvVLuR2UnuADjBwWkQeZ8p
qHPX2bVgEniet5qMVp7X03y6GC0lw+PrDQ1aqLoVrye+kI9cHDTEbOGNNqMtGvyRtdGLpxHe4Dc0
8mhgYlyzW/J6wkjOjwd5Luy2SZawOlQFVaDR8PUxoQUosihyRF5EORaAyyaZmzTBKqABYDFHD4xB
uMLClStXFDD0ypXJcXj1ZGUUkzIH6Tep8oSb1Ej27eQkuehu+YRydILC/9TwYTA8oTehN3F0Qtx/
Dh+ZwoxOZhKiZ/1/ZBYxrzA6ppHZzvyZbR8yY4iXJrsAQXbBLoh2ar23mXTj6eTBJ7knc55bHz3g
RS9aNVgkLfKqOLcdSxj5ACXCi3nmMSBET9IooPZ5ucQ3du1v7qZHMNqErdZmvreqU00PezxKDFqD
tiDsg31Nb+wCeHsvSPQbuM1ulLi2IEeVO5hMebHUoXKt3LSupVqqdKJEXjTR5IpWwgZVTiGd7m+U
MdE89b+XMYl/t6Jo2unf63nD2daCx7v7UAjHSx/58P1BPF86FN77/y4ZLFUqMtb4vJrEm+fpyf1I
S540r/79YiBWC6Dbi4HEXxadJbqnkLV0gxFN7lk75x1/oSerb8P79Z3GdttuQLuh3b7D8164b3dP
z/GTO8+6vxDddAsb3Mj6wWmT+HB0saGNoFeb6pDtxn02DWdYXrk6Py8ra9Er06KGiAaR3NX8yNc1
OBHZggI+D/hTq4szN6oDNbeWaSIZtWLSpBVEWfmCbhXMhtn+le1LjxDlD5PwqBXHK3u1F+ACHA6c
bEdYeeSHH45gZfsJfy+ltUKL4DeeqT9e/vY8PI48cIWkbS2RVOKr9CgsGui3zoRlDStqUOJ/AetY
XB942mNgZGBg4ANiCQYQYGJgBEIDIGYB8xgABloAYwAAAHjaY/jFYMTwi4GB8RTDDCBWZnJiMGdc
yHAKSJsBaTEmd4ZMEAapYdL5/4NJh4GRgeHvGSC+yszFyMg0m6EAhJm5GCzBeAODOQizKDBYML9g
yGf0ZZgI1DOR8QZQ3Bgo3gc0H8R2RMVAsVNALAajmWYzWgDpRCD2ZQlnsIBhuHodoJu/MDAwpDAw
AAAG9ymMAAAAAAEAAAAAxtQumQAAAADG+TJPAAAAANHu5W4=
------MultipartBoundary--WtMIQ3AY6h6Gy9z4sTg6udpZx3WzfkPxVeadHQyMwV----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://aosabook.org/en/500L/ocr-images/ann.png

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
Fp4aPF16ur9J1NR7hn+mq3lK8/2zaWdvtIxvaT0Xfe7i+YjzZy8EXzh90f/iiUu+l45f9r5cf8Xz
St1Vj6vHfvf4/VirZ2vdNa9rDW0+bY3tY9pPdQR2nLkedv38DdaNKzdjb7bfSr515/bE27I73DvP
7+bffXWv5N7A/bkPCA/KH2o9rHxk9Kj6D7s/Dso8ZSc7wzqvPk58fL+L0/XiieTJ5+6FT2lPK5+Z
Pqt57vr8RE9ET9ufE/7sfiF6MdBb9pf2X5te2r48+nfQ31f70vq6X4lfDb5e+sbgze637m+b++P7
H70reDfwvvyDwYc9H70/XviU+unZwNTPpM/rv9h9afwa/fXBYMHgoIgtZiuOAhisaHY2AK93A0BL
h2cHeI+jaCjvX4qCKO+MCgL/xMo7mqJ4ArA7CIDkuQDEwDPKFlitIFPhW378TgoCqJvbcFUVSbab
qzIXFd5iCB8GB98YA0BqBOCLeHBwYPPg4JedUOxdAJqKlPc+eSHCM/620XJq634Jfiz/AkuqbCZW
R5WaAAAACXBIWXMAABYlAAAWJQFJUiTwAAABn2lUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6
eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNS40LjAi
PgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRm
LXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAg
ICAgICB4bWxuczpleGlmPSJodHRwOi8vbnMuYWRvYmUuY29tL2V4aWYvMS4wLyI+CiAgICAgICAg
IDxleGlmOlBpeGVsWERpbWVuc2lvbj4xODkwPC9leGlmOlBpeGVsWERpbWVuc2lvbj4KICAgICAg
ICAgPGV4aWY6UGl4ZWxZRGltZW5zaW9uPjExNjY8L2V4aWY6UGl4ZWxZRGltZW5zaW9uPgogICAg
ICA8L3JkZjpEZXNjcmlwdGlvbj4KICAgPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4K0oAEnwAAQABJ
REFUeAHs3Xl8G+ed5/kvwPsmRVInJVK3rFu+JB8xId+J48g5O31M204fM90923H2n92e3R1J06/Z
md6ZntiZnp6Z7d52nE7S6TiJ7cR24lOkJVu2bFmSJeuwLlKURF0UL/HGsc8DCryEAi8ABMDPkxcM
oFD11PO8qwKB9avf87gCpoiCAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIBA1AXfU
aqIiBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAIGgAIFYTgQEEEAAAQQQQAABBBBA
AAEEEEAAAQQQQAABBBBAAAEEEEAgygIEYqMMSnUIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCA
AAIIIIAAgVjOAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQCDKAgRiowxKdQgggAAC
CCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggACBWM4BBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAA
AQQQQAABBBBAIMoCBGKjDEp1CCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggAACCCCAAIFYzgEE
EEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAgygIEYqMMSnUIIIAAAggggAACCCCAAAII
IIAAAggggAACCCCAAAIIIIAAgVjOAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQCDK
AgRiowxKdQgggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggACBWM4BBBBAAAEEEEAAAQQQ
QAABBBBAAAEEEEAAAQQQQAABBBBAIMoCBGKjDEp1CCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggg
gAACCCCAAIFYzgEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAgygIEYqMMSnUIIIAA
AggggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAgVjOAQQQQAABBBBAAAEEEEAAAQQQQAABBBBA
AAEEEEAAAQQQQCDKAgRiowxKdQgggAACCCCAAAIIIIAAAggggAACCCCAAAIIIIAAAggggACBWM4B
BBBAAAEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAIMoCBGKjDEp1CCCAAAIIIIAAAggggAAC
CCCAAAIIIIAAAggggAACCCCAAIFYzgEEEEAAAQQQQAABBBBAAAEEEEAAAQQQQAABBBBAAAEEEEAg
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
zr36V3rtzXq9+mmpvvZvvqZnXjignWWZSk3ya6ytVZ/+5Kc6cfS8rtmK9NRTn9Pe/Y9ondem7hvH
dfnUUb1xqkV1bf1mj9kLOnbypMayyrTu93YpI8UEY+0u5W1+SvsSUuXydelnxy/r7/79/63E//nP
5Ux9RBVpjvtOXHzQxr777rv3BGFZBfugcnwOAQQQQAABBBBYmACB2IX5cTQCCCCAAAIILIGAtfdW
YLRVNy9f0PtHT5pEcBu0tWq7vrl/o7YUphGEXQJzTokAAggggAACCCAwU2Cw6YpunD6qV985p3pf
sba89CXt3rtNW9bkKN3MDrSNd6rfZHCpuTagrpS1+vx/95wOV2/X9s0lynXZNLwmT+vLS5WS+qY+
/OSiTt7sVl99nZrOXlbH56s0VJihLLNy1un2KresUrueflFXbv7apEA+o3e+/6FCo0nK/sImpZh9
ORLvl0ZmZrXv+woB2PvS8AYCCCCAAAIIILAkAgRil4SVkyKAAAIIIIDAQgT8gz3qPPeGPjp1Wj9t
kHZ980t6+sXf0s4Cj7zWclgKAggggAACCCCAAAJLKRA2GVrCAbVfOaUzNW/rtTNDKjtQpd/5o69o
59pUs7/r7e+kE4Nt6m2v04mhNKVvfFR/8j/+mTZm2JXv+c131rJyVVTtVEGCT67AsM7e6tVYR4fG
6+rUOzSm4UB4MhBrNcWVkaeSPc9px9Hrqv3lKb3903c1YU/VY4fXq8yToEznwr4HW3vDWnvBUhBA
AAEEEEAAAQSWT2Bh3+CWr55cCQEEEEAAAQRWiYB/oFG3rpzQd370hk53Jajomd/XocNP6sAjZcpw
JWiBvz+tEkWaiQACCCCAAAIIILAggcCQwiO1Ov3hGb31TpOGMw+rZOM+PbEuTdkpzjunHmy7qd6W
C8qB30dWAABAAElEQVTcs18V+w9oa7ZDGclTl67alJDoUunmbSrZtFl2h+POsTMe2BIlR64qH9uu
6m88qoyc62psPa6fH2/RrY7RGR9/mBcOHjxIEPZhwPgsAggggAACCCCwSAIEYhcJktMggAACCCCA
wAIFQgGz6GBYrdfP6OQHx/T9DxrU7dmgF775Jzq8a4uqct1KMCnZKAgggAACCCCAAAIILLWAb6TH
pBA+pUvXrutK55gy12/TuopKlXsT5Z4yM9CRnClvwUZVH9yrfY9WKssEYZMcU7+z2kzwNUGpuXnK
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
/k/pL5a/nP7XxZfTs//0N9PeXz+W3n7LvnR931f9ZlNLXX4p/eCv/0360//wxfTPPz+TPvZbn0i/
8Ks/nz785lvT4Rvaf443pe+1cxCBsgDWNMSDyNqWAAECBAgQIECAQP8CF185nV56+lR66fzZdO7q
bi5duZwuXM7uHZv93s1uzJNm1i6nsy88nZ78/rfT1/7qL9Off/5k+uJjP0nn7rgrvestH07vvbuV
/u4vvT/d987XZVMZZ79Ue/+B238DsvqlrJbnX34xvfzc0+kHD38jff9b30nfffyxdO71H0g33XM4
vfmOA1kQO8AhbEqAAAECBAgQIFBLAUFsLbtNpRsvsHYhXbl4Oj3xzSfTj77zk2zUaJbD3nQ4Xc6u
+H3+O3+eHn/kq2nlv3wrXbn5Lem9b3pfuu3A7nT68e+kR3+wkr76yNNp7aXsx+GltXRm5g/T++/Y
ld7z9tvTHVmoed2ufn6pzqTd1x1IN73u7enej/5yWt37+nRu+Zm0L11IT/zkbHrTgT39B7GrF9Lq
pdPpx89ngeuNb0nH/tFb07GPfSS9/6470y3796Q9/Q+1bfxHqIkApiFuYq9rMwECBAgQIECAQB0E
LmcB7IUzz2dTCV/Jpu/dlV1InN2K56XT6dlnnkrPn35NOr3/StqV/T58+vsPpy/92Z+lf/HP/k36
/gtn0iuHXpPm3v9L6eO//Ivpn/7jj6TXZDMy3TiB63Xj4ujVS6+kF3+ykh77xn9O/+F/+Vfp5F98
MT2cLX/tL8ymD93+s+njF2Kcr0KAAAECBAgQINA0AUFs03pce6dDYPV8unz+mewH3lPp1HdeWL/P
5cxN+9MrV15J31z6v9P3Hn02/eTlg+kTn/61dPQj70333bkvrfzVH6XPf/7P0vdWsiuGs9GxF57/
UXrqP/5heuTvvDs98sKxdMvevX0GsUGa3Wd29vr0xg/8w3Tojveltx750/Tt7F6xZ06fT1euHOjf
fO1SWrt8Np3d9Zb0hnvvS5/8RCvdngWwWbarEOhaoGwUrGmIu2a0IgECBAgQIECAAIGRCdx057vT
W1r/VfqHZ25JN9z4xfT//fU30/Pf/Mv05RdOpcWlbJrh6/dkI2KvpPMvPZeee+lyOvW696W7P3ZX
+ukPvje9+933pHe89Y3ptXtm0r5+ri0euFVZvU4/lR758wfSf3zkh+lPnr0hXXnqdHZpclofJxsn
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
nXomnVu7Jc3seWv62Id/Jn2y9Z50203XpX27tm23dS9eERi7gFGwYyd3QAIECBAgQIAAAQIECBAg
QIAAAQIECBAYgYAgdgSodklgFAKr58+ks88/nR554pX05POX0+x1+9It77gz3f6OO9Kte2bSvvY8
dfVyuvTKC+n5R/42/eeH/ir923//lfTUzPVp/4F3pFte/4vp733kg+kT739juikLb7MJjsdc4h61
a+nS+fPp8pW1dHlmb9q3d1fau3v8NRlzwx1uBwEB7A5A3iZAgAABAgQIECBAgAABAgQIECBAgACB
WgkIYmvVXSrbZIFzp59Nzz61kh69cC79OAsyZ2Zm0sHDB9PBQweye8POZP/3alk9/1x65vsPp3/7
+/8yfeGv/ib9aGZPurj7vvShD388/be/+4/ST91zWzocIWz7Rq9uPuJnV9La6oX0zKPfSE+/cCE9
tXcu3T13OM299sYRH9fuqyxgGuIq9466ESBAgAABAgQIECBAgAABAgQIECBAgEA/AoLYftRsQ2AC
AhfOvJDO/OTxdPrS+XQuO/6e7O/K6pV0ee1KWs2er2X/Xrl4Np198Sfp+1/9z+nLJ5fS5x/6m/S9
V2bTgXf9TLr7rp9LP//zP5t+bv5t6Za920bQjrw9We2uXEyvPP/j9PRjj6WVb3wrffex76dndh1O
l++6Kd16y41ZEDvySjhABQWMgq1gp6gSAQIECBAgQIAAAQIECBAgQIAAAQIECAxFQBA7FEY7ITB6
gYuvnE5nn/1RunLp4vrBVtfW0umXTmd/Z9KFtdW0KwtkL7z8bPrx97+U/vhf/qv0b/71F9Lj2fIb
7/n5dNfP/1b6739rPv3M3W9It2YjYcc/EDYLjC++lH7y2MPpP/7hH6XP/bN/nb6S1ffyPR9Nd//X
P5t+6u4rowd0hEoJCGAr1R0qQ4AAAQIECBAgQIAAAQIECBAgQIAAAQIjEBDEjgDVLgmMQuDgkfem
u47+RvqNFw6lLyz/bfqrrz+Wnvnyn6QvPPP19OM/vTXtms1GnV54Jb3y4o/TD56dSZc/+Mvpkx98
d3rvvfele95zb7r7zsPpwK5xh7BxP9gr6cmH/zR980tfSJ//8Z702HeeSmezkbyXsiB5Nvvbl62x
KxvPqzRHwDTEzelrLSVAgAABAgQIECDQKIHsN25avZSuXF5Nl66sZb90s9/p2QXSMZvV6vqrNIEL
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
BAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBEYhIIgdhap9EiBAgAABAgQIECBAgAABAgQIECBA
gAABAgQIECDQaAFBbKO7X+MJECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIEBiFgCB2FKr2SYAA
AQIECBAgQIAAAQIECBAgQIAAAQIECBAgQIBAowUEsY3ufo0nQIAAAQIECBD4/9uzYxoAAACEYf5d
o2IXNUBCOSFAgAABAgQIECBAgAABAgQIECBAoBBwxBaqMgkQIECAAAECBAgQIECAAAECBAgQIECA
AAECBAgQuBZwxF7PrzwBAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAoWAI7ZQlUmAAAECBAgQ
IECAAAECBAgQIECAAAECBAgQIECAwLWAI/Z6fuUJECBAgAABAgQIECBAgAABAgQIECBAgAABAgQI
ECgEHLGFqkwCBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBK4FHLHX8ytPgAABAgQIECBAgAAB
AgQIECBAgAABAgQIECBAgEAh4IgtVGUSIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIHAt4Ii9
nl95AgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQKAUdsoSqTAAECBAgQIECAAAECBAgQIECA
AAECBAgQIECAAIFrAUfs9fzKEyBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBQCDhiC1WZBAgQ
IECAAAECBAgQIECAAAECBAgQIECAAAECBAhcCzhir+dXngABAgQIECBAgAABAgQIECBAgAABAgQI
ECBAgACBQsARW6jKJECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIEDgWsARez2/8gQIECBAgAAB
AgQIECBAgAABAgQIECBAgAABAgQIFAKO2EJVJgECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAEC
1wKO2Ov5lSdAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAoBBwxBaqMgkQIECAAAECBAgQIECA
AAECBAgQIECAAAECBAgQuBZwxF7PrzwBAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAoWAI7ZQ
lUmAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAwLWAI/Z6fuUJECBAgAABAgQIECBAgAABAgQI
ECBAgAABAgQIECgEHLGFqkwCBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBK4FHLHX8ytPgAAB
AgQIECBAgAABAgQIECBAgAABAgQIECBAgEAh4IgtVGUSIECAAAECBAgQIECAAAECBAgQIECAAAEC
BAgQIHAt4Ii9nl95AgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQKAUdsoSqTAAECBAgQIECA
AAECBAgQIECAAAECBAgQIECAAIFrAUfs9fzKEyBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBQ
CDhiC1WZBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAhcCzhir+dXngABAgQIECBAgAABAgQI
ECBAgAABAgQIECBAgACBQsARW6jKJECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIEDgWsARez2/
8gQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIFAKO2EJVJgECBAgQIECAAAECBAgQIECAAAEC
BAgQIECAAAEC1wKO2Ov5lSdAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAoBBwxBaqMgkQIECA
AAECBAgQIECAAAECBAgQIECAAAECBAgQuBZwxF7PrzwBAgQIECBAgAABAgQIECBAgAABAgQIECBA
gAABAoWAI7ZQlUmAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAwLWAI/Z6fuUJECBAgAABAgQI
ECBAgAABAgQIECBAgAABAgQIECgEHLGFqkwCBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBK4F
HLHX8ytPgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgEAhMN6+6TUjsbCwAAAAAElFTkSuQmCC
------MultipartBoundary--WtMIQ3AY6h6Gy9z4sTg6udpZx3WzfkPxVeadHQyMwV----
Content-Type: text/html
Content-ID: <frame-108-41dfbff2-0862-4151-ab25-a51c29a0bfda@mhtml.blink>
Content-Transfer-Encoding: quoted-printable

<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=
=3DUTF-8"></head><body></body></html>
------MultipartBoundary--WtMIQ3AY6h6Gy9z4sTg6udpZx3WzfkPxVeadHQyMwV------
