From: <Saved by Blink>
Subject: 500 Lines or Less | A Simple Web Server
Date: Tue, 11 Feb 2019 01:57:30 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--A65PNfRy6urSuiiQwfKin0MjqHJD8BhVvVl02Pjh2h----"

------MultipartBoundary--A65PNfRy6urSuiiQwfKin0MjqHJD8BhVvVl02Pjh2h----
Content-Type: text/html
Content-ID: <frame-60-1d8a0363-d6b5-460f-9267-7f0ff935e06a@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: http://aosabook.org/en/500L/a-simple-web-server.html

<!DOCTYPE html><html lang=3D"en"><head><meta http-equiv=3D"Content-Type" co=
ntent=3D"text/html; charset=3DUTF-8">
   =20
    <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=
=3D1.0">
    <meta name=3D"provenance" content=3D"$Id: index.html 1472 2012-09-21 22=
:17:41Z audrey $">
    <link rel=3D"stylesheet" href=3D"http://aosabook.org/en/500L/theme/css/=
bootstrap.css" type=3D"text/css">
    <link rel=3D"stylesheet" href=3D"http://aosabook.org/en/500L/theme/css/=
bootstrap-responsive.css" type=3D"text/css">
    <link rel=3D"stylesheet" href=3D"http://aosabook.org/en/500L/theme/css/=
code.css" type=3D"text/css">
    <link rel=3D"stylesheet" href=3D"http://aosabook.org/en/500L/theme/css/=
500L.css" type=3D"text/css">
    <title>500 Lines or Less | A Simple Web Server</title>
   =20
   =20
<style type=3D"text/css">.MathJax_Hover_Frame {border-radius: .25em; -webki=
t-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .2=
5em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; =
-moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; b=
order: 1px solid #A6D ! important; display: inline-block; position: absolut=
e}
.MathJax_Menu_Button .MathJax_Hover_Arrow {position: absolute; cursor: poin=
ter; display: inline-block; border: 2px solid #AAA; border-radius: 4px; -we=
bkit-border-radius: 4px; -moz-border-radius: 4px; -khtml-border-radius: 4px=
; font-family: 'Courier New',Courier; font-size: 9px; color: #F0F0F0}
.MathJax_Menu_Button .MathJax_Hover_Arrow span {display: block; background-=
color: #AAA; border: 1px solid; border-radius: 3px; line-height: 0; padding=
: 4px}
.MathJax_Hover_Arrow:hover {color: white!important; border: 2px solid #CCC!=
important}
.MathJax_Hover_Arrow:hover span {background-color: #CCC!important}
</style><style type=3D"text/css">#MathJax_About {position: fixed; left: 50%=
; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; ba=
ckground-color: #DDDDDD; color: black; cursor: default; font-family: messag=
e-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform:=
 none; line-height: normal; letter-spacing: normal; word-spacing: normal; w=
ord-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-ra=
dius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-b=
order-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: =
0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-s=
hadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dro=
pshadow(OffX=3D2, OffY=3D2, Color=3D'gray', Positive=3D'true')}
#MathJax_About.MathJax_MousePost {outline: none}
.MathJax_Menu {position: absolute; background-color: white; color: black; w=
idth: auto; padding: 2px; border: 1px solid #CCCCCC; margin: 0; cursor: def=
ault; font: menu; text-align: left; text-indent: 0; text-transform: none; l=
ine-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap=
: normal; white-space: nowrap; float: none; z-index: 201; box-shadow: 0px 1=
0px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shado=
w: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter:=
 progid:DXImageTransform.Microsoft.dropshadow(OffX=3D2, OffY=3D2, Color=3D'=
gray', Positive=3D'true')}
.MathJax_MenuItem {padding: 2px 2em; background: transparent}
.MathJax_MenuArrow {position: absolute; right: .5em; padding-top: .25em; co=
lor: #666666; font-size: .75em}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuArrow.RTL {left: .5em; right: auto}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuCheck.RTL {right: .7em; left: auto}
.MathJax_MenuRadioCheck {position: absolute; left: 1em}
.MathJax_MenuRadioCheck.RTL {right: 1em; left: auto}
.MathJax_MenuLabel {padding: 2px 2em 4px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #CCCCCC; margin: 4px 1px 0px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: Highlight; color: HighlightText}
.MathJax_MenuDisabled:focus, .MathJax_MenuLabel:focus {background-color: #E=
8E8E8}
.MathJax_ContextMenu:focus {outline: none}
.MathJax_ContextMenu .MathJax_MenuItem:focus {outline: none}
#MathJax_AboutClose {top: .2em; right: .2em}
.MathJax_Menu .MathJax_MenuClose {top: -10px; left: -10px}
.MathJax_MenuClose {position: absolute; cursor: pointer; display: inline-bl=
ock; border: 2px solid #AAA; border-radius: 18px; -webkit-border-radius: 18=
px; -moz-border-radius: 18px; -khtml-border-radius: 18px; font-family: 'Cou=
rier New',Courier; font-size: 24px; color: #F0F0F0}
.MathJax_MenuClose span {display: block; background-color: #AAA; border: 1.=
5px solid; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-ra=
dius: 18px; -khtml-border-radius: 18px; line-height: 0; padding: 8px 0 6px}
.MathJax_MenuClose:hover {color: white!important; border: 2px solid #CCC!im=
portant}
.MathJax_MenuClose:hover span {background-color: #CCC!important}
.MathJax_MenuClose:hover:focus {outline: none}
</style><style type=3D"text/css">.MathJax_Preview .MJXf-math {color: inheri=
t!important}
</style><style type=3D"text/css">.MJX_Assistive_MathML {position: absolute!=
important; top: 0; left: 0; clip: rect(1px, 1px, 1px, 1px); padding: 1px 0 =
0 0!important; border: 0!important; height: 1px!important; width: 1px!impor=
tant; overflow: hidden!important; display: block!important; -webkit-touch-c=
allout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-use=
r-select: none; -ms-user-select: none; user-select: none}
.MJX_Assistive_MathML.MJX_Assistive_MathML_Block {width: 100%!important}
</style><style type=3D"text/css">#MathJax_Zoom {position: absolute; backgro=
und-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: =
.5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: =
normal; text-align: left; text-indent: 0; text-transform: none; line-height=
: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; =
white-space: nowrap; float: none; -webkit-box-sizing: content-box; -moz-box=
-sizing: content-box; box-sizing: content-box; box-shadow: 5px 5px 15px #AA=
AAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15=
px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImage=
Transform.Microsoft.dropshadow(OffX=3D2, OffY=3D2, Color=3D'gray', Positive=
=3D'true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; di=
splay: inline-block; width: 100%; height: 100%; border: 0; padding: 0; marg=
in: 0; background-color: white; opacity: 0; filter: alpha(opacity=3D0)}
#MathJax_ZoomFrame {position: relative; display: inline-block; height: 0; w=
idth: 0}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; =
display: inline-block; border: 0; padding: 0; margin: 0; background-color: =
white; opacity: 0; filter: alpha(opacity=3D0)}
</style><style type=3D"text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1em; bottom: 1.5em; background-col=
or: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-in=
dex: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-ind=
ex: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style><style type=3D"text/css">.MJXp-script {font-size: .8em}
.MJXp-right {-webkit-transform-origin: right; -moz-transform-origin: right;=
 -ms-transform-origin: right; -o-transform-origin: right; transform-origin:=
 right}
.MJXp-bold {font-weight: bold}
.MJXp-italic {font-style: italic}
.MJXp-scr {font-family: MathJax_Script,'Times New Roman',Times,STIXGeneral,=
serif}
.MJXp-frak {font-family: MathJax_Fraktur,'Times New Roman',Times,STIXGenera=
l,serif}
.MJXp-sf {font-family: MathJax_SansSerif,'Times New Roman',Times,STIXGenera=
l,serif}
.MJXp-cal {font-family: MathJax_Caligraphic,'Times New Roman',Times,STIXGen=
eral,serif}
.MJXp-mono {font-family: MathJax_Typewriter,'Times New Roman',Times,STIXGen=
eral,serif}
.MJXp-largeop {font-size: 150%}
.MJXp-largeop.MJXp-int {vertical-align: -.2em}
.MJXp-math {display: inline-block; line-height: 1.2; text-indent: 0; font-f=
amily: 'Times New Roman',Times,STIXGeneral,serif; white-space: nowrap; bord=
er-collapse: collapse}
.MJXp-display {display: block; text-align: center; margin: 1em 0}
.MJXp-math span {display: inline-block}
.MJXp-box {display: block!important; text-align: center}
.MJXp-box:after {content: " "}
.MJXp-rule {display: block!important; margin-top: .1em}
.MJXp-char {display: block!important}
.MJXp-mo {margin: 0 .15em}
.MJXp-mfrac {margin: 0 .125em; vertical-align: .25em}
.MJXp-denom {display: inline-table!important; width: 100%}
.MJXp-denom > * {display: table-row!important}
.MJXp-surd {vertical-align: top}
.MJXp-surd > * {display: block!important}
.MJXp-script-box > *  {display: table!important; height: 50%}
.MJXp-script-box > * > * {display: table-cell!important; vertical-align: to=
p}
.MJXp-script-box > *:last-child > * {vertical-align: bottom}
.MJXp-script-box > * > * > * {display: block!important}
.MJXp-mphantom {visibility: hidden}
.MJXp-munderover {display: inline-table!important}
.MJXp-over {display: inline-block!important; text-align: center}
.MJXp-over > * {display: block!important}
.MJXp-munderover > * {display: table-row!important}
.MJXp-mtable {vertical-align: .25em; margin: 0 .125em}
.MJXp-mtable > * {display: inline-table!important; vertical-align: middle}
.MJXp-mtr {display: table-row!important}
.MJXp-mtd {display: table-cell!important; text-align: center; padding: .5em=
 0 0 .5em}
.MJXp-mtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-mlabeledtr {display: table-row!important}
.MJXp-mlabeledtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mlabeledtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-merror {background-color: #FFFF88; color: #CC0000; border: 1px solid =
#CC0000; padding: 1px 3px; font-style: normal; font-size: 90%}
.MJXp-scale0 {-webkit-transform: scaleX(.0); -moz-transform: scaleX(.0); -m=
s-transform: scaleX(.0); -o-transform: scaleX(.0); transform: scaleX(.0)}
.MJXp-scale1 {-webkit-transform: scaleX(.1); -moz-transform: scaleX(.1); -m=
s-transform: scaleX(.1); -o-transform: scaleX(.1); transform: scaleX(.1)}
.MJXp-scale2 {-webkit-transform: scaleX(.2); -moz-transform: scaleX(.2); -m=
s-transform: scaleX(.2); -o-transform: scaleX(.2); transform: scaleX(.2)}
.MJXp-scale3 {-webkit-transform: scaleX(.3); -moz-transform: scaleX(.3); -m=
s-transform: scaleX(.3); -o-transform: scaleX(.3); transform: scaleX(.3)}
.MJXp-scale4 {-webkit-transform: scaleX(.4); -moz-transform: scaleX(.4); -m=
s-transform: scaleX(.4); -o-transform: scaleX(.4); transform: scaleX(.4)}
.MJXp-scale5 {-webkit-transform: scaleX(.5); -moz-transform: scaleX(.5); -m=
s-transform: scaleX(.5); -o-transform: scaleX(.5); transform: scaleX(.5)}
.MJXp-scale6 {-webkit-transform: scaleX(.6); -moz-transform: scaleX(.6); -m=
s-transform: scaleX(.6); -o-transform: scaleX(.6); transform: scaleX(.6)}
.MJXp-scale7 {-webkit-transform: scaleX(.7); -moz-transform: scaleX(.7); -m=
s-transform: scaleX(.7); -o-transform: scaleX(.7); transform: scaleX(.7)}
.MJXp-scale8 {-webkit-transform: scaleX(.8); -moz-transform: scaleX(.8); -m=
s-transform: scaleX(.8); -o-transform: scaleX(.8); transform: scaleX(.8)}
.MJXp-scale9 {-webkit-transform: scaleX(.9); -moz-transform: scaleX(.9); -m=
s-transform: scaleX(.9); -o-transform: scaleX(.9); transform: scaleX(.9)}
.MathJax_PHTML .noError {vertical-align: ; font-size: 90%; text-align: left=
; color: black; padding: 1px 3px; border: 1px solid}
</style></head>
  <body><div id=3D"MathJax_Message" style=3D"display: none;"></div>
    <div class=3D"container">
      <div class=3D"row">
        <div class=3D"hero-unit">
	  <a class=3D"pull-right" href=3D"http://aosabook.org/en/index.html"></a>
          <h1>A Simple Web Server</h1>
          <h2 class=3D"author">Greg Wilson</h2>
          <blockquote class=3D"pull-right">
            </blockquote>

        </div>
      </div>
      <div class=3D"row">
        <div class=3D"span10 offset1" id=3D"content">
          <p><em><a href=3D"https://twitter.com/gvwilson">Greg Wilson</a> i=
s the founder of Software Carpentry, a crash course in computing skills for=
 scientists and engineers. He has worked for 30 years in both industry and =
academia, and is the author or editor of several books on computing, includ=
ing the 2008 Jolt Award winner <em>Beautiful Code</em> and the first two vo=
lumes of <em>The Architecture of Open Source Applications</em>. Greg receiv=
ed a PhD in Computer Science from the University of Edinburgh in 1993.</em>=
</p>

<h2 id=3D"introduction">Introduction</h2>

<p>The web has changed society in countless ways over the last two decades,=
 but its core has changed very little. Most systems still follow the rules =
that Tim Berners-Lee laid out a quarter of a century ago. In particular, mo=
st web servers still handle the same kinds of messages they did then, in th=
e same way.</p>

<p>This chapter will explore how they do that. At the same time, it will ex=
plore how developers can create software systems that don't need to be rewr=
itten in order to add new features.</p>

<h2 id=3D"background">Background</h2>

<p>Pretty much every program on the web runs on a family of communication s=
tandards called Internet Protocol (IP). The member of that family which con=
cerns us is the Transmission Control Protocol (TCP/IP), which makes communi=
cation between computers look like reading and writing files.</p>

<p>Programs using IP communicate through sockets. Each socket is one end of=
 a point-to-point communication channel, just like a phone is one end of a =
phone call. A socket consists of an IP address that identifies a particular=
 machine and a port number on that machine. The IP address consists of four=
 8-bit numbers, such as <code>174.136.14.108</code>; the Domain Name System=
 (DNS) matches these numbers to symbolic names like <code>aosabook.org</cod=
e> that are easier for human beings to remember.</p>

<p>A port number is a number in the range 0-65535 that uniquely identifies =
the socket on the host machine. (If an IP address is like a company's phone=
 number, then a port number is like an extension.) Ports 0-1023 are reserve=
d for the operating system's use; anyone else can use the remaining ports.<=
/p>

<p>The Hypertext Transfer Protocol (HTTP) describes one way that programs c=
an exchange data over IP. HTTP is deliberately simple: the client sends a r=
equest specifying what it wants over a socket connection, and the server se=
nds some data in response (<a href=3D"http://aosabook.org/en/500L/a-simple-=
web-server.html#figure-22.1">Figure 22.1</a>.) The data may be copied from =
a file on disk, generated dynamically by a program, or some mix of the two.=
</p>

<div class=3D"center figure">
<a name=3D"figure-22.1"></a><img src=3D"http://aosabook.org/en/500L/web-ser=
ver-images/http-cycle.png" alt=3D"Figure 22.1 - The HTTP Cycle" title=3D"Fi=
gure 22.1 - The HTTP Cycle">
</div>

<p class=3D"center figcaption">
<small>Figure 22.1 - The HTTP Cycle</small>
</p>

<p>The most important thing about an HTTP request is that it's just text: a=
ny program that wants to can create one or parse one. In order to be unders=
tood, though, that text must have the parts shown in <a href=3D"http://aosa=
book.org/en/500L/a-simple-web-server.html#figure-22.2">Figure 22.2</a>.</p>

<div class=3D"center figure">
<a name=3D"figure-22.2"></a><img src=3D"http://aosabook.org/en/500L/web-ser=
ver-images/http-request.png" alt=3D"Figure 22.2 - An HTTP Request" title=3D=
"Figure 22.2 - An HTTP Request">
</div>

<p class=3D"center figcaption">
<small>Figure 22.2 - An HTTP Request</small>
</p>

<p>The HTTP method is almost always either "GET" (to fetch information) or =
"POST" (to submit form data or upload files). The URL specifies what the cl=
ient wants; it is often a path to a file on disk, such as <code>/research/e=
xperiments.html</code>, but (and this is the crucial part) it's completely =
up to the server to decide what to do with it. The HTTP version is usually =
"HTTP/1.0" or "HTTP/1.1"; the differences between the two don't matter to u=
s.</p>

<p>HTTP headers are key/value pairs like the three shown below:</p>

<pre><code>Accept: text/html
Accept-Language: en, fr
If-Modified-Since: 16-May-2005</code></pre>

<p>Unlike the keys in hash tables, keys may appear any number of times in H=
TTP headers. This allows a request to do things like specify that it's will=
ing to accept several types of content.</p>

<p>Finally, the body of the request is any extra data associated with the r=
equest. This is used when submitting data via web forms, when uploading fil=
es, and so on. There must be a blank line between the last header and the s=
tart of the body to signal the end of the headers.</p>

<p>One header, called <code>Content-Length</code>, tells the server how man=
y bytes to expect to read in the body of the request.</p>

<p>HTTP responses are formatted like HTTP requests (<a href=3D"http://aosab=
ook.org/en/500L/a-simple-web-server.html#figure-22.3">Figure 22.3</a>):</p>

<div class=3D"center figure">
<a name=3D"figure-22.3"></a><img src=3D"http://aosabook.org/en/500L/web-ser=
ver-images/http-response.png" alt=3D"Figure 22.3 - An HTTP Response" title=
=3D"Figure 22.3 - An HTTP Response">
</div>

<p class=3D"center figcaption">
<small>Figure 22.3 - An HTTP Response</small>
</p>

<p>The version, headers, and body have the same form and meaning. The statu=
s code is a number indicating what happened when the request was processed:=
 200 means "everything worked", 404 means "not found", and other codes have=
 other meanings. The status phrase repeats that information in a human-read=
able phrase like "OK" or "not found".</p>

<p>For the purposes of this chapter there are only two other things we need=
 to know about HTTP.</p>

<p>The first is that it is <em>stateless</em>: each request is handled on i=
ts own, and the server doesn't remember anything between one request and th=
e next. If an application wants to keep track of something like a user's id=
entity, it must do so itself.</p>

<p>The usual way to do this is with a cookie, which is a short character st=
ring that the server sends to the client, and the client later returns to t=
he server. When a user performs some function that requires state to be sav=
ed across several requests, the server creates a new cookie, stores it in a=
 database, and sends it to her browser. Each time her browser sends the coo=
kie back, the server uses it to look up information about what the user is =
doing.</p>

<p>The second thing we need to know about HTTP is that a URL can be supplem=
ented with parameters to provide even more information. For example, if we'=
re using a search engine, we have to specify what our search terms are. We =
could add these to the path in the URL, but what we should do is add parame=
ters to the URL. We do this by adding '?' to the URL followed by 'key=3Dval=
ue' pairs separated by '&amp;'. For example, the URL <code>http://www.googl=
e.ca?q=3DPython</code> asks Google to search for pages related to Python: t=
he key is the letter 'q', and the value is 'Python'. The longer query <code=
>http://www.google.ca/search?q=3DPython&amp;amp;client=3DFirefox</code> tel=
ls Google that we're using Firefox, and so on. We can pass whatever paramet=
ers we want, but again, it's up to the application running on the web site =
to decide which ones to pay attention to, and how to interpret them.</p>

<p>Of course, if '?' and '&amp;' are special characters, there must be a wa=
y to escape them, just as there must be a way to put a double quote charact=
er inside a character string delimited by double quotes. The URL encoding s=
tandard represents special characters using '%' followed by a 2-digit code,=
 and replaces spaces with the '+' character. Thus, to search Google for "gr=
ade&nbsp;=3D&nbsp;A+" (with the spaces), we would use the URL <code>http://=
www.google.ca/search?q=3Dgrade+%3D+A%2B</code>.</p>

<p>Opening sockets, constructing HTTP requests, and parsing responses is te=
dious, so most people use libraries to do most of the work. Python comes wi=
th such a library called <code>urllib2</code> (because it's a replacement f=
or an earlier library called <code>urllib</code>), but it exposes a lot of =
plumbing that most people never want to care about. The <a href=3D"https://=
pypi.python.org/pypi/requests">Requests</a> library is an easier-to-use alt=
ernative to <code>urllib2</code>. Here's an example that uses it to downloa=
d a page from the AOSA book site:</p>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python"><span cl=
ass=3D"ch">import</span> requests
response =3D requests.get(<span class=3D"st">'http://aosabook.org/en/500L/w=
eb-server/testpage.html'</span>)
<span class=3D"dt">print</span> <span class=3D"st">'status code:'</span>, r=
esponse.status_code
<span class=3D"dt">print</span> <span class=3D"st">'content length:'</span>=
, response.headers[<span class=3D"st">'content-length'</span>]
<span class=3D"dt">print</span> response.text</code></pre>

<pre><code>status code: 200
content length: 61
&lt;html&gt;
  &lt;body&gt;
    &lt;p&gt;Test page.&lt;/p&gt;
  &lt;/body&gt;
&lt;/html&gt;</code></pre>

<p><code>request.get</code> sends an HTTP GET request to a server and retur=
ns an object containing the response. That object's <code>status_code</code=
> member is the response's status code; its <code>content_length</code> mem=
ber is the number of bytes in the response data, and <code>text</code> is t=
he actual data (in this case, an HTML page).</p>

<h2 id=3D"hello-web">Hello, Web</h2>

<p>We're now ready to write our first simple web server. The basic idea is =
simple:</p>

<ol style=3D"list-style-type: decimal">
<li>Wait for someone to connect to our server and send an HTTP request;</li=
>
<li>parse that request;</li>
<li>figure out what it's asking for;</li>
<li>fetch that data (or generate it dynamically);</li>
<li>format the data as HTML; and</li>
<li>send it back.</li>
</ol>

<p>Steps 1, 2, and 6 are the same from one application to another, so the P=
ython standard library has a module called <code>BaseHTTPServer</code> that=
 does those for us. We just have to take care of steps 3-5, which we do in =
the little program below:</p>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python"><span cl=
ass=3D"ch">import</span> BaseHTTPServer

<span class=3D"kw">class</span> RequestHandler(BaseHTTPServer.BaseHTTPReque=
stHandler):
    <span class=3D"co">'''Handle HTTP requests by returning a fixed 'page'.=
'''</span>

    <span class=3D"co"># Page to send back.</span>
    Page =3D <span class=3D"st">'''\</span>
<span class=3D"st">&lt;html&gt;</span>
<span class=3D"st">&lt;body&gt;</span>
<span class=3D"st">&lt;p&gt;Hello, web!&lt;/p&gt;</span>
<span class=3D"st">&lt;/body&gt;</span>
<span class=3D"st">&lt;/html&gt;</span>
<span class=3D"st">'''</span>

    <span class=3D"co"># Handle a GET request.</span>
    <span class=3D"kw">def</span> do_GET(<span class=3D"ot">self</span>):
        <span class=3D"ot">self</span>.send_response(<span class=3D"dv">200=
</span>)
        <span class=3D"ot">self</span>.send_header(<span class=3D"st">"Cont=
ent-Type"</span>, <span class=3D"st">"text/html"</span>)
        <span class=3D"ot">self</span>.send_header(<span class=3D"st">"Cont=
ent-Length"</span>, <span class=3D"dt">str</span>(<span class=3D"dt">len</s=
pan>(<span class=3D"ot">self</span>.Page)))
        <span class=3D"ot">self</span>.end_headers()
        <span class=3D"ot">self</span>.wfile.write(<span class=3D"ot">self<=
/span>.Page)

<span class=3D"co">#-------------------------------------------------------=
---------------</span>

<span class=3D"kw">if</span> <span class=3D"ot">__name__</span> =3D=3D <spa=
n class=3D"st">'__main__'</span>:
    serverAddress =3D (<span class=3D"st">''</span>, <span class=3D"dv">808=
0</span>)
    server =3D BaseHTTPServer.HTTPServer(serverAddress, RequestHandler)
    server.serve_forever()</code></pre>

<p>The library's <code>BaseHTTPRequestHandler</code> class takes care of pa=
rsing the incoming HTTP request and deciding what method it contains. If th=
e method is GET, the class calls a method named <code>do_GET</code>. Our cl=
ass <code>RequestHandler</code> overrides this method to dynamically genera=
te a simple page: the text is stored in the class-level variable <code>Page=
</code>, which we send back to the client after sending a 200 response code=
, a <code>Content-Type</code> header telling the client to interpret our da=
ta as HTML, and the page's length. (The <code>end_headers</code> method cal=
l inserts the blank line that separates our headers from the page itself.)<=
/p>

<p>But <code>RequestHandler</code> isn't the whole story: we still need the=
 last three lines to actually start a server running. The first of these li=
nes defines the server's address as a tuple: the empty string means "run on=
 the current machine", and 8080 is the port. We then create an instance of =
<code>BaseHTTPServer.HTTPServer</code> with that address and the name of ou=
r request handler class as parameters, then ask it to run forever (which in=
 practice means until we kill it with Control-C).</p>

<p>If we run this program from the command line, it doesn't display anythin=
g:</p>

<pre class=3D"sourceCode bash"><code class=3D"sourceCode bash">$ <span clas=
s=3D"kw">python</span> server.py</code></pre>

<p>If we then go to <code>http://localhost:8080</code> with our browser, th=
ough, we get this in our browser:</p>

<pre><code>Hello, web!</code></pre>

<p>and this in our shell:</p>

<pre><code>127.0.0.1 - - [24/Feb/2014 10:26:28] "GET / HTTP/1.1" 200 -
127.0.0.1 - - [24/Feb/2014 10:26:28] "GET /favicon.ico HTTP/1.1" 200 -</cod=
e></pre>

<p>The first line is straightforward: since we didn't ask for a particular =
file, our browser has asked for '/' (the root directory of whatever the ser=
ver is serving). The second line appears because our browser automatically =
sends a second request for an image file called <code>/favicon.ico</code>, =
which it will display as an icon in the address bar if it exists.</p>

<h2 id=3D"displaying-values">Displaying Values</h2>

<p>Let's modify our web server to display some of the values included in th=
e HTTP request. (We'll do this pretty frequently when debugging, so we migh=
t as well get some practice.) To keep our code clean, we'll separate creati=
ng the page from sending it:</p>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python"><span cl=
ass=3D"kw">class</span> RequestHandler(BaseHTTPServer.BaseHTTPRequestHandle=
r):

    <span class=3D"co"># ...page template...</span>

    <span class=3D"kw">def</span> do_GET(<span class=3D"ot">self</span>):
        page =3D <span class=3D"ot">self</span>.create_page()
        <span class=3D"ot">self</span>.send_page(page)

    <span class=3D"kw">def</span> create_page(<span class=3D"ot">self</span=
>):
        <span class=3D"co"># ...fill in...</span>

    <span class=3D"kw">def</span> send_page(<span class=3D"ot">self</span>,=
 page):
        <span class=3D"co"># ...fill in...</span></code></pre>

<p><code>send_page</code> is pretty much what we had before:</p>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python">    <spa=
n class=3D"kw">def</span> send_page(<span class=3D"ot">self</span>, page):
        <span class=3D"ot">self</span>.send_response(<span class=3D"dv">200=
</span>)
        <span class=3D"ot">self</span>.send_header(<span class=3D"st">"Cont=
ent-type"</span>, <span class=3D"st">"text/html"</span>)
        <span class=3D"ot">self</span>.send_header(<span class=3D"st">"Cont=
ent-Length"</span>, <span class=3D"dt">str</span>(<span class=3D"dt">len</s=
pan>(page)))
        <span class=3D"ot">self</span>.end_headers()
        <span class=3D"ot">self</span>.wfile.write(page)</code></pre>

<p>The template for the page we want to display is just a string containing=
 an HTML table with some formatting placeholders:</p>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python">    Page=
 =3D <span class=3D"st">'''\</span>
<span class=3D"st">&lt;html&gt;</span>
<span class=3D"st">&lt;body&gt;</span>
<span class=3D"st">&lt;table&gt;</span>
<span class=3D"st">&lt;tr&gt;  &lt;td&gt;Header&lt;/td&gt;         &lt;td&g=
t;Value&lt;/td&gt;          &lt;/tr&gt;</span>
<span class=3D"st">&lt;tr&gt;  &lt;td&gt;Date and time&lt;/td&gt;  &lt;td&g=
t;</span><span class=3D"ot">{date_time}</span><span class=3D"st">&lt;/td&gt=
;    &lt;/tr&gt;</span>
<span class=3D"st">&lt;tr&gt;  &lt;td&gt;Client host&lt;/td&gt;    &lt;td&g=
t;</span><span class=3D"ot">{client_host}</span><span class=3D"st">&lt;/td&=
gt;  &lt;/tr&gt;</span>
<span class=3D"st">&lt;tr&gt;  &lt;td&gt;Client port&lt;/td&gt;    &lt;td&g=
t;</span><span class=3D"ot">{client_port}</span><span class=3D"st">s&lt;/td=
&gt; &lt;/tr&gt;</span>
<span class=3D"st">&lt;tr&gt;  &lt;td&gt;Command&lt;/td&gt;        &lt;td&g=
t;</span><span class=3D"ot">{command}</span><span class=3D"st">&lt;/td&gt; =
     &lt;/tr&gt;</span>
<span class=3D"st">&lt;tr&gt;  &lt;td&gt;Path&lt;/td&gt;           &lt;td&g=
t;</span><span class=3D"ot">{path}</span><span class=3D"st">&lt;/td&gt;    =
     &lt;/tr&gt;</span>
<span class=3D"st">&lt;/table&gt;</span>
<span class=3D"st">&lt;/body&gt;</span>
<span class=3D"st">&lt;/html&gt;</span>
<span class=3D"st">'''</span></code></pre>

<p>and the method that fills this in is:</p>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python">    <spa=
n class=3D"kw">def</span> create_page(<span class=3D"ot">self</span>):
        values =3D {
            <span class=3D"st">'date_time'</span>   : <span class=3D"ot">se=
lf</span>.date_time_string(),
            <span class=3D"co">'client_host'</span> : <span class=3D"ot">se=
lf</span>.client_address[<span class=3D"dv">0</span>],
            <span class=3D"co">'client_port'</span> : <span class=3D"ot">se=
lf</span>.client_address[<span class=3D"dv">1</span>],
            <span class=3D"co">'command'</span>     : <span class=3D"ot">se=
lf</span>.command,
            <span class=3D"co">'path'</span>        : <span class=3D"ot">se=
lf</span>.path
        }
        page =3D <span class=3D"ot">self</span>.Page.<span class=3D"dt">for=
mat</span>(**values)
        <span class=3D"kw">return</span> page</code></pre>

<p>The main body of the program is unchanged: as before, it creates an inst=
ance of the <code>HTTPServer</code> class with an address and this request =
handler as parameters, then serves requests forever. If we run it and send =
a request from a browser for <code>http://localhost:8080/something.html</co=
de>, we get:</p>

<pre><code>  Date and time  Mon, 24 Feb 2014 17:17:12 GMT
  Client host    127.0.0.1
  Client port    54548
  Command        GET
  Path           /something.html</code></pre>

<p>Notice that we do <em>not</em> get a 404 error, even though the page <co=
de>something.html</code> doesn't exist as a file on disk. That's because a =
web server is just a program, and can do whatever it wants when it gets a r=
equest: send back the file named in the previous request, serve up a Wikipe=
dia page chosen at random, or whatever else we program it to.</p>

<h2 id=3D"serving-static-pages">Serving Static Pages</h2>

<p>The obvious next step is to start serving pages from the disk instead of=
 generating them on the fly. We'll start by rewriting <code>do_GET</code>:<=
/p>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python">    <spa=
n class=3D"kw">def</span> do_GET(<span class=3D"ot">self</span>):
        <span class=3D"kw">try</span>:

            <span class=3D"co"># Figure out what exactly is being requested=
.</span>
            full_path =3D os.getcwd() + <span class=3D"ot">self</span>.path

            <span class=3D"co"># It doesn't exist...</span>
            <span class=3D"kw">if</span> not os.path.exists(full_path):
                <span class=3D"kw">raise</span> ServerException(<span class=
=3D"st">"'</span><span class=3D"ot">{0}</span><span class=3D"st">' not foun=
d"</span>.<span class=3D"dt">format</span>(<span class=3D"ot">self</span>.p=
ath))

            <span class=3D"co"># ...it's a file...</span>
            <span class=3D"kw">elif</span> os.path.isfile(full_path):
                <span class=3D"ot">self</span>.handle_file(full_path)

            <span class=3D"co"># ...it's something we don't handle.</span>
            <span class=3D"kw">else</span>:
                <span class=3D"kw">raise</span> ServerException(<span class=
=3D"st">"Unknown object '</span><span class=3D"ot">{0}</span><span class=3D=
"st">'"</span>.<span class=3D"dt">format</span>(<span class=3D"ot">self</sp=
an>.path))

        <span class=3D"co"># Handle errors.</span>
        <span class=3D"kw">except</span> <span class=3D"ot">Exception</span=
> <span class=3D"ch">as</span> msg:
            <span class=3D"ot">self</span>.handle_error(msg)</code></pre>

<p>This method assumes that it's allowed to serve any files in or below the=
 directory that the web server is running in (which it gets using <code>os.=
getcwd</code>). It combines this with the path provided in the URL (which t=
he library automatically puts in <code>self.path</code>, and which always s=
tarts with a leading '/') to get the path to the file the user wants.</p>

<p>If that doesn't exist, or if it isn't a file, the method reports an erro=
r by raising and catching an exception. If the path matches a file, on the =
other hand, it calls a helper method named <code>handle_file</code> to read=
 and return the contents. This method just reads the file and uses our exis=
ting <code>send_content</code> to send it back to the client:</p>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python">    <spa=
n class=3D"kw">def</span> handle_file(<span class=3D"ot">self</span>, full_=
path):
        <span class=3D"kw">try</span>:
            <span class=3D"kw">with</span> <span class=3D"dt">open</span>(f=
ull_path, <span class=3D"st">'rb'</span>) <span class=3D"ch">as</span> read=
er:
                content =3D reader.read()
            <span class=3D"ot">self</span>.send_content(content)
        <span class=3D"kw">except</span> <span class=3D"ot">IOError</span> =
<span class=3D"ch">as</span> msg:
            msg =3D <span class=3D"st">"'</span><span class=3D"ot">{0}</spa=
n><span class=3D"st">' cannot be read: </span><span class=3D"ot">{1}</span>=
<span class=3D"st">"</span>.<span class=3D"dt">format</span>(<span class=3D=
"ot">self</span>.path, msg)
            <span class=3D"ot">self</span>.handle_error(msg)</code></pre>

<p>Note that we open the file in binary mode=E2=80=94the 'b' in 'rb'=E2=80=
=94so that Python won't try to "help" us by altering byte sequences that lo=
ok like a Windows line ending. Note also that reading the whole file into m=
emory when serving it is a bad idea in real life, where the file might be s=
everal gigabytes of video data. Handling that situation is outside the scop=
e of this chapter.</p>

<p>To finish off this class, we need to write the error handling method and=
 the template for the error reporting page:</p>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python">    Erro=
r_Page =3D <span class=3D"st">"""\</span>
<span class=3D"st">        &lt;html&gt;</span>
<span class=3D"st">        &lt;body&gt;</span>
<span class=3D"st">        &lt;h1&gt;Error accessing </span><span class=3D"=
ot">{path}</span><span class=3D"st">&lt;/h1&gt;</span>
<span class=3D"st">        &lt;p&gt;</span><span class=3D"ot">{msg}</span><=
span class=3D"st">&lt;/p&gt;</span>
<span class=3D"st">        &lt;/body&gt;</span>
<span class=3D"st">        &lt;/html&gt;</span>
<span class=3D"st">        """</span>

    <span class=3D"kw">def</span> handle_error(<span class=3D"ot">self</spa=
n>, msg):
        content =3D <span class=3D"ot">self</span>.Error_Page.<span class=
=3D"dt">format</span>(path=3D<span class=3D"ot">self</span>.path, msg=3Dmsg=
)
        <span class=3D"ot">self</span>.send_content(content)</code></pre>

<p>This program works, but only if we don't look too closely. The problem i=
s that it always returns a status code of 200, even when the page being req=
uested doesn't exist. Yes, the page sent back in that case contains an erro=
r message, but since our browser can't read English, it doesn't know that t=
he request actually failed. In order to make that clear, we need to modify =
<code>handle_error</code> and <code>send_content</code> as follows:</p>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python">    <spa=
n class=3D"co"># Handle unknown objects.</span>
    <span class=3D"kw">def</span> handle_error(<span class=3D"ot">self</spa=
n>, msg):
        content =3D <span class=3D"ot">self</span>.Error_Page.<span class=
=3D"dt">format</span>(path=3D<span class=3D"ot">self</span>.path, msg=3Dmsg=
)
        <span class=3D"ot">self</span>.send_content(content, <span class=3D=
"dv">404</span>)

    <span class=3D"co"># Send actual content.</span>
    <span class=3D"kw">def</span> send_content(<span class=3D"ot">self</spa=
n>, content, status=3D<span class=3D"dv">200</span>):
        <span class=3D"ot">self</span>.send_response(status)
        <span class=3D"ot">self</span>.send_header(<span class=3D"st">"Cont=
ent-type"</span>, <span class=3D"st">"text/html"</span>)
        <span class=3D"ot">self</span>.send_header(<span class=3D"st">"Cont=
ent-Length"</span>, <span class=3D"dt">str</span>(<span class=3D"dt">len</s=
pan>(content)))
        <span class=3D"ot">self</span>.end_headers()
        <span class=3D"ot">self</span>.wfile.write(content)</code></pre>

<p>Note that we don't raise <code>ServerException</code> when a file can't =
be found, but generate an error page instead. A <code>ServerException</code=
> is meant to signal an internal error in the server code, i.e., something =
that <em>we</em> got wrong. The error page created by <code>handle_error</c=
ode>, on the other hand, appears when the <em>user</em> got something wrong=
, i.e., sent us the URL of a file that doesn't exist. <a href=3D"http://aos=
abook.org/en/500L/a-simple-web-server.html#fn1" class=3D"footnoteRef" id=3D=
"fnref1"><sup>1</sup></a></p>

<h2 id=3D"listing-directories">Listing Directories</h2>

<p>As our next step, we could teach the web server to display a listing of =
a directory's contents when the path in the URL is a directory rather than =
a file. We could even go one step further and have it look in that director=
y for an <code>index.html</code> file to display, and only show a listing o=
f the directory's contents if that file is not present.</p>

<p>But building these rules into <code>do_GET</code> would be a mistake, si=
nce the resulting method would be a long tangle of <code>if</code> statemen=
ts controlling special behaviors. The right solution is to step back and so=
lve the general problem, which is figuring out what to do with a URL. Here'=
s a rewrite of the <code>do_GET</code> method:</p>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python">    <spa=
n class=3D"kw">def</span> do_GET(<span class=3D"ot">self</span>):
        <span class=3D"kw">try</span>:

            <span class=3D"co"># Figure out what exactly is being requested=
.</span>
            <span class=3D"ot">self</span>.full_path =3D os.getcwd() + <spa=
n class=3D"ot">self</span>.path

            <span class=3D"co"># Figure out how to handle it.</span>
            <span class=3D"kw">for</span> case in <span class=3D"ot">self</=
span>.Cases:
                handler =3D case()
                <span class=3D"kw">if</span> handler.test(<span class=3D"ot=
">self</span>):
                    handler.act(<span class=3D"ot">self</span>)
                    <span class=3D"kw">break</span>

        <span class=3D"co"># Handle errors.</span>
        <span class=3D"kw">except</span> <span class=3D"ot">Exception</span=
> <span class=3D"ch">as</span> msg:
            <span class=3D"ot">self</span>.handle_error(msg)</code></pre>

<p>The first step is the same: figure out the full path to the thing being =
requested. After that, though, the code looks quite different. Instead of a=
 bunch of inline tests, this version loops over a set of cases stored in a =
list. Each case is an object with two methods: <code>test</code>, which tel=
ls us whether it's able to handle the request, and <code>act</code>, which =
actually takes some action. As soon as we find the right case, we let it ha=
ndle the request and break out of the loop.</p>

<p>These three case classes reproduce the behavior of our previous server:<=
/p>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python"><span cl=
ass=3D"kw">class</span> case_no_file(<span class=3D"dt">object</span>):
    <span class=3D"co">'''File or directory does not exist.'''</span>

    <span class=3D"kw">def</span> test(<span class=3D"ot">self</span>, hand=
ler):
        <span class=3D"kw">return</span> not os.path.exists(handler.full_pa=
th)

    <span class=3D"kw">def</span> act(<span class=3D"ot">self</span>, handl=
er):
        <span class=3D"kw">raise</span> ServerException(<span class=3D"st">=
"'</span><span class=3D"ot">{0}</span><span class=3D"st">' not found"</span=
>.<span class=3D"dt">format</span>(handler.path))


<span class=3D"kw">class</span> case_existing_file(<span class=3D"dt">objec=
t</span>):
    <span class=3D"co">'''File exists.'''</span>

    <span class=3D"kw">def</span> test(<span class=3D"ot">self</span>, hand=
ler):
        <span class=3D"kw">return</span> os.path.isfile(handler.full_path)

    <span class=3D"kw">def</span> act(<span class=3D"ot">self</span>, handl=
er):
        handler.handle_file(handler.full_path)


<span class=3D"kw">class</span> case_always_fail(<span class=3D"dt">object<=
/span>):
    <span class=3D"co">'''Base case if nothing else worked.'''</span>

    <span class=3D"kw">def</span> test(<span class=3D"ot">self</span>, hand=
ler):
        <span class=3D"kw">return</span> <span class=3D"ot">True</span>

    <span class=3D"kw">def</span> act(<span class=3D"ot">self</span>, handl=
er):
        <span class=3D"kw">raise</span> ServerException(<span class=3D"st">=
"Unknown object '</span><span class=3D"ot">{0}</span><span class=3D"st">'"<=
/span>.<span class=3D"dt">format</span>(handler.path))</code></pre>

<p>and here's how we construct the list of case handlers at the top of the =
<code>RequestHandler</code> class:</p>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python"><span cl=
ass=3D"kw">class</span> RequestHandler(BaseHTTPServer.BaseHTTPRequestHandle=
r):
    <span class=3D"co">'''</span>
<span class=3D"co">    If the requested path maps to a file, that file is s=
erved.</span>
<span class=3D"co">    If anything goes wrong, an error page is constructed=
.</span>
<span class=3D"co">    '''</span>

    Cases =3D [case_no_file(),
             case_existing_file(),
             case_always_fail()]

    ...everything <span class=3D"kw">else</span> <span class=3D"ch">as</spa=
n> before...</code></pre>

<p>Now, on the surface this has made our server more complicated, not less:=
 the file has grown from 74 lines to 99, and there's an extra level of indi=
rection without any new functionality. The benefit comes when we go back to=
 the task that started this chapter and try to teach our server to serve up=
 the <code>index.html</code> page for a directory if there is one, and a li=
sting of the directory if there isn't. The handler for the former is:</p>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python"><span cl=
ass=3D"kw">class</span> case_directory_index_file(<span class=3D"dt">object=
</span>):
    <span class=3D"co">'''Serve index.html page for a directory.'''</span>

    <span class=3D"kw">def</span> index_path(<span class=3D"ot">self</span>=
, handler):
        <span class=3D"kw">return</span> os.path.join(handler.full_path, <s=
pan class=3D"st">'index.html'</span>)

    <span class=3D"kw">def</span> test(<span class=3D"ot">self</span>, hand=
ler):
        <span class=3D"kw">return</span> os.path.isdir(handler.full_path) a=
nd \
               os.path.isfile(<span class=3D"ot">self</span>.index_path(han=
dler))

    <span class=3D"kw">def</span> act(<span class=3D"ot">self</span>, handl=
er):
        handler.handle_file(<span class=3D"ot">self</span>.index_path(handl=
er))</code></pre>

<p>Here, the helper method <code>index_path</code> constructs the path to t=
he <code>index.html</code> file; putting it in the case handler prevents cl=
utter in the main <code>RequestHandler</code>. <code>test</code> checks whe=
ther the path is a directory containing an <code>index.html</code> page, an=
d <code>act</code> asks the main request handler to serve that page.</p>

<p>The only change needed to <code>RequestHandler</code> is to add a <code>=
case_directory_index_file</code> object to our <code>Cases</code> list:</p>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python">    Case=
s =3D [case_no_file(),
             case_existing_file(),
             case_directory_index_file(),
             case_always_fail()]</code></pre>

<p>What about directories that don't contain <code>index.html</code> pages?=
 The test is the same as the one above with a <code>not</code> strategicall=
y inserted, but what about the <code>act</code> method? What should it do?<=
/p>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python"><span cl=
ass=3D"kw">class</span> case_directory_no_index_file(<span class=3D"dt">obj=
ect</span>):
    <span class=3D"co">'''Serve listing for a directory without an index.ht=
ml page.'''</span>

    <span class=3D"kw">def</span> index_path(<span class=3D"ot">self</span>=
, handler):
        <span class=3D"kw">return</span> os.path.join(handler.full_path, <s=
pan class=3D"st">'index.html'</span>)

    <span class=3D"kw">def</span> test(<span class=3D"ot">self</span>, hand=
ler):
        <span class=3D"kw">return</span> os.path.isdir(handler.full_path) a=
nd \
               not os.path.isfile(<span class=3D"ot">self</span>.index_path=
(handler))

    <span class=3D"kw">def</span> act(<span class=3D"ot">self</span>, handl=
er):
        ???</code></pre>

<p>It seems we've backed ourselves into a corner. Logically, the <code>act<=
/code> method should create and return the directory listing, but our exist=
ing code doesn't allow for that: <code>RequestHandler.do_GET</code> calls <=
code>act</code>, but doesn't expect or handle a return value from it. For n=
ow, let's add a method to <code>RequestHandler</code> to generate a directo=
ry listing, and call that from the case handler's <code>act</code>:</p>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python"><span cl=
ass=3D"kw">class</span> case_directory_no_index_file(<span class=3D"dt">obj=
ect</span>):
    <span class=3D"co">'''Serve listing for a directory without an index.ht=
ml page.'''</span>

    <span class=3D"co"># ...index_path and test as above...</span>

    <span class=3D"kw">def</span> act(<span class=3D"ot">self</span>, handl=
er):
        handler.list_dir(handler.full_path)


<span class=3D"kw">class</span> RequestHandler(BaseHTTPServer.BaseHTTPReque=
stHandler):

    <span class=3D"co"># ...all the other code...</span>

    <span class=3D"co"># How to display a directory listing.</span>
    Listing_Page =3D <span class=3D"st">'''\</span>
<span class=3D"st">        &lt;html&gt;</span>
<span class=3D"st">        &lt;body&gt;</span>
<span class=3D"st">        &lt;ul&gt;</span>
<span class=3D"st">        </span><span class=3D"ot">{0}</span>
<span class=3D"st">        &lt;/ul&gt;</span>
<span class=3D"st">        &lt;/body&gt;</span>
<span class=3D"st">        &lt;/html&gt;</span>
<span class=3D"st">        '''</span>

    <span class=3D"kw">def</span> list_dir(<span class=3D"ot">self</span>, =
full_path):
        <span class=3D"kw">try</span>:
            entries =3D os.listdir(full_path)
            bullets =3D [<span class=3D"st">'&lt;li&gt;</span><span class=
=3D"ot">{0}</span><span class=3D"st">&lt;/li&gt;'</span>.<span class=3D"dt"=
>format</span>(e)=20
                <span class=3D"kw">for</span> e in entries <span class=3D"k=
w">if</span> not e.startswith(<span class=3D"st">'.'</span>)]
            page =3D <span class=3D"ot">self</span>.Listing_Page.<span clas=
s=3D"dt">format</span>(<span class=3D"st">'</span><span class=3D"ch">\n</sp=
an><span class=3D"st">'</span>.join(bullets))
            <span class=3D"ot">self</span>.send_content(page)
        <span class=3D"kw">except</span> <span class=3D"ot">OSError</span> =
<span class=3D"ch">as</span> msg:
            msg =3D <span class=3D"st">"'</span><span class=3D"ot">{0}</spa=
n><span class=3D"st">' cannot be listed: </span><span class=3D"ot">{1}</spa=
n><span class=3D"st">"</span>.<span class=3D"dt">format</span>(<span class=
=3D"ot">self</span>.path, msg)
            <span class=3D"ot">self</span>.handle_error(msg)</code></pre>

<h2 id=3D"the-cgi-protocol">The CGI Protocol</h2>

<p>Of course, most people won't want to edit the source of their web server=
 in order to add new functionality. To save them from having to do so, serv=
ers have always supported a mechanism called the Common Gateway Interface (=
CGI), which provides a standard way for a web server to run an external pro=
gram in order to satisfy a request.</p>

<p>For example, suppose we want the server to be able to display the local =
time in an HTML page. We can do this in a standalone program with just a fe=
w lines of code:</p>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python"><span cl=
ass=3D"ch">from</span> datetime <span class=3D"ch">import</span> datetime
<span class=3D"dt">print</span> <span class=3D"st">'''\</span>
<span class=3D"st">&lt;html&gt;</span>
<span class=3D"st">&lt;body&gt;</span>
<span class=3D"st">&lt;p&gt;Generated </span><span class=3D"ot">{0}</span><=
span class=3D"st">&lt;/p&gt;</span>
<span class=3D"st">&lt;/body&gt;</span>
<span class=3D"st">&lt;/html&gt;'''</span>.<span class=3D"dt">format</span>=
(datetime.now())</code></pre>

<p>In order to get the web server to run this program for us, we add this c=
ase handler:</p>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python"><span cl=
ass=3D"kw">class</span> case_cgi_file(<span class=3D"dt">object</span>):
    <span class=3D"co">'''Something runnable.'''</span>

    <span class=3D"kw">def</span> test(<span class=3D"ot">self</span>, hand=
ler):
        <span class=3D"kw">return</span> os.path.isfile(handler.full_path) =
and \
               handler.full_path.endswith(<span class=3D"st">'.py'</span>)

    <span class=3D"kw">def</span> act(<span class=3D"ot">self</span>, handl=
er):
        handler.run_cgi(handler.full_path)</code></pre>

<p>The test is simple: does the file path end with <code>.py</code>? If so,=
 <code>RequestHandler</code> runs this program.</p>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python">    <spa=
n class=3D"kw">def</span> run_cgi(<span class=3D"ot">self</span>, full_path=
):
        cmd =3D <span class=3D"st">"python "</span> + full_path
        child_stdin, child_stdout =3D os.popen2(cmd)
        child_stdin.close()
        data =3D child_stdout.read()
        child_stdout.close()
        <span class=3D"ot">self</span>.send_content(data)</code></pre>

<p>This is horribly insecure: if someone knows the path to a Python file on=
 our server, we're just letting them run it without worrying about what dat=
a it has access to, whether it might contain an infinite loop, or anything =
else.<a href=3D"http://aosabook.org/en/500L/a-simple-web-server.html#fn2" c=
lass=3D"footnoteRef" id=3D"fnref2"><sup>2</sup></a></p>

<p>Sweeping that aside, the core idea is simple:</p>

<ol style=3D"list-style-type: decimal">
<li>Run the program in a subprocess.</li>
<li>Capture whatever that subprocess sends to standard output.</li>
<li>Send that back to the client that made the request.</li>
</ol>

<p>The full CGI protocol is much richer than this=E2=80=94in particular, it=
 allows for parameters in the URL, which the server passes into the program=
 being run=E2=80=94but those details don't affect the overall architecture =
of the system...</p>

<p>...which is once again becoming rather tangled. <code>RequestHandler</co=
de> initially had one method, <code>handle_file</code>, for dealing with co=
ntent. We have now added two special cases in the form of <code>list_dir</c=
ode> and <code>run_cgi</code>. These three methods don't really belong wher=
e they are, since they're primarily used by others.</p>

<p>The fix is straightforward: create a parent class for all our case handl=
ers, and move other methods to that class if (and only if) they are shared =
by two or more handlers. When we're done, the <code>RequestHandler</code> c=
lass looks like this:</p>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python"><span cl=
ass=3D"kw">class</span> RequestHandler(BaseHTTPServer.BaseHTTPRequestHandle=
r):

    Cases =3D [case_no_file(),
             case_cgi_file(),
             case_existing_file(),
             case_directory_index_file(),
             case_directory_no_index_file(),
             case_always_fail()]

    <span class=3D"co"># How to display an error.</span>
    Error_Page =3D <span class=3D"st">"""\</span>
<span class=3D"st">        &lt;html&gt;</span>
<span class=3D"st">        &lt;body&gt;</span>
<span class=3D"st">        &lt;h1&gt;Error accessing </span><span class=3D"=
ot">{path}</span><span class=3D"st">&lt;/h1&gt;</span>
<span class=3D"st">        &lt;p&gt;</span><span class=3D"ot">{msg}</span><=
span class=3D"st">&lt;/p&gt;</span>
<span class=3D"st">        &lt;/body&gt;</span>
<span class=3D"st">        &lt;/html&gt;</span>
<span class=3D"st">        """</span>

    <span class=3D"co"># Classify and handle request.</span>
    <span class=3D"kw">def</span> do_GET(<span class=3D"ot">self</span>):
        <span class=3D"kw">try</span>:

            <span class=3D"co"># Figure out what exactly is being requested=
.</span>
            <span class=3D"ot">self</span>.full_path =3D os.getcwd() + <spa=
n class=3D"ot">self</span>.path

            <span class=3D"co"># Figure out how to handle it.</span>
            <span class=3D"kw">for</span> case in <span class=3D"ot">self</=
span>.Cases:
                <span class=3D"kw">if</span> case.test(<span class=3D"ot">s=
elf</span>):
                    case.act(<span class=3D"ot">self</span>)
                    <span class=3D"kw">break</span>

        <span class=3D"co"># Handle errors.</span>
        <span class=3D"kw">except</span> <span class=3D"ot">Exception</span=
> <span class=3D"ch">as</span> msg:
            <span class=3D"ot">self</span>.handle_error(msg)

    <span class=3D"co"># Handle unknown objects.</span>
    <span class=3D"kw">def</span> handle_error(<span class=3D"ot">self</spa=
n>, msg):
        content =3D <span class=3D"ot">self</span>.Error_Page.<span class=
=3D"dt">format</span>(path=3D<span class=3D"ot">self</span>.path, msg=3Dmsg=
)
        <span class=3D"ot">self</span>.send_content(content, <span class=3D=
"dv">404</span>)

    <span class=3D"co"># Send actual content.</span>
    <span class=3D"kw">def</span> send_content(<span class=3D"ot">self</spa=
n>, content, status=3D<span class=3D"dv">200</span>):
        <span class=3D"ot">self</span>.send_response(status)
        <span class=3D"ot">self</span>.send_header(<span class=3D"st">"Cont=
ent-type"</span>, <span class=3D"st">"text/html"</span>)
        <span class=3D"ot">self</span>.send_header(<span class=3D"st">"Cont=
ent-Length"</span>, <span class=3D"dt">str</span>(<span class=3D"dt">len</s=
pan>(content)))
        <span class=3D"ot">self</span>.end_headers()
        <span class=3D"ot">self</span>.wfile.write(content)</code></pre>

<p>while the parent class for our case handlers is:</p>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python"><span cl=
ass=3D"kw">class</span> base_case(<span class=3D"dt">object</span>):
    <span class=3D"co">'''Parent for case handlers.'''</span>

    <span class=3D"kw">def</span> handle_file(<span class=3D"ot">self</span=
>, handler, full_path):
        <span class=3D"kw">try</span>:
            <span class=3D"kw">with</span> <span class=3D"dt">open</span>(f=
ull_path, <span class=3D"st">'rb'</span>) <span class=3D"ch">as</span> read=
er:
                content =3D reader.read()
            handler.send_content(content)
        <span class=3D"kw">except</span> <span class=3D"ot">IOError</span> =
<span class=3D"ch">as</span> msg:
            msg =3D <span class=3D"st">"'</span><span class=3D"ot">{0}</spa=
n><span class=3D"st">' cannot be read: </span><span class=3D"ot">{1}</span>=
<span class=3D"st">"</span>.<span class=3D"dt">format</span>(full_path, msg=
)
            handler.handle_error(msg)

    <span class=3D"kw">def</span> index_path(<span class=3D"ot">self</span>=
, handler):
        <span class=3D"kw">return</span> os.path.join(handler.full_path, <s=
pan class=3D"st">'index.html'</span>)

    <span class=3D"kw">def</span> test(<span class=3D"ot">self</span>, hand=
ler):
        <span class=3D"kw">assert</span> <span class=3D"ot">False</span>, <=
span class=3D"st">'Not implemented.'</span>

    <span class=3D"kw">def</span> act(<span class=3D"ot">self</span>, handl=
er):
        <span class=3D"kw">assert</span> <span class=3D"ot">False</span>, <=
span class=3D"st">'Not implemented.'</span></code></pre>

<p>and the handler for an existing file (just to pick an example at random)=
 is:</p>

<pre class=3D"sourceCode python"><code class=3D"sourceCode python"><span cl=
ass=3D"kw">class</span> case_existing_file(base_case):
    <span class=3D"co">'''File exists.'''</span>

    <span class=3D"kw">def</span> test(<span class=3D"ot">self</span>, hand=
ler):
        <span class=3D"kw">return</span> os.path.isfile(handler.full_path)

    <span class=3D"kw">def</span> act(<span class=3D"ot">self</span>, handl=
er):
        <span class=3D"ot">self</span>.handle_file(handler, handler.full_pa=
th)</code></pre>

<h2 id=3D"discussion">Discussion</h2>

<p>The differences between our original code and the refactored version ref=
lect two important ideas. The first is to think of a class as a collection =
of related services. <code>RequestHandler</code> and <code>base_case</code>=
 don't make decisions or take actions; they provide tools that other classe=
s can use to do those things.</p>

<p>The second is extensibility: people can add new functionality to our web=
 server either by writing an external CGI program, or by adding a case hand=
ler class. The latter does require a one-line change to <code>RequestHandle=
r</code> (to insert the case handler in the <code>Cases</code> list), but w=
e could get rid of that by having the web server read a configuration file =
and load handler classes from that. In both cases, they can ignore most low=
er-level details, just as the authors of the <code>BaseHTTPRequestHandler</=
code> class have allowed us to ignore the details of handling socket connec=
tions and parsing HTTP requests.</p>

<p>These ideas are generally useful; see if you can find ways to use them i=
n your own projects.</p>

<div class=3D"footnotes">
<hr>
<ol>
<li id=3D"fn1"><p>We're going to use <code>handle_error</code> several time=
s throughout this chapter, including several cases where the status code <c=
ode>404</code> isn't appropriate. As you read on, try to think of how you w=
ould extend this program so that the status response code can be supplied e=
asily in each case.<a href=3D"http://aosabook.org/en/500L/a-simple-web-serv=
er.html#fnref1">=E2=86=A9</a></p></li>
<li id=3D"fn2"><p>Our code also uses the <code>popen2</code> library functi=
on, which has been deprecated in favor of the <code>subprocess</code> modul=
e. However, <code>popen2</code> was the less distracting tool to use in thi=
s example.<a href=3D"http://aosabook.org/en/500L/a-simple-web-server.html#f=
nref2">=E2=86=A9</a></p></li>
</ol>
</div>
        </div>
      </div>
    </div>
 =20
<div id=3D"cntvlive2-is-installed"></div><div id=3D"qb-sougou-search" style=
=3D"display: none; opacity: 0;"><p>=E6=90=9C=E7=B4=A2</p><p class=3D"last-b=
tn">=E5=A4=8D=E5=88=B6</p><iframe src=3D"cid:frame-122-7bc3e1b7-0b9f-49d6-8=
da0-3db2dceed901@mhtml.blink"></iframe></div></body></html>
------MultipartBoundary--A65PNfRy6urSuiiQwfKin0MjqHJD8BhVvVl02Pjh2h----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://aosabook.org/en/500L/theme/css/bootstrap.css

@charset "utf-8";

article, aside, details, figcaption, figure, footer, header, hgroup, nav, s=
ection { display: block; }

audio, canvas, video { display: inline-block; }

audio:not([controls]) { display: none; }

html { font-size: 100%; text-size-adjust: 100%; }

a:focus { outline: -webkit-focus-ring-color auto 5px; outline-offset: -2px;=
 }

a:hover, a:active { outline: 0px; }

sub, sup { position: relative; font-size: 75%; line-height: 0; vertical-ali=
gn: baseline; }

sup { top: -0.5em; }

sub { bottom: -0.25em; }

img { max-width: 100%; height: auto; border: 0px; }

button, input, select, textarea { margin: 0px; font-size: 100%; vertical-al=
ign: middle; }

button, input { line-height: normal; }

button, input[type=3D"button"], input[type=3D"reset"], input[type=3D"submit=
"] { cursor: pointer; -webkit-appearance: button; }

input[type=3D"search"] { -webkit-appearance: textfield; box-sizing: content=
-box; }

input[type=3D"search"]::-webkit-search-decoration, input[type=3D"search"]::=
-webkit-search-cancel-button { -webkit-appearance: none; }

textarea { overflow: auto; vertical-align: top; }

.clearfix { }

.clearfix::before, .clearfix::after { display: table; content: ""; }

.clearfix::after { clear: both; }

body { margin: 0px; font-family: "Helvetica Neue", Helvetica, Arial, sans-s=
erif; font-size: 13px; line-height: 18px; color: rgb(51, 51, 51); backgroun=
d-color: rgb(255, 255, 255); }

a { color: rgb(0, 136, 204); text-decoration: none; }

a:hover { color: rgb(0, 85, 128); text-decoration: underline; }

.row { margin-left: -20px; }

.row::before, .row::after { display: table; content: ""; }

.row::after { clear: both; }

[class*=3D"span"] { float: left; margin-left: 20px; }

.span1 { width: 60px; }

.span2 { width: 140px; }

.span3 { width: 220px; }

.span4 { width: 300px; }

.span5 { width: 380px; }

.span6 { width: 460px; }

.span7 { width: 540px; }

.span8 { width: 620px; }

.span9 { width: 700px; }

.span10 { width: 780px; }

.span11 { width: 860px; }

.span12, .container { width: 940px; }

.offset1 { margin-left: 100px; }

.offset2 { margin-left: 180px; }

.offset3 { margin-left: 260px; }

.offset4 { margin-left: 340px; }

.offset5 { margin-left: 420px; }

.offset6 { margin-left: 500px; }

.offset7 { margin-left: 580px; }

.offset8 { margin-left: 660px; }

.offset9 { margin-left: 740px; }

.offset10 { margin-left: 820px; }

.offset11 { margin-left: 900px; }

.row-fluid { width: 100%; }

.row-fluid::before, .row-fluid::after { display: table; content: ""; }

.row-fluid::after { clear: both; }

.row-fluid > [class*=3D"span"] { float: left; margin-left: 2.12766%; }

.row-fluid > [class*=3D"span"]:first-child { margin-left: 0px; }

.row-fluid > .span1 { width: 6.38298%; }

.row-fluid > .span2 { width: 14.8936%; }

.row-fluid > .span3 { width: 23.4043%; }

.row-fluid > .span4 { width: 31.9149%; }

.row-fluid > .span5 { width: 40.4255%; }

.row-fluid > .span6 { width: 48.9362%; }

.row-fluid > .span7 { width: 57.4468%; }

.row-fluid > .span8 { width: 65.9574%; }

.row-fluid > .span9 { width: 74.4681%; }

.row-fluid > .span10 { width: 82.9787%; }

.row-fluid > .span11 { width: 91.4894%; }

.row-fluid > .span12 { width: 100%; }

.container { width: 940px; margin-left: auto; margin-right: auto; }

.container::before, .container::after { display: table; content: ""; }

.container::after { clear: both; }

.container-fluid { padding-left: 20px; padding-right: 20px; }

.container-fluid::before, .container-fluid::after { display: table; content=
: ""; }

.container-fluid::after { clear: both; }

p { margin: 0px 0px 9px; font-family: "Helvetica Neue", Helvetica, Arial, s=
ans-serif; font-size: 13px; line-height: 18px; }

p small { font-size: 11px; color: rgb(153, 153, 153); }

.lead { margin-bottom: 18px; font-size: 20px; font-weight: 200; line-height=
: 27px; }

h1, h2, h3, h4, h5, h6 { margin: 0px; font-weight: bold; color: rgb(51, 51,=
 51); text-rendering: optimizeLegibility; }

h1 small, h2 small, h3 small, h4 small, h5 small, h6 small { font-weight: n=
ormal; color: rgb(153, 153, 153); }

h1 { font-size: 30px; line-height: 36px; }

h1 small { font-size: 18px; }

h2 { font-size: 24px; line-height: 36px; }

h2 small { font-size: 18px; }

h3 { line-height: 27px; font-size: 18px; }

h3 small { font-size: 14px; }

h4, h5, h6 { line-height: 18px; }

h4 { font-size: 14px; }

h4 small { font-size: 12px; }

h5 { font-size: 12px; }

h6 { font-size: 11px; color: rgb(153, 153, 153); text-transform: uppercase;=
 }

.page-header { padding-bottom: 17px; margin: 18px 0px; border-bottom: 1px s=
olid rgb(238, 238, 238); }

.page-header h1 { line-height: 1; }

ul, ol { padding: 0px; margin: 0px 0px 9px 25px; }

ul ul, ul ol, ol ol, ol ul { margin-bottom: 0px; }

ul { list-style: disc; }

ol { list-style: decimal; }

li { line-height: 18px; }

ul.unstyled, ol.unstyled { margin-left: 0px; list-style: none; }

dl { margin-bottom: 18px; }

dt, dd { line-height: 18px; }

dt { font-weight: bold; }

dd { margin-left: 9px; }

hr { margin: 18px 0px; border-width: 1px 0px; border-right-style: initial; =
border-left-style: initial; border-right-color: initial; border-left-color:=
 initial; border-image: initial; border-top-style: solid; border-top-color:=
 rgb(238, 238, 238); border-bottom-style: solid; border-bottom-color: rgb(2=
55, 255, 255); }

strong { font-weight: bold; }

em { font-style: italic; }

.muted { color: rgb(153, 153, 153); }

abbr { font-size: 90%; text-transform: uppercase; border-bottom: 1px dotted=
 rgb(221, 221, 221); cursor: help; }

blockquote { padding: 0px 0px 0px 15px; margin: 0px 0px 18px; border-left: =
5px solid rgb(238, 238, 238); }

blockquote p { margin-bottom: 0px; font-size: 16px; font-weight: 300; line-=
height: 22.5px; }

blockquote small { display: block; line-height: 18px; color: rgb(153, 153, =
153); }

blockquote small::before { content: "=E2=80=94=C2=A0"; }

blockquote.pull-right { float: right; padding-left: 0px; padding-right: 15p=
x; border-left: 0px; border-right: 5px solid rgb(238, 238, 238); }

blockquote.pull-right p, blockquote.pull-right small { text-align: right; }

q::before, q::after, blockquote::before, blockquote::after { content: ""; }

address { display: block; margin-bottom: 18px; line-height: 18px; font-styl=
e: normal; }

small { font-size: 100%; }

cite { font-style: normal; }

code, pre { padding: 0px 3px 2px; font-family: Menlo, Monaco, "Courier New"=
, monospace; font-size: 12px; color: rgb(51, 51, 51); border-radius: 3px; }

code { padding: 3px 4px; background-color: rgb(247, 247, 249); border: 1px =
solid rgb(225, 225, 232); }

pre { display: block; padding: 8.5px; margin: 0px 0px 9px; font-size: 12px;=
 line-height: 18px; background-color: rgb(245, 245, 245); border: 1px solid=
 rgba(0, 0, 0, 0.14902); border-radius: 4px; overflow-x: auto; overflow-y: =
hidden; width: auto; }

pre.prettyprint { margin-bottom: 18px; }

pre code { padding: 0px; color: inherit; background-color: transparent; bor=
der: 0px; }

.pre-scrollable { max-height: 340px; overflow-y: scroll; }

form { margin: 0px 0px 18px; }

fieldset { padding: 0px; margin: 0px; border: 0px; }

legend { display: block; width: 100%; padding: 0px; margin-bottom: 27px; fo=
nt-size: 19.5px; line-height: 36px; color: rgb(51, 51, 51); border-width: 0=
px 0px 1px; border-top-style: initial; border-right-style: initial; border-=
left-style: initial; border-top-color: initial; border-right-color: initial=
; border-left-color: initial; border-image: initial; border-bottom-style: s=
olid; border-bottom-color: rgb(238, 238, 238); }

legend small { font-size: 13.5px; color: rgb(153, 153, 153); }

label, input, button, select, textarea { font-size: 13px; font-weight: norm=
al; line-height: 18px; }

input, button, select, textarea { font-family: "Helvetica Neue", Helvetica,=
 Arial, sans-serif; }

label { display: block; margin-bottom: 5px; color: rgb(51, 51, 51); }

input, textarea, select, .uneditable-input { display: inline-block; width: =
210px; height: 18px; padding: 4px; margin-bottom: 9px; font-size: 13px; lin=
e-height: 18px; color: rgb(85, 85, 85); border: 1px solid rgb(204, 204, 204=
); border-radius: 3px; }

.uneditable-textarea { width: auto; height: auto; }

label input, label textarea, label select { display: block; }

input[type=3D"image"], input[type=3D"checkbox"], input[type=3D"radio"] { wi=
dth: auto; height: auto; padding: 0px; margin: 3px 0px; line-height: normal=
; cursor: pointer; border-radius: 0px; }

input[type=3D"image"] { border: 0px; }

input[type=3D"file"] { width: auto; padding: initial; line-height: initial;=
 border: initial; background-color: initial; box-shadow: none; }

input[type=3D"button"], input[type=3D"reset"], input[type=3D"submit"] { wid=
th: auto; height: auto; }

select, input[type=3D"file"] { height: 28px; line-height: 28px; }

input[type=3D"file"] { }

select { width: 220px; background-color: rgb(255, 255, 255); }

select[multiple], select[size] { height: auto; }

input[type=3D"image"] { box-shadow: none; }

textarea { height: auto; }

input[type=3D"hidden"] { display: none; }

.radio, .checkbox { padding-left: 18px; }

.radio input[type=3D"radio"], .checkbox input[type=3D"checkbox"] { float: l=
eft; margin-left: -18px; }

.controls > .radio:first-child, .controls > .checkbox:first-child { padding=
-top: 5px; }

.radio.inline, .checkbox.inline { display: inline-block; padding-top: 5px; =
margin-bottom: 0px; vertical-align: middle; }

.radio.inline + .radio.inline, .checkbox.inline + .checkbox.inline { margin=
-left: 10px; }

input, textarea { box-shadow: rgba(0, 0, 0, 0.0745098) 0px 1px 1px inset; t=
ransition: border 0.2s linear, box-shadow 0.2s linear; }

input:focus, textarea:focus { border-color: rgba(82, 168, 236, 0.8); box-sh=
adow: rgba(0, 0, 0, 0.0745098) 0px 1px 1px inset, rgba(82, 168, 236, 0.6) 0=
px 0px 8px; outline: 0px; }

input[type=3D"file"]:focus, input[type=3D"radio"]:focus, input[type=3D"chec=
kbox"]:focus, select:focus { box-shadow: none; outline: -webkit-focus-ring-=
color auto 5px; outline-offset: -2px; }

.input-mini { width: 60px; }

.input-small { width: 90px; }

.input-medium { width: 150px; }

.input-large { width: 210px; }

.input-xlarge { width: 270px; }

.input-xxlarge { width: 530px; }

input[class*=3D"span"], select[class*=3D"span"], textarea[class*=3D"span"],=
 .uneditable-input { float: none; margin-left: 0px; }

input.span1, textarea.span1, .uneditable-input.span1 { width: 50px; }

input.span2, textarea.span2, .uneditable-input.span2 { width: 130px; }

input.span3, textarea.span3, .uneditable-input.span3 { width: 210px; }

input.span4, textarea.span4, .uneditable-input.span4 { width: 290px; }

input.span5, textarea.span5, .uneditable-input.span5 { width: 370px; }

input.span6, textarea.span6, .uneditable-input.span6 { width: 450px; }

input.span7, textarea.span7, .uneditable-input.span7 { width: 530px; }

input.span8, textarea.span8, .uneditable-input.span8 { width: 610px; }

input.span9, textarea.span9, .uneditable-input.span9 { width: 690px; }

input.span10, textarea.span10, .uneditable-input.span10 { width: 770px; }

input.span11, textarea.span11, .uneditable-input.span11 { width: 850px; }

input.span12, textarea.span12, .uneditable-input.span12 { width: 930px; }

input[disabled], select[disabled], textarea[disabled], input[readonly], sel=
ect[readonly], textarea[readonly] { background-color: rgb(245, 245, 245); b=
order-color: rgb(221, 221, 221); cursor: not-allowed; }

.control-group.warning > label, .control-group.warning .help-block, .contro=
l-group.warning .help-inline { color: rgb(192, 152, 83); }

.control-group.warning input, .control-group.warning select, .control-group=
.warning textarea { color: rgb(192, 152, 83); border-color: rgb(192, 152, 8=
3); }

.control-group.warning input:focus, .control-group.warning select:focus, .c=
ontrol-group.warning textarea:focus { border-color: rgb(164, 126, 60); box-=
shadow: rgb(219, 197, 158) 0px 0px 6px; }

.control-group.warning .input-prepend .add-on, .control-group.warning .inpu=
t-append .add-on { color: rgb(192, 152, 83); background-color: rgb(252, 248=
, 227); border-color: rgb(192, 152, 83); }

.control-group.error > label, .control-group.error .help-block, .control-gr=
oup.error .help-inline { color: rgb(185, 74, 72); }

.control-group.error input, .control-group.error select, .control-group.err=
or textarea { color: rgb(185, 74, 72); border-color: rgb(185, 74, 72); }

.control-group.error input:focus, .control-group.error select:focus, .contr=
ol-group.error textarea:focus { border-color: rgb(149, 59, 57); box-shadow:=
 rgb(213, 147, 146) 0px 0px 6px; }

.control-group.error .input-prepend .add-on, .control-group.error .input-ap=
pend .add-on { color: rgb(185, 74, 72); background-color: rgb(242, 222, 222=
); border-color: rgb(185, 74, 72); }

.control-group.success > label, .control-group.success .help-block, .contro=
l-group.success .help-inline { color: rgb(70, 136, 71); }

.control-group.success input, .control-group.success select, .control-group=
.success textarea { color: rgb(70, 136, 71); border-color: rgb(70, 136, 71)=
; }

.control-group.success input:focus, .control-group.success select:focus, .c=
ontrol-group.success textarea:focus { border-color: rgb(53, 102, 53); box-s=
hadow: rgb(122, 186, 123) 0px 0px 6px; }

.control-group.success .input-prepend .add-on, .control-group.success .inpu=
t-append .add-on { color: rgb(70, 136, 71); background-color: rgb(223, 240,=
 216); border-color: rgb(70, 136, 71); }

input:focus:required:invalid, textarea:focus:required:invalid, select:focus=
:required:invalid { color: rgb(185, 74, 72); border-color: rgb(238, 95, 91)=
; }

input:focus:required:invalid:focus, textarea:focus:required:invalid:focus, =
select:focus:required:invalid:focus { border-color: rgb(233, 50, 45); box-s=
hadow: rgb(248, 185, 183) 0px 0px 6px; }

.form-actions { padding: 17px 20px 18px; margin-top: 18px; margin-bottom: 1=
8px; background-color: rgb(245, 245, 245); border-top: 1px solid rgb(221, 2=
21, 221); }

.uneditable-input { display: block; background-color: rgb(255, 255, 255); b=
order-color: rgb(238, 238, 238); box-shadow: rgba(0, 0, 0, 0.0235294) 0px 1=
px 2px inset; cursor: not-allowed; }

::-webkit-input-placeholder { color: rgb(153, 153, 153); }

.help-block { display: block; margin-top: 5px; margin-bottom: 0px; color: r=
gb(153, 153, 153); }

.help-inline { display: inline-block; margin-bottom: 9px; vertical-align: m=
iddle; padding-left: 5px; }

.input-prepend, .input-append { margin-bottom: 5px; }

.input-prepend::before, .input-append::before, .input-prepend::after, .inpu=
t-append::after { display: table; content: ""; }

.input-prepend::after, .input-append::after { clear: both; }

.input-prepend input, .input-append input, .input-prepend .uneditable-input=
, .input-append .uneditable-input { border-radius: 0px 3px 3px 0px; }

.input-prepend input:focus, .input-append input:focus, .input-prepend .uned=
itable-input:focus, .input-append .uneditable-input:focus { position: relat=
ive; z-index: 2; }

.input-prepend .uneditable-input, .input-append .uneditable-input { border-=
left-color: rgb(204, 204, 204); }

.input-prepend .add-on, .input-append .add-on { float: left; display: block=
; width: auto; min-width: 16px; height: 18px; margin-right: -1px; padding: =
4px 5px; font-weight: normal; line-height: 18px; color: rgb(153, 153, 153);=
 text-align: center; text-shadow: rgb(255, 255, 255) 0px 1px 0px; backgroun=
d-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-r=
adius: 3px 0px 0px 3px; }

.input-prepend .active, .input-append .active { background-color: rgb(169, =
219, 169); border-color: rgb(70, 165, 70); }

.input-prepend .add-on { }

.input-append input, .input-append .uneditable-input { float: left; border-=
radius: 3px 0px 0px 3px; }

.input-append .uneditable-input { border-left-color: rgb(238, 238, 238); bo=
rder-right-color: rgb(204, 204, 204); }

.input-append .add-on { margin-right: 0px; margin-left: -1px; border-radius=
: 0px 3px 3px 0px; }

.input-append input:first-child { }

.input-append input:first-child + .add-on { }

.search-query { padding-left: 14px; padding-right: 14px; margin-bottom: 0px=
; border-radius: 14px; }

.form-search input, .form-inline input, .form-horizontal input, .form-searc=
h textarea, .form-inline textarea, .form-horizontal textarea, .form-search =
select, .form-inline select, .form-horizontal select, .form-search .help-in=
line, .form-inline .help-inline, .form-horizontal .help-inline, .form-searc=
h .uneditable-input, .form-inline .uneditable-input, .form-horizontal .uned=
itable-input { display: inline-block; margin-bottom: 0px; }

.form-search .hide, .form-inline .hide, .form-horizontal .hide { display: n=
one; }

.form-search label, .form-inline label, .form-search .input-append, .form-i=
nline .input-append, .form-search .input-prepend, .form-inline .input-prepe=
nd { display: inline-block; }

.form-search .input-append .add-on, .form-inline .input-prepend .add-on, .f=
orm-search .input-append .add-on, .form-inline .input-prepend .add-on { ver=
tical-align: middle; }

.form-search .radio, .form-inline .radio, .form-search .checkbox, .form-inl=
ine .checkbox { margin-bottom: 0px; vertical-align: middle; }

.control-group { margin-bottom: 9px; }

legend + .control-group { margin-top: 18px; -webkit-margin-top-collapse: se=
parate; }

.form-horizontal .control-group { margin-bottom: 18px; }

.form-horizontal .control-group::before, .form-horizontal .control-group::a=
fter { display: table; content: ""; }

.form-horizontal .control-group::after { clear: both; }

.form-horizontal .control-label { float: left; width: 140px; padding-top: 5=
px; text-align: right; }

.form-horizontal .controls { margin-left: 160px; }

.form-horizontal .form-actions { padding-left: 160px; }

table { max-width: 100%; border-collapse: collapse; border-spacing: 0px; }

.table { width: 100%; margin-bottom: 18px; }

.table th, .table td { padding: 8px; line-height: 18px; text-align: left; v=
ertical-align: top; border-top: 1px solid rgb(221, 221, 221); }

.table th { font-weight: bold; }

.table thead th { vertical-align: bottom; }

.table thead:first-child tr th, .table thead:first-child tr td { border-top=
: 0px; }

.table tbody + tbody { border-top: 2px solid rgb(221, 221, 221); }

.table-condensed th, .table-condensed td { padding: 4px 5px; }

.table-bordered { border: 1px solid rgb(221, 221, 221); border-collapse: se=
parate; border-radius: 4px; }

.table-bordered th + th, .table-bordered td + td, .table-bordered th + td, =
.table-bordered td + th { border-left: 1px solid rgb(221, 221, 221); }

.table-bordered thead:first-child tr:first-child th, .table-bordered tbody:=
first-child tr:first-child th, .table-bordered tbody:first-child tr:first-c=
hild td { border-top: 0px; }

.table-bordered thead:first-child tr:first-child th:first-child, .table-bor=
dered tbody:first-child tr:first-child td:first-child { border-radius: 4px =
0px 0px; }

.table-bordered thead:first-child tr:first-child th:last-child, .table-bord=
ered tbody:first-child tr:first-child td:last-child { border-radius: 0px 4p=
x 0px 0px; }

.table-bordered thead:last-child tr:last-child th:first-child, .table-borde=
red tbody:last-child tr:last-child td:first-child { border-radius: 0px 0px =
0px 4px; }

.table-bordered thead:last-child tr:last-child th:last-child, .table-border=
ed tbody:last-child tr:last-child td:last-child { border-radius: 0px 0px 4p=
x; }

.table-striped tbody tr:nth-child(2n+1) td, .table-striped tbody tr:nth-chi=
ld(2n+1) th { background-color: rgb(249, 249, 249); }

.table tbody tr:hover td, .table tbody tr:hover th { background-color: rgb(=
245, 245, 245); }

table .span1 { float: none; width: 44px; margin-left: 0px; }

table .span2 { float: none; width: 124px; margin-left: 0px; }

table .span3 { float: none; width: 204px; margin-left: 0px; }

table .span4 { float: none; width: 284px; margin-left: 0px; }

table .span5 { float: none; width: 364px; margin-left: 0px; }

table .span6 { float: none; width: 444px; margin-left: 0px; }

table .span7 { float: none; width: 524px; margin-left: 0px; }

table .span8 { float: none; width: 604px; margin-left: 0px; }

table .span9 { float: none; width: 684px; margin-left: 0px; }

table .span10 { float: none; width: 764px; margin-left: 0px; }

table .span11 { float: none; width: 844px; margin-left: 0px; }

table .span12 { float: none; width: 924px; margin-left: 0px; }

[class^=3D"icon-"], [class*=3D" icon-"] { display: inline-block; width: 14p=
x; height: 14px; line-height: 14px; vertical-align: text-top; background-im=
age: url("../img/glyphicons-halflings.png"); background-position: 14px 14px=
; background-repeat: no-repeat; }

[class^=3D"icon-"]:last-child, [class*=3D" icon-"]:last-child { }

.icon-white { background-image: url("../img/glyphicons-halflings-white.png"=
); }

.icon-glass { background-position: 0px 0px; }

.icon-music { background-position: -24px 0px; }

.icon-search { background-position: -48px 0px; }

.icon-envelope { background-position: -72px 0px; }

.icon-heart { background-position: -96px 0px; }

.icon-star { background-position: -120px 0px; }

.icon-star-empty { background-position: -144px 0px; }

.icon-user { background-position: -168px 0px; }

.icon-film { background-position: -192px 0px; }

.icon-th-large { background-position: -216px 0px; }

.icon-th { background-position: -240px 0px; }

.icon-th-list { background-position: -264px 0px; }

.icon-ok { background-position: -288px 0px; }

.icon-remove { background-position: -312px 0px; }

.icon-zoom-in { background-position: -336px 0px; }

.icon-zoom-out { background-position: -360px 0px; }

.icon-off { background-position: -384px 0px; }

.icon-signal { background-position: -408px 0px; }

.icon-cog { background-position: -432px 0px; }

.icon-trash { background-position: -456px 0px; }

.icon-home { background-position: 0px -24px; }

.icon-file { background-position: -24px -24px; }

.icon-time { background-position: -48px -24px; }

.icon-road { background-position: -72px -24px; }

.icon-download-alt { background-position: -96px -24px; }

.icon-download { background-position: -120px -24px; }

.icon-upload { background-position: -144px -24px; }

.icon-inbox { background-position: -168px -24px; }

.icon-play-circle { background-position: -192px -24px; }

.icon-repeat { background-position: -216px -24px; }

.icon-refresh { background-position: -240px -24px; }

.icon-list-alt { background-position: -264px -24px; }

.icon-lock { background-position: -287px -24px; }

.icon-flag { background-position: -312px -24px; }

.icon-headphones { background-position: -336px -24px; }

.icon-volume-off { background-position: -360px -24px; }

.icon-volume-down { background-position: -384px -24px; }

.icon-volume-up { background-position: -408px -24px; }

.icon-qrcode { background-position: -432px -24px; }

.icon-barcode { background-position: -456px -24px; }

.icon-tag { background-position: 0px -48px; }

.icon-tags { background-position: -25px -48px; }

.icon-book { background-position: -48px -48px; }

.icon-bookmark { background-position: -72px -48px; }

.icon-print { background-position: -96px -48px; }

.icon-camera { background-position: -120px -48px; }

.icon-font { background-position: -144px -48px; }

.icon-bold { background-position: -167px -48px; }

.icon-italic { background-position: -192px -48px; }

.icon-text-height { background-position: -216px -48px; }

.icon-text-width { background-position: -240px -48px; }

.icon-align-left { background-position: -264px -48px; }

.icon-align-center { background-position: -288px -48px; }

.icon-align-right { background-position: -312px -48px; }

.icon-align-justify { background-position: -336px -48px; }

.icon-list { background-position: -360px -48px; }

.icon-indent-left { background-position: -384px -48px; }

.icon-indent-right { background-position: -408px -48px; }

.icon-facetime-video { background-position: -432px -48px; }

.icon-picture { background-position: -456px -48px; }

.icon-pencil { background-position: 0px -72px; }

.icon-map-marker { background-position: -24px -72px; }

.icon-adjust { background-position: -48px -72px; }

.icon-tint { background-position: -72px -72px; }

.icon-edit { background-position: -96px -72px; }

.icon-share { background-position: -120px -72px; }

.icon-check { background-position: -144px -72px; }

.icon-move { background-position: -168px -72px; }

.icon-step-backward { background-position: -192px -72px; }

.icon-fast-backward { background-position: -216px -72px; }

.icon-backward { background-position: -240px -72px; }

.icon-play { background-position: -264px -72px; }

.icon-pause { background-position: -288px -72px; }

.icon-stop { background-position: -312px -72px; }

.icon-forward { background-position: -336px -72px; }

.icon-fast-forward { background-position: -360px -72px; }

.icon-step-forward { background-position: -384px -72px; }

.icon-eject { background-position: -408px -72px; }

.icon-chevron-left { background-position: -432px -72px; }

.icon-chevron-right { background-position: -456px -72px; }

.icon-plus-sign { background-position: 0px -96px; }

.icon-minus-sign { background-position: -24px -96px; }

.icon-remove-sign { background-position: -48px -96px; }

.icon-ok-sign { background-position: -72px -96px; }

.icon-question-sign { background-position: -96px -96px; }

.icon-info-sign { background-position: -120px -96px; }

.icon-screenshot { background-position: -144px -96px; }

.icon-remove-circle { background-position: -168px -96px; }

.icon-ok-circle { background-position: -192px -96px; }

.icon-ban-circle { background-position: -216px -96px; }

.icon-arrow-left { background-position: -240px -96px; }

.icon-arrow-right { background-position: -264px -96px; }

.icon-arrow-up { background-position: -289px -96px; }

.icon-arrow-down { background-position: -312px -96px; }

.icon-share-alt { background-position: -336px -96px; }

.icon-resize-full { background-position: -360px -96px; }

.icon-resize-small { background-position: -384px -96px; }

.icon-plus { background-position: -408px -96px; }

.icon-minus { background-position: -433px -96px; }

.icon-asterisk { background-position: -456px -96px; }

.icon-exclamation-sign { background-position: 0px -120px; }

.icon-gift { background-position: -24px -120px; }

.icon-leaf { background-position: -48px -120px; }

.icon-fire { background-position: -72px -120px; }

.icon-eye-open { background-position: -96px -120px; }

.icon-eye-close { background-position: -120px -120px; }

.icon-warning-sign { background-position: -144px -120px; }

.icon-plane { background-position: -168px -120px; }

.icon-calendar { background-position: -192px -120px; }

.icon-random { background-position: -216px -120px; }

.icon-comment { background-position: -240px -120px; }

.icon-magnet { background-position: -264px -120px; }

.icon-chevron-up { background-position: -288px -120px; }

.icon-chevron-down { background-position: -313px -119px; }

.icon-retweet { background-position: -336px -120px; }

.icon-shopping-cart { background-position: -360px -120px; }

.icon-folder-close { background-position: -384px -120px; }

.icon-folder-open { background-position: -408px -120px; }

.icon-resize-vertical { background-position: -432px -119px; }

.icon-resize-horizontal { background-position: -456px -118px; }

.dropdown { position: relative; }

.dropdown-toggle { }

.dropdown-toggle:active, .open .dropdown-toggle { outline: 0px; }

.caret { display: inline-block; width: 0px; height: 0px; text-indent: -9999=
9px; vertical-align: top; border-left: 4px solid transparent; border-right:=
 4px solid transparent; border-top: 4px solid rgb(0, 0, 0); opacity: 0.3; c=
ontent: "=E2=86=93"; }

.dropdown .caret { margin-top: 8px; margin-left: 2px; }

.dropdown:hover .caret, .open.dropdown .caret { opacity: 1; }

.dropdown-menu { position: absolute; top: 100%; left: 0px; z-index: 1000; f=
loat: left; display: none; min-width: 160px; padding: 4px 0px; margin: 0px;=
 list-style: none; background-color: rgb(255, 255, 255); border-color: rgba=
(0, 0, 0, 0.2); border-style: solid; border-width: 1px; border-radius: 0px =
0px 5px 5px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 10px; -webkit-backgroun=
d-clip: padding-box; background-clip: padding-box; }

.dropdown-menu.bottom-up { top: auto; bottom: 100%; margin-bottom: 2px; }

.dropdown-menu .divider { height: 1px; margin: 5px 1px; overflow: hidden; b=
ackground-color: rgb(229, 229, 229); border-bottom: 1px solid rgb(255, 255,=
 255); }

.dropdown-menu a { display: block; padding: 3px 15px; clear: both; font-wei=
ght: normal; line-height: 18px; color: rgb(85, 85, 85); white-space: nowrap=
; }

.dropdown-menu li > a:hover, .dropdown-menu .active > a, .dropdown-menu .ac=
tive > a:hover { color: rgb(255, 255, 255); text-decoration: none; backgrou=
nd-color: rgb(0, 136, 204); }

.dropdown.open { }

.dropdown.open .dropdown-toggle { color: rgb(255, 255, 255); background: rg=
ba(0, 0, 0, 0.298039); }

.dropdown.open .dropdown-menu { display: block; }

.typeahead { margin-top: 2px; border-radius: 4px; }

.well { min-height: 20px; padding: 19px; margin-bottom: 20px; background-co=
lor: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.0470588); border=
-radius: 4px; box-shadow: rgba(0, 0, 0, 0.0470588) 0px 1px 1px inset; }

.well blockquote { border-color: rgba(0, 0, 0, 0.14902); }

.fade { transition: opacity 0.15s linear; opacity: 0; }

.fade.in { opacity: 1; }

.collapse { transition: height 0.35s ease; position: relative; overflow: hi=
dden; height: 0px; }

.collapse.in { height: auto; }

.close { float: right; font-size: 20px; font-weight: bold; line-height: 18p=
x; color: rgb(0, 0, 0); text-shadow: rgb(255, 255, 255) 0px 1px 0px; opacit=
y: 0.2; }

.close:hover { color: rgb(0, 0, 0); text-decoration: none; opacity: 0.4; cu=
rsor: pointer; }

.btn { display: inline-block; padding: 4px 10px; margin-bottom: 0px; font-s=
ize: 13px; line-height: 18px; color: rgb(51, 51, 51); text-align: center; t=
ext-shadow: rgba(255, 255, 255, 0.74902) 0px 1px 1px; vertical-align: middl=
e; background-color: rgb(245, 245, 245); background-image: -webkit-linear-g=
radient(top, rgb(255, 255, 255), rgb(230, 230, 230)); background-repeat: re=
peat-x; border-width: 1px; border-style: solid; border-color: rgb(204, 204,=
 204) rgb(204, 204, 204) rgb(187, 187, 187); border-image: initial; border-=
radius: 4px; box-shadow: rgba(255, 255, 255, 0.2) 0px 1px 0px inset, rgba(0=
, 0, 0, 0.0470588) 0px 1px 2px; cursor: pointer; }

.btn:hover, .btn:active, .btn.active, .btn.disabled, .btn[disabled] { backg=
round-color: rgb(230, 230, 230); }

.btn:active, .btn.active { }

.btn:first-child { }

.btn:hover { color: rgb(51, 51, 51); text-decoration: none; background-colo=
r: rgb(230, 230, 230); background-position: 0px -15px; transition: backgrou=
nd-position 0.1s linear; }

.btn:focus { outline: -webkit-focus-ring-color auto 5px; outline-offset: -2=
px; }

.btn.active, .btn:active { background-image: none; box-shadow: rgba(0, 0, 0=
, 0.14902) 0px 2px 4px inset, rgba(0, 0, 0, 0.0470588) 0px 1px 2px; backgro=
und-color: rgb(230, 230, 230); outline: 0px; }

.btn.disabled, .btn[disabled] { cursor: default; background-image: none; ba=
ckground-color: rgb(230, 230, 230); opacity: 0.65; box-shadow: none; }

.btn-large { padding: 9px 14px; font-size: 15px; line-height: normal; borde=
r-radius: 5px; }

.btn-large [class^=3D"icon-"] { margin-top: 1px; }

.btn-small { padding: 5px 9px; font-size: 11px; line-height: 16px; }

.btn-small [class^=3D"icon-"] { margin-top: -1px; }

.btn-mini { padding: 2px 6px; font-size: 11px; line-height: 14px; }

.btn-primary, .btn-primary:hover, .btn-warning, .btn-warning:hover, .btn-da=
nger, .btn-danger:hover, .btn-success, .btn-success:hover, .btn-info, .btn-=
info:hover, .btn-inverse, .btn-inverse:hover { text-shadow: rgba(0, 0, 0, 0=
.247059) 0px -1px 0px; color: rgb(255, 255, 255); }

.btn-primary.active, .btn-warning.active, .btn-danger.active, .btn-success.=
active, .btn-info.active, .btn-dark.active { color: rgba(255, 255, 255, 0.7=
4902); }

.btn-primary { background-color: rgb(0, 109, 204); background-image: -webki=
t-linear-gradient(top, rgb(0, 136, 204), rgb(0, 68, 204)); background-repea=
t: repeat-x; border-color: rgba(0, 0, 0, 0.0980392) rgba(0, 0, 0, 0.0980392=
) rgba(0, 0, 0, 0.247059); }

.btn-primary:hover, .btn-primary:active, .btn-primary.active, .btn-primary.=
disabled, .btn-primary[disabled] { background-color: rgb(0, 68, 204); }

.btn-primary:active, .btn-primary.active { }

.btn-warning { background-color: rgb(250, 167, 50); background-image: -webk=
it-linear-gradient(top, rgb(251, 180, 80), rgb(248, 148, 6)); background-re=
peat: repeat-x; border-color: rgba(0, 0, 0, 0.0980392) rgba(0, 0, 0, 0.0980=
392) rgba(0, 0, 0, 0.247059); }

.btn-warning:hover, .btn-warning:active, .btn-warning.active, .btn-warning.=
disabled, .btn-warning[disabled] { background-color: rgb(248, 148, 6); }

.btn-warning:active, .btn-warning.active { }

.btn-danger { background-color: rgb(218, 79, 73); background-image: -webkit=
-linear-gradient(top, rgb(238, 95, 91), rgb(189, 54, 47)); background-repea=
t: repeat-x; border-color: rgba(0, 0, 0, 0.0980392) rgba(0, 0, 0, 0.0980392=
) rgba(0, 0, 0, 0.247059); }

.btn-danger:hover, .btn-danger:active, .btn-danger.active, .btn-danger.disa=
bled, .btn-danger[disabled] { background-color: rgb(189, 54, 47); }

.btn-danger:active, .btn-danger.active { }

.btn-success { background-color: rgb(91, 183, 91); background-image: -webki=
t-linear-gradient(top, rgb(98, 196, 98), rgb(81, 163, 81)); background-repe=
at: repeat-x; border-color: rgba(0, 0, 0, 0.0980392) rgba(0, 0, 0, 0.098039=
2) rgba(0, 0, 0, 0.247059); }

.btn-success:hover, .btn-success:active, .btn-success.active, .btn-success.=
disabled, .btn-success[disabled] { background-color: rgb(81, 163, 81); }

.btn-success:active, .btn-success.active { }

.btn-info { background-color: rgb(73, 175, 205); background-image: -webkit-=
linear-gradient(top, rgb(91, 192, 222), rgb(47, 150, 180)); background-repe=
at: repeat-x; border-color: rgba(0, 0, 0, 0.0980392) rgba(0, 0, 0, 0.098039=
2) rgba(0, 0, 0, 0.247059); }

.btn-info:hover, .btn-info:active, .btn-info.active, .btn-info.disabled, .b=
tn-info[disabled] { background-color: rgb(47, 150, 180); }

.btn-info:active, .btn-info.active { }

.btn-inverse { background-color: rgb(57, 57, 57); background-image: -webkit=
-linear-gradient(top, rgb(69, 69, 69), rgb(38, 38, 38)); background-repeat:=
 repeat-x; border-color: rgba(0, 0, 0, 0.0980392) rgba(0, 0, 0, 0.0980392) =
rgba(0, 0, 0, 0.247059); }

.btn-inverse:hover, .btn-inverse:active, .btn-inverse.active, .btn-inverse.=
disabled, .btn-inverse[disabled] { background-color: rgb(38, 38, 38); }

.btn-inverse:active, .btn-inverse.active { }

button.btn, input[type=3D"submit"].btn { }

button.btn.large, input[type=3D"submit"].btn.large { }

button.btn.small, input[type=3D"submit"].btn.small { }

.btn-group { position: relative; }

.btn-group::before, .btn-group::after { display: table; content: ""; }

.btn-group::after { clear: both; }

.btn-group:first-child { }

.btn-group + .btn-group { margin-left: 5px; }

.btn-toolbar { margin-top: 9px; margin-bottom: 9px; }

.btn-toolbar .btn-group { display: inline-block; }

.btn-group .btn { position: relative; float: left; margin-left: -1px; borde=
r-radius: 0px; }

.btn-group .btn:first-child { margin-left: 0px; border-top-left-radius: 4px=
; border-bottom-left-radius: 4px; }

.btn-group .btn:last-child, .btn-group .dropdown-toggle { border-top-right-=
radius: 4px; border-bottom-right-radius: 4px; }

.btn-group .btn.large:first-child { margin-left: 0px; border-top-left-radiu=
s: 6px; border-bottom-left-radius: 6px; }

.btn-group .btn.large:last-child, .btn-group .large.dropdown-toggle { borde=
r-top-right-radius: 6px; border-bottom-right-radius: 6px; }

.btn-group .btn:hover, .btn-group .btn:focus, .btn-group .btn:active, .btn-=
group .btn.active { z-index: 2; }

.btn-group .dropdown-toggle:active, .btn-group.open .dropdown-toggle { outl=
ine: 0px; }

.btn-group .dropdown-toggle { padding-left: 8px; padding-right: 8px; box-sh=
adow: rgba(255, 255, 255, 0.121569) 1px 0px 0px inset, rgba(255, 255, 255, =
0.2) 0px 1px 0px inset, rgba(0, 0, 0, 0.0470588) 0px 1px 2px; }

.btn-group.open { }

.btn-group.open .dropdown-menu { display: block; margin-top: 1px; border-ra=
dius: 5px; }

.btn-group.open .dropdown-toggle { background-image: none; box-shadow: rgba=
(0, 0, 0, 0.14902) 0px 1px 6px inset, rgba(0, 0, 0, 0.0470588) 0px 1px 2px;=
 }

.btn .caret { margin-top: 7px; margin-left: 0px; }

.btn:hover .caret, .open.btn-group .caret { opacity: 1; }

.btn-primary .caret, .btn-danger .caret, .btn-info .caret, .btn-success .ca=
ret, .btn-inverse .caret { border-top-color: rgb(255, 255, 255); opacity: 0=
.75; }

.btn-small .caret { margin-top: 4px; }

.alert { padding: 8px 35px 8px 14px; margin-bottom: 18px; text-shadow: rgba=
(255, 255, 255, 0.498039) 0px 1px 0px; background-color: rgb(252, 248, 227)=
; border: 1px solid rgb(251, 238, 213); border-radius: 4px; }

.alert, .alert-heading { color: rgb(192, 152, 83); }

.alert .close { position: relative; top: -2px; right: -21px; line-height: 1=
8px; }

.alert-success { background-color: rgb(223, 240, 216); border-color: rgb(21=
4, 233, 198); }

.alert-success, .alert-success .alert-heading { color: rgb(70, 136, 71); }

.alert-danger, .alert-error { background-color: rgb(242, 222, 222); border-=
color: rgb(238, 211, 215); }

.alert-danger, .alert-error, .alert-danger .alert-heading, .alert-error .al=
ert-heading { color: rgb(185, 74, 72); }

.alert-info { background-color: rgb(217, 237, 247); border-color: rgb(188, =
232, 241); }

.alert-info, .alert-info .alert-heading { color: rgb(58, 135, 173); }

.alert-block { padding-top: 14px; padding-bottom: 14px; }

.alert-block > p, .alert-block > ul { margin-bottom: 0px; }

.alert-block p + p { margin-top: 5px; }

.nav { margin-left: 0px; margin-bottom: 18px; list-style: none; }

.nav > li > a { display: block; }

.nav > li > a:hover { text-decoration: none; background-color: rgb(238, 238=
, 238); }

.nav .nav-header { display: block; padding: 3px 15px; font-size: 11px; font=
-weight: bold; line-height: 18px; color: rgb(153, 153, 153); text-shadow: r=
gba(255, 255, 255, 0.498039) 0px 1px 0px; text-transform: uppercase; }

.nav li + .nav-header { margin-top: 9px; }

.nav-list { padding-left: 14px; padding-right: 14px; margin-bottom: 0px; }

.nav-list > li > a, .nav-list .nav-header { margin-left: -15px; margin-righ=
t: -15px; text-shadow: rgba(255, 255, 255, 0.498039) 0px 1px 0px; }

.nav-list > li > a { padding: 3px 15px; }

.nav-list .active > a, .nav-list .active > a:hover { color: rgb(255, 255, 2=
55); text-shadow: rgba(0, 0, 0, 0.2) 0px -1px 0px; background-color: rgb(0,=
 136, 204); }

.nav-list [class^=3D"icon-"] { margin-right: 2px; }

.nav-tabs, .nav-pills { }

.nav-tabs::before, .nav-pills::before, .nav-tabs::after, .nav-pills::after =
{ display: table; content: ""; }

.nav-tabs::after, .nav-pills::after { clear: both; }

.nav-tabs > li, .nav-pills > li { float: left; }

.nav-tabs > li > a, .nav-pills > li > a { padding-right: 12px; padding-left=
: 12px; margin-right: 2px; line-height: 14px; }

.nav-tabs { border-bottom: 1px solid rgb(221, 221, 221); }

.nav-tabs > li { margin-bottom: -1px; }

.nav-tabs > li > a { padding-top: 9px; padding-bottom: 9px; border: 1px sol=
id transparent; border-radius: 4px 4px 0px 0px; }

.nav-tabs > li > a:hover { border-color: rgb(238, 238, 238) rgb(238, 238, 2=
38) rgb(221, 221, 221); }

.nav-tabs > .active > a, .nav-tabs > .active > a:hover { color: rgb(85, 85,=
 85); background-color: rgb(255, 255, 255); border-width: 1px; border-style=
: solid; border-color: rgb(221, 221, 221) rgb(221, 221, 221) transparent; b=
order-image: initial; cursor: default; }

.nav-pills > li > a { padding-top: 8px; padding-bottom: 8px; margin-top: 2p=
x; margin-bottom: 2px; border-radius: 5px; }

.nav-pills .active > a, .nav-pills .active > a:hover { color: rgb(255, 255,=
 255); background-color: rgb(0, 136, 204); }

.nav-stacked > li { float: none; }

.nav-stacked > li > a { margin-right: 0px; }

.nav-tabs.nav-stacked { border-bottom: 0px; }

.nav-tabs.nav-stacked > li > a { border: 1px solid rgb(221, 221, 221); bord=
er-radius: 0px; }

.nav-tabs.nav-stacked > li:first-child > a { border-radius: 4px 4px 0px 0px=
; }

.nav-tabs.nav-stacked > li:last-child > a { border-radius: 0px 0px 4px 4px;=
 }

.nav-tabs.nav-stacked > li > a:hover { border-color: rgb(221, 221, 221); z-=
index: 2; }

.nav-pills.nav-stacked > li > a { margin-bottom: 3px; }

.nav-pills.nav-stacked > li:last-child > a { margin-bottom: 1px; }

.nav-tabs .dropdown-menu, .nav-pills .dropdown-menu { margin-top: 1px; bord=
er-width: 1px; }

.nav-pills .dropdown-menu { border-radius: 4px; }

.nav-tabs .dropdown-toggle .caret, .nav-pills .dropdown-toggle .caret { bor=
der-top-color: rgb(0, 136, 204); margin-top: 6px; }

.nav-tabs .dropdown-toggle:hover .caret, .nav-pills .dropdown-toggle:hover =
.caret { border-top-color: rgb(0, 85, 128); }

.nav-tabs .active .dropdown-toggle .caret, .nav-pills .active .dropdown-tog=
gle .caret { border-top-color: rgb(51, 51, 51); }

.nav > .dropdown.active > a:hover { color: rgb(0, 0, 0); cursor: pointer; }

.nav-tabs .open .dropdown-toggle, .nav-pills .open .dropdown-toggle, .nav >=
 .open.active > a:hover { color: rgb(255, 255, 255); background-color: rgb(=
153, 153, 153); border-color: rgb(153, 153, 153); }

.nav .open .caret, .nav .open.active .caret, .nav .open a:hover .caret { bo=
rder-top-color: rgb(255, 255, 255); opacity: 1; }

.tabs-stacked .open > a:hover { border-color: rgb(153, 153, 153); }

.tabbable { }

.tabbable::before, .tabbable::after { display: table; content: ""; }

.tabbable::after { clear: both; }

.tab-content { overflow: hidden; }

.tabs-below .nav-tabs, .tabs-right .nav-tabs, .tabs-left .nav-tabs { border=
-bottom: 0px; }

.tab-content > .tab-pane, .pill-content > .pill-pane { display: none; }

.tab-content > .active, .pill-content > .active { display: block; }

.tabs-below .nav-tabs { border-top: 1px solid rgb(221, 221, 221); }

.tabs-below .nav-tabs > li { margin-top: -1px; margin-bottom: 0px; }

.tabs-below .nav-tabs > li > a { border-radius: 0px 0px 4px 4px; }

.tabs-below .nav-tabs > li > a:hover { border-bottom-color: transparent; bo=
rder-top-color: rgb(221, 221, 221); }

.tabs-below .nav-tabs .active > a, .tabs-below .nav-tabs .active > a:hover =
{ border-color: transparent rgb(221, 221, 221) rgb(221, 221, 221); }

.tabs-left .nav-tabs > li, .tabs-right .nav-tabs > li { float: none; }

.tabs-left .nav-tabs > li > a, .tabs-right .nav-tabs > li > a { min-width: =
74px; margin-right: 0px; margin-bottom: 3px; }

.tabs-left .nav-tabs { float: left; margin-right: 19px; border-right: 1px s=
olid rgb(221, 221, 221); }

.tabs-left .nav-tabs > li > a { margin-right: -1px; border-radius: 4px 0px =
0px 4px; }

.tabs-left .nav-tabs > li > a:hover { border-color: rgb(238, 238, 238) rgb(=
221, 221, 221) rgb(238, 238, 238) rgb(238, 238, 238); }

.tabs-left .nav-tabs .active > a, .tabs-left .nav-tabs .active > a:hover { =
border-color: rgb(221, 221, 221) transparent rgb(221, 221, 221) rgb(221, 22=
1, 221); }

.tabs-right .nav-tabs { float: right; margin-left: 19px; border-left: 1px s=
olid rgb(221, 221, 221); }

.tabs-right .nav-tabs > li > a { margin-left: -1px; border-radius: 0px 4px =
4px 0px; }

.tabs-right .nav-tabs > li > a:hover { border-color: rgb(238, 238, 238) rgb=
(238, 238, 238) rgb(238, 238, 238) rgb(221, 221, 221); }

.tabs-right .nav-tabs .active > a, .tabs-right .nav-tabs .active > a:hover =
{ border-color: rgb(221, 221, 221) rgb(221, 221, 221) rgb(221, 221, 221) tr=
ansparent; }

.navbar { overflow: visible; margin-bottom: 18px; }

.navbar-inner { padding-left: 20px; padding-right: 20px; background-color: =
rgb(44, 44, 44); background-image: -webkit-linear-gradient(top, rgb(51, 51,=
 51), rgb(34, 34, 34)); background-repeat: repeat-x; border-radius: 4px; bo=
x-shadow: rgba(0, 0, 0, 0.247059) 0px 1px 3px, rgba(0, 0, 0, 0.0980392) 0px=
 -1px 0px inset; }

.btn-navbar { display: none; float: right; padding: 7px 10px; margin-left: =
5px; margin-right: 5px; background-color: rgb(44, 44, 44); background-image=
: -webkit-linear-gradient(top, rgb(51, 51, 51), rgb(34, 34, 34)); backgroun=
d-repeat: repeat-x; border-color: rgba(0, 0, 0, 0.0980392) rgba(0, 0, 0, 0.=
0980392) rgba(0, 0, 0, 0.247059); box-shadow: rgba(255, 255, 255, 0.0980392=
) 0px 1px 0px inset, rgba(255, 255, 255, 0.0745098) 0px 1px 0px; }

.btn-navbar:hover, .btn-navbar:active, .btn-navbar.active, .btn-navbar.disa=
bled, .btn-navbar[disabled] { background-color: rgb(34, 34, 34); }

.btn-navbar:active, .btn-navbar.active { }

.btn-navbar .icon-bar { display: block; width: 18px; height: 2px; backgroun=
d-color: rgb(245, 245, 245); border-radius: 1px; box-shadow: rgba(0, 0, 0, =
0.247059) 0px 1px 0px; }

.btn-navbar .icon-bar + .icon-bar { margin-top: 3px; }

.nav-collapse.collapse { height: auto; }

.navbar .brand:hover { text-decoration: none; }

.navbar .brand { float: left; display: block; padding: 8px 20px 12px; margi=
n-left: -20px; font-size: 20px; font-weight: 200; line-height: 1; color: rg=
b(255, 255, 255); }

.navbar .navbar-text { margin-bottom: 0px; line-height: 40px; color: rgb(15=
3, 153, 153); }

.navbar .navbar-text a:hover { color: rgb(255, 255, 255); background-color:=
 transparent; }

.navbar .btn, .navbar .btn-group { margin-top: 5px; }

.navbar .btn-group .btn { margin-top: 0px; }

.navbar-form { margin-bottom: 0px; }

.navbar-form::before, .navbar-form::after { display: table; content: ""; }

.navbar-form::after { clear: both; }

.navbar-form input, .navbar-form select { display: inline-block; margin-top=
: 5px; margin-bottom: 0px; }

.navbar-form .radio, .navbar-form .checkbox { margin-top: 5px; }

.navbar-form input[type=3D"image"], .navbar-form input[type=3D"checkbox"], =
.navbar-form input[type=3D"radio"] { margin-top: 3px; }

.navbar-form .input-append, .navbar-form .input-prepend { margin-top: 6px; =
white-space: nowrap; }

.navbar-form .input-append input, .navbar-form .input-prepend input { margi=
n-top: 0px; }

.navbar-search { position: relative; float: left; margin-top: 6px; margin-b=
ottom: 0px; }

.navbar-search .search-query { padding: 4px 9px; font-family: "Helvetica Ne=
ue", Helvetica, Arial, sans-serif; font-size: 13px; font-weight: normal; li=
ne-height: 1; color: rgba(255, 255, 255, 0.74902); background: rgba(255, 25=
5, 255, 0.298039); border: 1px solid rgb(17, 17, 17); box-shadow: rgba(0, 0=
, 0, 0.0980392) 0px 1px 2px inset, rgba(255, 255, 255, 0.14902) 0px 1px 0px=
; transition: none; }

.navbar-search .search-query::-webkit-input-placeholder { color: rgb(238, 2=
38, 238); }

.navbar-search .search-query:hover { color: rgb(255, 255, 255); background-=
color: rgba(255, 255, 255, 0.498039); }

.navbar-search .search-query:focus, .navbar-search .search-query.focused { =
padding: 5px 10px; color: rgb(51, 51, 51); text-shadow: rgb(255, 255, 255) =
0px 1px 0px; background-color: rgb(255, 255, 255); border: 0px; box-shadow:=
 rgba(0, 0, 0, 0.14902) 0px 0px 3px; outline: 0px; }

.navbar-fixed-top { position: fixed; top: 0px; right: 0px; left: 0px; z-ind=
ex: 1030; }

.navbar-fixed-top .navbar-inner { padding-left: 0px; padding-right: 0px; bo=
rder-radius: 0px; }

.navbar .nav { position: relative; left: 0px; display: block; float: left; =
margin: 0px 10px 0px 0px; }

.navbar .nav.pull-right { float: right; }

.navbar .nav > li { display: block; float: left; }

.navbar .nav > li > a { float: none; padding: 10px 10px 11px; line-height: =
19px; color: rgb(153, 153, 153); text-decoration: none; text-shadow: rgba(0=
, 0, 0, 0.247059) 0px -1px 0px; }

.navbar .nav > li > a:hover { background-color: transparent; color: rgb(255=
, 255, 255); text-decoration: none; }

.navbar .nav .active > a, .navbar .nav .active > a:hover { color: rgb(255, =
255, 255); text-decoration: none; background-color: rgb(34, 34, 34); }

.navbar .divider-vertical { height: 40px; width: 1px; margin: 0px 9px; over=
flow: hidden; background-color: rgb(34, 34, 34); border-right: 1px solid rg=
b(51, 51, 51); }

.navbar .nav.pull-right { margin-left: 10px; margin-right: 0px; }

.navbar .dropdown-menu { margin-top: 1px; border-radius: 4px; }

.navbar .dropdown-menu::before { content: ""; display: inline-block; border=
-left: 7px solid transparent; border-right: 7px solid transparent; border-b=
ottom: 7px solid rgba(0, 0, 0, 0.2); position: absolute; top: -7px; left: 9=
px; }

.navbar .dropdown-menu::after { content: ""; display: inline-block; border-=
left: 6px solid transparent; border-right: 6px solid transparent; border-bo=
ttom: 6px solid rgb(255, 255, 255); position: absolute; top: -6px; left: 10=
px; }

.navbar .nav .dropdown-toggle .caret, .navbar .nav .open.dropdown .caret { =
border-top-color: rgb(255, 255, 255); }

.navbar .nav .active .caret { opacity: 1; }

.navbar .nav .open > .dropdown-toggle, .navbar .nav .active > .dropdown-tog=
gle, .navbar .nav .open.active > .dropdown-toggle { background-color: trans=
parent; }

.navbar .nav .active > .dropdown-toggle:hover { color: rgb(255, 255, 255); =
}

.navbar .nav.pull-right .dropdown-menu { left: auto; right: 0px; }

.navbar .nav.pull-right .dropdown-menu::before { left: auto; right: 12px; }

.navbar .nav.pull-right .dropdown-menu::after { left: auto; right: 13px; }

.breadcrumb { padding: 7px 14px; margin: 0px 0px 18px; background-color: rg=
b(251, 251, 251); background-image: -webkit-linear-gradient(top, rgb(255, 2=
55, 255), rgb(245, 245, 245)); background-repeat: repeat-x; border: 1px sol=
id rgb(221, 221, 221); border-radius: 3px; box-shadow: rgb(255, 255, 255) 0=
px 1px 0px inset; }

.breadcrumb li { display: inline-block; text-shadow: rgb(255, 255, 255) 0px=
 1px 0px; }

.breadcrumb .divider { padding: 0px 5px; color: rgb(153, 153, 153); }

.breadcrumb .active a { color: rgb(51, 51, 51); }

.pagination { height: 36px; margin: 18px 0px; }

.pagination ul { display: inline-block; margin-left: 0px; margin-bottom: 0p=
x; border-radius: 3px; box-shadow: rgba(0, 0, 0, 0.0470588) 0px 1px 2px; }

.pagination li { display: inline; }

.pagination a { float: left; padding: 0px 14px; line-height: 34px; text-dec=
oration: none; border-width: 1px 1px 1px 0px; border-style: solid; border-c=
olor: rgb(221, 221, 221); border-image: initial; }

.pagination a:hover, .pagination .active a { background-color: rgb(245, 245=
, 245); }

.pagination .active a { color: rgb(153, 153, 153); cursor: default; }

.pagination .disabled a, .pagination .disabled a:hover { color: rgb(153, 15=
3, 153); background-color: transparent; cursor: default; }

.pagination li:first-child a { border-left-width: 1px; border-radius: 3px 0=
px 0px 3px; }

.pagination li:last-child a { border-radius: 0px 3px 3px 0px; }

.pagination-centered { text-align: center; }

.pagination-right { text-align: right; }

.pager { margin-left: 0px; margin-bottom: 18px; list-style: none; text-alig=
n: center; }

.pager::before, .pager::after { display: table; content: ""; }

.pager::after { clear: both; }

.pager li { display: inline; }

.pager a { display: inline-block; padding: 5px 14px; background-color: rgb(=
255, 255, 255); border: 1px solid rgb(221, 221, 221); border-radius: 15px; =
}

.pager a:hover { text-decoration: none; background-color: rgb(245, 245, 245=
); }

.pager .next a { float: right; }

.pager .previous a { float: left; }

.modal-open .dropdown-menu { z-index: 2050; }

.modal-open .dropdown.open { }

.modal-open .popover { z-index: 2060; }

.modal-open .tooltip { z-index: 2070; }

.modal-backdrop { position: fixed; top: 0px; right: 0px; bottom: 0px; left:=
 0px; z-index: 1040; background-color: rgb(0, 0, 0); }

.modal-backdrop.fade { opacity: 0; }

.modal-backdrop, .modal-backdrop.fade.in { opacity: 0.8; }

.modal { position: fixed; top: 50%; left: 50%; z-index: 1050; max-height: 5=
00px; overflow: auto; width: 560px; margin: -250px 0px 0px -280px; backgrou=
nd-color: rgb(255, 255, 255); border: 1px solid rgba(0, 0, 0, 0.298039); bo=
rder-radius: 6px; box-shadow: rgba(0, 0, 0, 0.298039) 0px 3px 7px; -webkit-=
background-clip: padding-box; background-clip: padding-box; }

.modal.fade { transition: opacity 0.3s linear, top 0.3s ease-out; top: -25%=
; }

.modal.fade.in { top: 50%; }

.modal-header { padding: 9px 15px; border-bottom: 1px solid rgb(238, 238, 2=
38); }

.modal-header .close { margin-top: 2px; }

.modal-body { padding: 15px; }

.modal-body .modal-form { margin-bottom: 0px; }

.modal-footer { padding: 14px 15px 15px; margin-bottom: 0px; background-col=
or: rgb(245, 245, 245); border-top: 1px solid rgb(221, 221, 221); border-ra=
dius: 0px 0px 6px 6px; box-shadow: rgb(255, 255, 255) 0px 1px 0px inset; }

.modal-footer::before, .modal-footer::after { display: table; content: ""; =
}

.modal-footer::after { clear: both; }

.modal-footer .btn { float: right; margin-left: 5px; margin-bottom: 0px; }

.tooltip { position: absolute; z-index: 1020; display: block; visibility: v=
isible; padding: 5px; font-size: 11px; opacity: 0; }

.tooltip.in { opacity: 0.8; }

.tooltip.top { margin-top: -2px; }

.tooltip.right { margin-left: 2px; }

.tooltip.bottom { margin-top: 2px; }

.tooltip.left { margin-left: -2px; }

.tooltip.top .tooltip-arrow { bottom: 0px; left: 50%; margin-left: -5px; bo=
rder-left: 5px solid transparent; border-right: 5px solid transparent; bord=
er-top: 5px solid rgb(0, 0, 0); }

.tooltip.left .tooltip-arrow { top: 50%; right: 0px; margin-top: -5px; bord=
er-top: 5px solid transparent; border-bottom: 5px solid transparent; border=
-left: 5px solid rgb(0, 0, 0); }

.tooltip.bottom .tooltip-arrow { top: 0px; left: 50%; margin-left: -5px; bo=
rder-left: 5px solid transparent; border-right: 5px solid transparent; bord=
er-bottom: 5px solid rgb(0, 0, 0); }

.tooltip.right .tooltip-arrow { top: 50%; left: 0px; margin-top: -5px; bord=
er-top: 5px solid transparent; border-bottom: 5px solid transparent; border=
-right: 5px solid rgb(0, 0, 0); }

.tooltip-inner { max-width: 200px; padding: 3px 8px; color: rgb(255, 255, 2=
55); text-align: center; text-decoration: none; background-color: rgb(0, 0,=
 0); border-radius: 4px; }

.tooltip-arrow { position: absolute; width: 0px; height: 0px; }

.popover { position: absolute; top: 0px; left: 0px; z-index: 1010; display:=
 none; padding: 5px; }

.popover.top { margin-top: -5px; }

.popover.right { margin-left: 5px; }

.popover.bottom { margin-top: 5px; }

.popover.left { margin-left: -5px; }

.popover.top .arrow { bottom: 0px; left: 50%; margin-left: -5px; border-lef=
t: 5px solid transparent; border-right: 5px solid transparent; border-top: =
5px solid rgb(0, 0, 0); }

.popover.right .arrow { top: 50%; left: 0px; margin-top: -5px; border-top: =
5px solid transparent; border-bottom: 5px solid transparent; border-right: =
5px solid rgb(0, 0, 0); }

.popover.bottom .arrow { top: 0px; left: 50%; margin-left: -5px; border-lef=
t: 5px solid transparent; border-right: 5px solid transparent; border-botto=
m: 5px solid rgb(0, 0, 0); }

.popover.left .arrow { top: 50%; right: 0px; margin-top: -5px; border-top: =
5px solid transparent; border-bottom: 5px solid transparent; border-left: 5=
px solid rgb(0, 0, 0); }

.popover .arrow { position: absolute; width: 0px; height: 0px; }

.popover-inner { padding: 3px; width: 280px; overflow: hidden; background: =
rgba(0, 0, 0, 0.8); border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.298039)=
 0px 3px 7px; }

.popover-title { padding: 9px 15px; line-height: 1; background-color: rgb(2=
45, 245, 245); border-bottom: 1px solid rgb(238, 238, 238); border-radius: =
3px 3px 0px 0px; }

.popover-content { padding: 14px; background-color: rgb(255, 255, 255); bor=
der-radius: 0px 0px 3px 3px; -webkit-background-clip: padding-box; backgrou=
nd-clip: padding-box; }

.popover-content p, .popover-content ul, .popover-content ol { margin-botto=
m: 0px; }

.thumbnails { margin-left: -20px; list-style: none; }

.thumbnails::before, .thumbnails::after { display: table; content: ""; }

.thumbnails::after { clear: both; }

.thumbnails > li { float: left; margin: 0px 0px 18px 20px; }

.thumbnail { display: block; padding: 4px; line-height: 1; border: 1px soli=
d rgb(221, 221, 221); border-radius: 4px; box-shadow: rgba(0, 0, 0, 0.07450=
98) 0px 1px 1px; }

a.thumbnail:hover { border-color: rgb(0, 136, 204); box-shadow: rgba(0, 105=
, 214, 0.247059) 0px 1px 4px; }

.thumbnail > img { display: block; max-width: 100%; margin-left: auto; marg=
in-right: auto; }

.thumbnail .caption { padding: 9px; }

.label { padding: 2px 4px 3px; font-size: 11.05px; font-weight: bold; color=
: rgb(255, 255, 255); text-shadow: rgba(0, 0, 0, 0.247059) 0px -1px 0px; ba=
ckground-color: rgb(153, 153, 153); border-radius: 3px; }

.label:hover { color: rgb(255, 255, 255); text-decoration: none; }

.label-important { background-color: rgb(185, 74, 72); }

.label-important:hover { background-color: rgb(149, 59, 57); }

.label-warning { background-color: rgb(248, 148, 6); }

.label-warning:hover { background-color: rgb(198, 118, 5); }

.label-success { background-color: rgb(70, 136, 71); }

.label-success:hover { background-color: rgb(53, 102, 53); }

.label-info { background-color: rgb(58, 135, 173); }

.label-info:hover { background-color: rgb(45, 105, 135); }

@-webkit-keyframes progress-bar-stripes {=20
  0% { background-position: 0px 0px; }
  100% { background-position: 40px 0px; }
}

@keyframes progress-bar-stripes {=20
  0% { background-position: 0px 0px; }
  100% { background-position: 40px 0px; }
}

.progress { overflow: hidden; height: 18px; margin-bottom: 18px; background=
-color: rgb(247, 247, 247); background-image: -webkit-linear-gradient(top, =
rgb(245, 245, 245), rgb(249, 249, 249)); background-repeat: repeat-x; box-s=
hadow: rgba(0, 0, 0, 0.0980392) 0px 1px 2px inset; border-radius: 4px; }

.progress .bar { width: 0%; height: 18px; color: rgb(255, 255, 255); font-s=
ize: 12px; text-align: center; text-shadow: rgba(0, 0, 0, 0.247059) 0px -1p=
x 0px; background-color: rgb(14, 144, 210); background-image: -webkit-linea=
r-gradient(top, rgb(20, 155, 223), rgb(4, 128, 190)); background-repeat: re=
peat-x; box-shadow: rgba(0, 0, 0, 0.14902) 0px -1px 0px inset; box-sizing: =
border-box; transition: width 0.6s ease; }

.progress-striped .bar { background-color: rgb(98, 196, 98); background-ima=
ge: linear-gradient(-45deg, rgba(255, 255, 255, 0.14902) 25%, transparent 2=
5%, transparent 50%, rgba(255, 255, 255, 0.14902) 50%, rgba(255, 255, 255, =
0.14902) 75%, transparent 75%, transparent); background-size: 40px 40px; }

.progress.active .bar { animation: progress-bar-stripes 2s linear infinite;=
 }

.progress-danger .bar { background-color: rgb(221, 81, 76); background-imag=
e: -webkit-linear-gradient(top, rgb(238, 95, 91), rgb(196, 60, 53)); backgr=
ound-repeat: repeat-x; }

.progress-danger.progress-striped .bar { background-color: rgb(238, 95, 91)=
; background-image: linear-gradient(-45deg, rgba(255, 255, 255, 0.14902) 25=
%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.14902) 50%, rgba=
(255, 255, 255, 0.14902) 75%, transparent 75%, transparent); }

.progress-success .bar { background-color: rgb(94, 185, 94); background-ima=
ge: -webkit-linear-gradient(top, rgb(98, 196, 98), rgb(87, 169, 87)); backg=
round-repeat: repeat-x; }

.progress-success.progress-striped .bar { background-color: rgb(98, 196, 98=
); background-image: linear-gradient(-45deg, rgba(255, 255, 255, 0.14902) 2=
5%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.14902) 50%, rgb=
a(255, 255, 255, 0.14902) 75%, transparent 75%, transparent); }

.progress-info .bar { background-color: rgb(75, 177, 207); background-image=
: -webkit-linear-gradient(top, rgb(91, 192, 222), rgb(51, 155, 185)); backg=
round-repeat: repeat-x; }

.progress-info.progress-striped .bar { background-color: rgb(91, 192, 222);=
 background-image: linear-gradient(-45deg, rgba(255, 255, 255, 0.14902) 25%=
, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.14902) 50%, rgba(=
255, 255, 255, 0.14902) 75%, transparent 75%, transparent); }

.accordion { margin-bottom: 18px; }

.accordion-group { margin-bottom: 2px; border: 1px solid rgb(229, 229, 229)=
; border-radius: 4px; }

.accordion-heading { border-bottom: 0px; }

.accordion-heading .accordion-toggle { display: block; padding: 8px 15px; }

.accordion-inner { padding: 9px 15px; border-top: 1px solid rgb(229, 229, 2=
29); }

.carousel { position: relative; margin-bottom: 18px; line-height: 1; }

.carousel-inner { overflow: hidden; width: 100%; position: relative; }

.carousel .item { display: none; position: relative; transition: left 0.6s =
ease-in-out; }

.carousel .item > img { display: block; line-height: 1; }

.carousel .active, .carousel .next, .carousel .prev { display: block; }

.carousel .active { left: 0px; }

.carousel .next, .carousel .prev { position: absolute; top: 0px; width: 100=
%; }

.carousel .next { left: 100%; }

.carousel .prev { left: -100%; }

.carousel .next.left, .carousel .prev.right { left: 0px; }

.carousel .active.left { left: -100%; }

.carousel .active.right { left: 100%; }

.carousel-control { position: absolute; top: 40%; left: 15px; width: 40px; =
height: 40px; margin-top: -20px; font-size: 60px; font-weight: 100; line-he=
ight: 30px; color: rgb(255, 255, 255); text-align: center; background: rgb(=
34, 34, 34); border: 3px solid rgb(255, 255, 255); border-radius: 23px; opa=
city: 0.5; }

.carousel-control.right { left: auto; right: 15px; }

.carousel-control:hover { color: rgb(255, 255, 255); text-decoration: none;=
 opacity: 0.9; }

.carousel-caption { position: absolute; left: 0px; right: 0px; bottom: 0px;=
 padding: 10px 15px 5px; background: rgba(0, 0, 0, 0.74902); }

.carousel-caption h4, .carousel-caption p { color: rgb(255, 255, 255); }

.hero-unit { padding: 20px; margin-top: 10px; margin-bottom: 30px; backgrou=
nd-color: rgb(245, 245, 245); border-radius: 6px; }

.hero-unit h1 { margin-bottom: 0px; font-size: 50px; line-height: 1; letter=
-spacing: -1px; }

.hero-unit p { font-size: 18px; font-weight: 200; line-height: 27px; }

.pull-right { float: right; }

.pull-left { float: left; }

.hide { display: none; }

.show { display: block; }

.invisible { visibility: hidden; }
------MultipartBoundary--A65PNfRy6urSuiiQwfKin0MjqHJD8BhVvVl02Pjh2h----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://aosabook.org/en/500L/theme/css/bootstrap-responsive.css

@charset "utf-8";

.clearfix { }

.clearfix::before, .clearfix::after { display: table; content: ""; }

.clearfix::after { clear: both; }

.hidden { display: none; visibility: hidden; }

@media (max-width: 480px) {=20
  .nav-collapse { transform: translate3d(0px, 0px, 0px); }
  .page-header h1 small { display: block; line-height: 18px; }
  input[class*=3D"span"], select[class*=3D"span"], textarea[class*=3D"span"=
], .uneditable-input { display: block; width: 100%; min-height: 28px; box-s=
izing: border-box; }
  .input-prepend input[class*=3D"span"], .input-append input[class*=3D"span=
"] { width: auto; }
  input[type=3D"checkbox"], input[type=3D"radio"] { border: 1px solid rgb(2=
04, 204, 204); }
  .form-horizontal .control-group > label { float: none; width: auto; paddi=
ng-top: 0px; text-align: left; }
  .form-horizontal .controls { margin-left: 0px; }
  .form-horizontal .control-list { padding-top: 0px; }
  .form-horizontal .form-actions { padding-left: 10px; padding-right: 10px;=
 }
  .modal { position: absolute; top: 10px; left: 10px; right: 10px; width: a=
uto; margin: 0px; }
  .modal.fade.in { top: auto; }
  .modal-header .close { padding: 10px; margin: -10px; }
  .carousel-caption { position: static; }
}

@media (max-width: 767px) {=20
  .container { width: auto; padding: 0px 20px; }
  .row-fluid { width: 100%; }
  .row { margin-left: 0px; }
  .row > [class*=3D"span"], .row-fluid > [class*=3D"span"] { float: none; d=
isplay: block; width: auto; margin: 0px; }
}

@media (max-width: 979px) and (min-width: 768px) {=20
  .row { margin-left: -20px; }
  .row::before, .row::after { display: table; content: ""; }
  .row::after { clear: both; }
  [class*=3D"span"] { float: left; margin-left: 20px; }
  .span1 { width: 42px; }
  .span2 { width: 104px; }
  .span3 { width: 166px; }
  .span4 { width: 228px; }
  .span5 { width: 290px; }
  .span6 { width: 352px; }
  .span7 { width: 414px; }
  .span8 { width: 476px; }
  .span9 { width: 538px; }
  .span10 { width: 600px; }
  .span11 { width: 662px; }
  .span12, .container { width: 724px; }
  .offset1 { margin-left: 82px; }
  .offset2 { margin-left: 144px; }
  .offset3 { margin-left: 206px; }
  .offset4 { margin-left: 268px; }
  .offset5 { margin-left: 330px; }
  .offset6 { margin-left: 392px; }
  .offset7 { margin-left: 454px; }
  .offset8 { margin-left: 516px; }
  .offset9 { margin-left: 578px; }
  .offset10 { margin-left: 640px; }
  .offset11 { margin-left: 702px; }
  .row-fluid { width: 100%; }
  .row-fluid::before, .row-fluid::after { display: table; content: ""; }
  .row-fluid::after { clear: both; }
  .row-fluid > [class*=3D"span"] { float: left; margin-left: 2.76243%; }
  .row-fluid > [class*=3D"span"]:first-child { margin-left: 0px; }
  .row-fluid > .span1 { width: 5.8011%; }
  .row-fluid > .span2 { width: 14.3646%; }
  .row-fluid > .span3 { width: 22.9282%; }
  .row-fluid > .span4 { width: 31.4917%; }
  .row-fluid > .span5 { width: 40.0552%; }
  .row-fluid > .span6 { width: 48.6188%; }
  .row-fluid > .span7 { width: 57.1823%; }
  .row-fluid > .span8 { width: 65.7459%; }
  .row-fluid > .span9 { width: 74.3094%; }
  .row-fluid > .span10 { width: 82.8729%; }
  .row-fluid > .span11 { width: 91.4365%; }
  .row-fluid > .span12 { width: 100%; }
  input.span1, textarea.span1, .uneditable-input.span1 { width: 32px; }
  input.span2, textarea.span2, .uneditable-input.span2 { width: 94px; }
  input.span3, textarea.span3, .uneditable-input.span3 { width: 156px; }
  input.span4, textarea.span4, .uneditable-input.span4 { width: 218px; }
  input.span5, textarea.span5, .uneditable-input.span5 { width: 280px; }
  input.span6, textarea.span6, .uneditable-input.span6 { width: 342px; }
  input.span7, textarea.span7, .uneditable-input.span7 { width: 404px; }
  input.span8, textarea.span8, .uneditable-input.span8 { width: 466px; }
  input.span9, textarea.span9, .uneditable-input.span9 { width: 528px; }
  input.span10, textarea.span10, .uneditable-input.span10 { width: 590px; }
  input.span11, textarea.span11, .uneditable-input.span11 { width: 652px; }
  input.span12, textarea.span12, .uneditable-input.span12 { width: 714px; }
}

@media (max-width: 979px) {=20
  body { padding-top: 0px; }
  .navbar-fixed-top { position: static; margin-bottom: 18px; }
  .navbar-fixed-top .navbar-inner { padding: 5px; }
  .navbar .container { width: auto; padding: 0px; }
  .navbar .brand { padding-left: 10px; padding-right: 10px; margin: 0px 0px=
 0px -5px; }
  .navbar .nav-collapse { clear: left; }
  .navbar .nav { float: none; margin: 0px 0px 9px; }
  .navbar .nav > li { float: none; }
  .navbar .nav > li > a { margin-bottom: 2px; }
  .navbar .nav > .divider-vertical { display: none; }
  .navbar .nav .nav-header { color: rgb(153, 153, 153); text-shadow: none; =
}
  .navbar .nav > li > a, .navbar .dropdown-menu a { padding: 6px 15px; font=
-weight: bold; color: rgb(153, 153, 153); border-radius: 3px; }
  .navbar .dropdown-menu li + li a { margin-bottom: 2px; }
  .navbar .nav > li > a:hover, .navbar .dropdown-menu a:hover { background-=
color: rgb(34, 34, 34); }
  .navbar .dropdown-menu { position: static; top: auto; left: auto; float: =
none; display: block; max-width: none; margin: 0px 15px; padding: 0px; back=
ground-color: transparent; border: none; border-radius: 0px; box-shadow: no=
ne; }
  .navbar .dropdown-menu::before, .navbar .dropdown-menu::after { display: =
none; }
  .navbar .dropdown-menu .divider { display: none; }
  .navbar-form, .navbar-search { float: none; padding: 9px 15px; margin: 9p=
x 0px; border-top: 1px solid rgb(34, 34, 34); border-bottom: 1px solid rgb(=
34, 34, 34); box-shadow: rgba(255, 255, 255, 0.0980392) 0px 1px 0px inset, =
rgba(255, 255, 255, 0.0980392) 0px 1px 0px; }
  .navbar .nav.pull-right { float: none; margin-left: 0px; }
  .navbar-static .navbar-inner { padding-left: 10px; padding-right: 10px; }
  .btn-navbar { display: block; }
  .nav-collapse { overflow: hidden; height: 0px; }
}

@media (min-width: 980px) {=20
  .nav-collapse.collapse { height: auto !important; }
}

@media (min-width: 1200px) {=20
  .row { margin-left: -30px; }
  .row::before, .row::after { display: table; content: ""; }
  .row::after { clear: both; }
  [class*=3D"span"] { float: left; margin-left: 30px; }
  .span1 { width: 70px; }
  .span2 { width: 170px; }
  .span3 { width: 270px; }
  .span4 { width: 370px; }
  .span5 { width: 470px; }
  .span6 { width: 570px; }
  .span7 { width: 670px; }
  .span8 { width: 770px; }
  .span9 { width: 870px; }
  .span10 { width: 970px; }
  .span11 { width: 1070px; }
  .span12, .container { width: 1170px; }
  .offset1 { margin-left: 130px; }
  .offset2 { margin-left: 230px; }
  .offset3 { margin-left: 330px; }
  .offset4 { margin-left: 430px; }
  .offset5 { margin-left: 530px; }
  .offset6 { margin-left: 630px; }
  .offset7 { margin-left: 730px; }
  .offset8 { margin-left: 830px; }
  .offset9 { margin-left: 930px; }
  .offset10 { margin-left: 1030px; }
  .offset11 { margin-left: 1130px; }
  .row-fluid { width: 100%; }
  .row-fluid::before, .row-fluid::after { display: table; content: ""; }
  .row-fluid::after { clear: both; }
  .row-fluid > [class*=3D"span"] { float: left; margin-left: 2.5641%; }
  .row-fluid > [class*=3D"span"]:first-child { margin-left: 0px; }
  .row-fluid > .span1 { width: 5.98291%; }
  .row-fluid > .span2 { width: 14.5299%; }
  .row-fluid > .span3 { width: 23.0769%; }
  .row-fluid > .span4 { width: 31.6239%; }
  .row-fluid > .span5 { width: 40.1709%; }
  .row-fluid > .span6 { width: 48.7179%; }
  .row-fluid > .span7 { width: 57.265%; }
  .row-fluid > .span8 { width: 65.812%; }
  .row-fluid > .span9 { width: 74.359%; }
  .row-fluid > .span10 { width: 82.906%; }
  .row-fluid > .span11 { width: 91.453%; }
  .row-fluid > .span12 { width: 100%; }
  input.span1, textarea.span1, .uneditable-input.span1 { width: 60px; }
  input.span2, textarea.span2, .uneditable-input.span2 { width: 160px; }
  input.span3, textarea.span3, .uneditable-input.span3 { width: 260px; }
  input.span4, textarea.span4, .uneditable-input.span4 { width: 360px; }
  input.span5, textarea.span5, .uneditable-input.span5 { width: 460px; }
  input.span6, textarea.span6, .uneditable-input.span6 { width: 560px; }
  input.span7, textarea.span7, .uneditable-input.span7 { width: 660px; }
  input.span8, textarea.span8, .uneditable-input.span8 { width: 760px; }
  input.span9, textarea.span9, .uneditable-input.span9 { width: 860px; }
  input.span10, textarea.span10, .uneditable-input.span10 { width: 960px; }
  input.span11, textarea.span11, .uneditable-input.span11 { width: 1060px; =
}
  input.span12, textarea.span12, .uneditable-input.span12 { width: 1160px; =
}
  .thumbnails { margin-left: -30px; }
  .thumbnails > li { margin-left: 30px; }
}
------MultipartBoundary--A65PNfRy6urSuiiQwfKin0MjqHJD8BhVvVl02Pjh2h----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://aosabook.org/en/500L/theme/css/code.css

@charset "utf-8";

.sourceCode span.kw { color: rgb(0, 112, 32); font-weight: bold; }

.sourceCode span.dt { color: rgb(144, 32, 0); }

.sourceCode span.dv { color: rgb(64, 160, 112); }

.sourceCode span.bn { color: rgb(64, 160, 112); }

.sourceCode span.fl { color: rgb(64, 160, 112); }

.sourceCode span.ch { color: rgb(64, 112, 160); }

.sourceCode span.st { color: rgb(64, 112, 160); }

.sourceCode span.co { color: rgb(96, 160, 176); font-style: italic; }

.sourceCode span.al { color: red; font-weight: bold; }

.sourceCode span.fu { color: rgb(6, 40, 126); }

.sourceCode span.re { }

.sourceCode span.er { color: red; font-weight: bold; }
------MultipartBoundary--A65PNfRy6urSuiiQwfKin0MjqHJD8BhVvVl02Pjh2h----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://aosabook.org/en/500L/theme/css/500L.css

@charset "utf-8";

img.cover { display: block; margin-left: auto; margin-right: auto; padding-=
bottom: 2em; }

body.help { margin-left: auto; margin-right: auto; }

div.box { display: block; margin-left: auto; margin-right: auto; outline: g=
ray solid 1px; padding: 1px 10px; }

div.figure { display: block; margin-left: auto; margin-right: auto; padding=
: 1px 10px; text-align: center; }

div.footnotes { border-top: 1px solid gray; }

div.footnotes h2 { font-style: italic; }

div.sect h2 { font-style: italic; }

div.subsect h3 { font-style: italic; }

div.table { display: block; margin-left: auto; margin-right: auto; padding:=
 1px 10px; text-align: center; }

div.table table { font-size: small; margin-left: auto; margin-right: auto; =
outline: gray solid 1px; }

dl.faq dt { font-style: italic; }

dl.faq dd { margin-bottom: 10px; }

h1.chaptertitle { font-style: italic; font-size: xx-large; }

h1.chapterauthor { font-style: italic; font-size: x-large; }

p.boxtitle { text-align: center; font-style: italic; font-weight: bold; }

p.pullquote { font-style: italic; }

table.bibtable td { text-align: center; }

table.tasks th { vertical-align: top; }

td { vertical-align: top; }

td.center { vertical-align: top; text-align: center; }

th { text-align: left; }

th.center { text-align: center; }

.table-striped tbody tr:nth-child(2n+1) td, table.table-striped tbody tr:nt=
h-child(2n+1) th { background-color: rgb(211, 229, 240); }

.hero-unit { background-color: rgb(200, 217, 227); }

.center { text-align: center; }

* + table { border-style: solid; border-width: 1px; border-color: rgb(231, =
227, 231); }

* + table th, * + table td { border-style: dashed; border-width: 1px; borde=
r-color: rgb(231, 227, 231); padding-left: 3px; padding-right: 3px; }

* + table th { border-style: solid; font-weight: bold; background: url("/im=
ages/noise.png?1330434582") left top repeat scroll rgb(247, 243, 247); }

* + table th[align=3D"left"], * + table td[align=3D"left"] { text-align: le=
ft; }

* + table th[align=3D"right"], * + table td[align=3D"right"] { text-align: =
right; }

* + table th[align=3D"center"], * + table td[align=3D"center"] { text-align=
: center; }
------MultipartBoundary--A65PNfRy6urSuiiQwfKin0MjqHJD8BhVvVl02Pjh2h----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://aosabook.org/en/500L/web-server-images/http-cycle.png

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
------MultipartBoundary--A65PNfRy6urSuiiQwfKin0MjqHJD8BhVvVl02Pjh2h----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://aosabook.org/en/500L/web-server-images/http-request.png

iVBORw0KGgoAAAANSUhEUgAAAbQAAACnCAIAAAD2Yz6QAAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAALK1JREFU
eF7tnV+sXlWZxpk40UScq0ngWr026SUXXGi8qldqUky4MGBjvGgvcDQhM9pkBjQzIVCZGYFpCCOa
AmojPWUEbegURWlhSpRWsA30VANiTomYWA6IkzGd3znP8T0va++99vr2t7999ne+92TlZH1rr3/7
We/7rHf92Wv91eXLZ66Iv0BgARB47bU/Xbz4v5kXvfrqd1911XuaIrz55p8vXHhrUpwuXPjjm2/+
X1Oqq69+z1VXvXvSPH38973vXe9//3vLc/jFL96ojZx/93z+hozPRGjXgnbmTH0dfCkgc+WV7/rg
B9/70Y/+LZl87Wu/Wl39syLwyh/4wHuvvPKv8V+8+KfCRiEJCZMiAP9DH/qbxreDHC9cePrMmafy
bnX158TMuJJMqkWcPPnkAw/8MO+OHXuitXolEfL1rz69ePFUJttJc6vGB1LlT0H2VDDWwnLzzYda
3f79jwAmiFmGBw48mqS69daHibO0dIxoKohUrTlnIqjQxJFzBj2K5k1VSV6fn5achGpxPNXKU41d
u775sY/9Z4nbu/fbN954UGhQXGFCoikm/8mhMFVJfeY0DghURUiEQNNP9FKf/vShieITGTFAYstT
ffzj39q799Hy+F5ZEiW9olxoJC4mNxOJaXldt0HMqjBJtmjjIUWKloYBp8Tz5psf27Xr4JSZ1CYH
JWRvIvEjn0996qEv/N1RPOgAmvbZzy7lnbSRUiBfX409e5b0kxeUv/qaN9zwXT3VI/w4xeQR4fy8
444nDx782S23HMOv/4cPP08I7vTp316+fPnEiV8rHHfgwNN6ZM6HWEI9Vc5yRFMOGUc0VUlO1VbN
9SJ5R3H+XdZf5HRSW9WKR2RIt4EwC0OaQG1B66g5oCeaSf+/tv9Z3L/888mD33rx6A9W7rv3BTz8
xx36zgVCmhxPyRytQXfwkIOS3P3155TcHCGPLL3CI2WInyJUnBVhgT4hFeZFmgydKxKh4bU9oIZv
It+EC2tFMDFSS9SKjqQHcCUEjz/+4vLy75AefgpxiRpywKNqqygkEaAkmuWTkYOqnHkxsvcqlCTL
DU8iTPrpiyNztcQwIkVBalyaQ5CiqADoMSREbSG5x/PGG2+j1ThaZ2XlEg2ERz8V3uSqrUaIlN/a
xbeX+losRDyo1j/940+Qfv7/w98f5z/qhMTj5JHEZxSp6RFZkT+lCAokkDea/g+UcNPnM6c50I6A
aZLcoV1KksBilELDiRzzTFqSYTUOPK4XqXUb5Ij49thOCy46TUjCFCZSGD7dmrM1lYmUkWO/jduX
nKiHEGdBiK3v1S1CQo70eX3Vf5HzoY8xSaZj69Y0rakw/Tw5ItitSSaNoIFFCzmG0Awg6xqUqb8d
QKSMHOnnB3i7SYvAnjVyhMImFevC+Ak5jrOfmBS6LY8vSdawenbdPE3syVHD5H5dkeXY13Bjy5tt
zBUYWKSMHMfZuOsTF4dkOTKg7lfoLTeRo9ad8Iyznxiz0NbWTZKsKRHcjNpO5IiQsKqGZxaWYxE5
htAMIKADi9TIh9Xr07sb5Dhry1FL4SgY06ADNPS2L2JgSe5Gjg89uIzLE3cROTJJv+1bdMtfcGCR
MnIc55zJ+tLqBjmypjkj64PFHA3NRI5M+9aKwauv/uGee04eOfKCPT116hULwV/rLl16uzb83LnX
yCd5tOXi12MFBpZk2af5YfUXv3Bsx447+S9Buv76Q/zE7f7MkYxoFZFjoeWI9CAxSJIBzU+FZAQF
WWmSLRL6Rz7nHttyJFkx4TXkYARy1Aax/EQbzbcmQ7sP+TYlhHCFSMjM7dx53759R2luPSWhT1sO
tR9Wz85ytOUp7chrIkcEuxYEvVqCwIbW7T6E6NY+ArraR7fd9qNyfKaJyetQc8/10+RWTevJcdZz
jlqqbl2t9uSIwUi7fOTD9+6//dm77zrTnRzZZ1s+F4NiUCoNb3hJOERwTYJCO9U+kmpVdU8db79/
VmcElEKnKUL9QYfqaQOEZmoGECnbo5u3HEWO/o18iDWrSBB37bV3ex5R83VAY6I5x2/cd7abaSly
tK08TVA09RA33fQIr6YWp0vQy+on1CN7EycxRjv006tDktbrTgfQCpNU27QwYWE0L8mtS4tQFeYb
VLVz5/14lh5+maYkEDqDufZ96cd79jzW1L60ne0Az885GjmSP3muN8f95K/imhzbJHKr1SLHwlU8
o8KEHOGajKDI3lSD4RAy4xdJFf8VIvLtZok0tSsVk9SapZPwe6FAJK88aSriY7awz9F29jU1GILC
oEDChMfkhub/6ldOSqokWE05SKQgR/W6vZCjvS94ekLsTI633HJUn9ZQw4zliOZY9wkmQoN3J5BH
n/zEg3qKvxaNhBzZ11nbcBJOUaH+qvyifgJZquagyAi2PVLk6647aCHi1qRbFY16bPlp4yf86E5t
R26Wu9KWdPZJkg4CbEm8JOe7ebjpmmvu4sVpKeRZHmtBGlTNlyFH24id3+hq5CjZMJe3HLVe17KV
p3BBU0X6lqjqRlVQElrxY2eR4/Hj5xUnUTxLqIE5PyVMamYNyasj8SREYjoROebFqDMdyFZqtRyR
GOSJxhYv4Jfa49cja3hGDbWMoFk2I8f8nEmJ5eiVvC9yBA2bCmxarUZneFl6CJkYiWrpEUAJE3qO
KhraKwfm6ieahtVmOaqTNmPQc5kEqbbnbmJSH1minpAjwHqF0k9NUskvZ7SrTBj9iHmJ5sde+CW6
SX1gWJkdqr/pL36yQvs0Jigf9XtJZtouY5qp1azrwnLED2MaheHJ8BeZIyT6Km/LLMemHjXpXoSv
CZAZgz5axqSv0oqa1jpPG8Ql5ZqBqRwY2VnRnlsRAg36JEAiU5MwPIQoK6RNMflvsoLHJBJhMsqW
tPEIR2D1LQo74UKREglCfJIhCEJDA5UrCuC/otXKpUTKyDG/2lZCjqCUDKtNkTqj4ddJ+Aym9kWk
QrymLGUbIikcS0SpwIqfMkkSNxE5elExUU+MwYnI0XAzuUp6bs11CkzET+SF38xMyE5+TSBKeslW
wy+6Pekjcu4tU9+mklipjFgVvzhUfuUmdShce/CSnB9Wq4Ov9uJqwdom8y0oSWa8NdGCTGHmFITl
SK/ZaDnme9RacqzK0JTkiOj4+Sw/PFHOxmjIFmMfNSqtbh2+8aD4S3F4SnwJjUbulhXRkDZ7JDtU
8oEAEVN+sbZECrrEY+RbSIg+WqFI2UKb9N8ES7Cb6CQ/qyJl5JgfFhSSo6m3oNN7oWO9kGNmWO3R
wEJU35BIf0YZGIuhV5xtUWI5Ig+2PFgdBXewHL2mSDITsQFAJEpDdYmZsDXxo1AxoIb8UgTD3+Sf
OH547ttUumBF671Egqqe+Foc6icWMhJeOAaipUSOZtTb3ppC/oJ5bVhdaDlWxSNj2BaRY2GPITT9
+nJVNzpYjiZD6sSqo1rJhFoxyV/EZ52tCYHozEgzGVb7aMQkmkTQDCJ16ZIVSapKb7JtS7iyXKQg
RM1hCxnNyJSTo0TKyLFktdoP9zzCnhEwbQSFKec0aHjLMb9ajUYxOjOWtEGZ2R0ZTdOcYysU+R5C
jduBHEtmz8VWwhansjyryq+skpEWMulH3wi8hkH+ddRkJp/+kVfezNtVZRtJZr5YE0Sc3ZBhHw1x
aDvi0HASaRpUTWY7bzKz53NGjh6sXsixdQlPMqFym8jRT76YbDWRo5Vo9VcHmwzwyVNTbH7SrfrK
JcxIHM2y5UUKHkTnTWigSOt4PVFqs4JNRyaylcw55udMZDJUlw7UXyY6Y7MKtpWvMxqqpNYim8hR
s+yasTLV8jNW6B4/xZu1mqZ9jq3Tr1tIjrZ0wytYFyVGk5XAfxuMeyvBpI620LSPtaN/HSWxuaO+
yNEkOT/nSMNpHQZZ1dSwWrOcHDlSbNJ9joVmKdWg8u3D6olWq8dMjhpfmDOTMLEcq+QooTEL2khB
I0e/RtmZDjw5NokUqi5h4r+WYhEpP+eotRr1wE0dL8KkU+o0lswPCzSyk20CCLZhxVvK3gJSLyIy
FUq2hQWLUsiX9BYiR9WwiRwNDevtvGqZvgmu2k0bthyZh2ILyRGsbLXESFBDbA3z/UqOtxLMkNQw
SFOWahf/OvITTubE9MMgL8mTWo5Gjq1bebS3BmGmD7PxtYyA2jU06+nt4AmR4yyG1UXkONGwepzk
6KdmJASau7QBsjrPZGBi8iHhIBUeW5nxE0BKrlJwJfqfxCkhR5lIEiYcXGDTNBQKJ/JIpNDEjCZS
heQovTL9FAjJwNmTo5Gp+iGjLe8pAcdbjvlvq5lk0O4l2/Bhdoc2NmV0rJAceREta1jNqyGg1LSk
W910nYlcBceLrp4my9A225OQo010GPgiSk+OSVbEtMatkmPhgrWX5Fnv2C0cVmeG9plHfZIjoPvJ
KTVDEpLZna9VFy8chVuyfSv6hteY1/L08y+2DK0e1XKokqMlV3dtztaFRK/qfjV9Pj05dhApCm1d
3ZMcTLSVx4/Oyu0+02Fvp3uDPc+PHGon8zZvOTaJdeGgjOTQbsmwuoTNh4+jzWp+Ct72tFlleKp9
xDCsGZ7VXW4aevs4ifJqn3Kh1S9y1IC3gyQXEpkOu7XjLWZ08ET7sLrQchxePkpK9NKjJWzEJREp
Am304QVOdqKVgogABZGTXbVaAYcuCZcsllSs1nLsLFKF5GgiVW45dniX6ZP47YeTfj64IOQ4Pcgz
ysFbjrRjIdl1iDYAOWrpsv6w25JpqRlBvGjZTilS+fGjlzyJFO29sUFslOc5TkOO5WpmezUk53HA
Si9KN6UklzefrP6STeDledZuesuRYwhNL0KTz4T9hjaNPev+Vo29scw3VnLkahedBzGp5ViuCQk5
Fn7sMIAwzHURfGg0pCSXLMiUi0RCjrkLtsJyHExMGbAPKVI2rB7nIYYyCvRp/2DkONfTR4MJamtB
A0vyTC1HjbFylmP0qK0CMX2EgUWq8PPB6d+rWw4ix9aDJ7pZBJaKfY6acQ8joFsz1aZ6/PHnW3fs
TtlwSs4xtzYAmsWCDKfytJNjDKt7FJ2mrE6cODekSCFVOkJ5nOaSLmKc9bD6+4+8NEfkWHujIYG6
p1OXQeb/iFwSrS2blucrKy/7MRBrgHbhKoymm1f5z1YB3Sjp75Lkpy6V1F2p+bN2xFyyHHX7K9e9
wmicjoxft7/iLFyPCKFcStE9rhmaPvy95+z+9KrxeMU261ERI919WHhzpuJPKSuFyVtFiobsUaRs
QYarrOBHnN2SLE9ymapd38owggjMkNJl6npVJuDtGmWeEojjjlZlIr9gLNdMtIsbmmQ56mpW3c6q
G1l15TGyLrn3WsFP4vOU+CghcTIKduqZV/iw2ixH3TzMIeR2Hy+vpuuF8SiQF9ftek3O33CthP4G
YxWx/qnoxj3XST56SiDFgbCi6box3XJsdx37hCrUilaL+CuR9VNJ9CJ2D7ValrJoOwUWSmxztBVQ
hVYyKLU+Yg8Qnx7a5eM0qC65FnuK0URYdt5ta54WgcyVPyF2s7kERk75n39puWlMTfgGOVpb2pXT
aglJjOA2P9pid6L7BvNVt3ayfHzrSpjsDnKfm8/ExE6KrcvRLR9dkG3SmZck1Zn4knv8pgASIx6Z
MOk2ZxwKT4lIlS5on/pvUJGide2g0HKpao3pqUGR7aJzQeovqkctocsGxlyT+6WlHA35yiDrrXUj
jjTh85//r3//t/954r9/de7sBUm/JjcXx1Wbyd696dG6dhyVmiP8UjdC1rvJ06dP/+by5dV190c6
QaEqw7/qsPVgNP03R2T8NISOqkscksDaCKYiDuZVlyanTrTJkcoekUkmpj0iyVM/feb3r5996y2u
h6mfcFwjx6bXWxwx0pt6Nq++e9NTkyc8kILdXo9I4Wdq5vz5i1slUpKqRDTtJ7xpfoQYxzg3kWZF
YGwuj6J5cc/4NaL/i4Ys3XjjQ+uK8YMzZ86dPv2SaZdoqzYfL8ryc4kgTvpTdRgyXqOqQu/Vz5J7
1SrRK+KQj44W904XHMrxNK+lTYUqZzllKL6gHRWohEYiFpl3b4KlMJwc5JL4xlPCNhmEUjFchl/m
+tEVmhT3gujR8U0+ET3TftW0BJrQqIHz4pgRXC9Gykch0hC9gjJPYipOocSURKvNjTpIaCRMCyVS
c60PUflAwBBYI8dwgUAgEAgEAgkCQY7RNwQCgUAgUINAkGOIRSAQCAQCQY4xhxAIBAKBQBkCYTlG
nxkIBAKBQFiOZT1GzEwHAoFAIBCWY/SZgUAgEAiE5RiWYyDQHwL5DbPJPl+/c1tGGcmTD0jYk6uN
wPqYpNWxk7+6U5hyM98Lhz1YjsCG5Wgbp/PbngtBn2aXdeEHQJKJ6qcCJdu2m+J03uvfWmjnnPMN
mf8gpFAIwJBvY+wbmHd+hflN1A+Hrpoe2gctw39DZd/q+K/Q/Kc+nk2awhM+MnLhHSXeNJal1UdB
AkEv3stb6wzBibLSZ8iFSahzL7JRKELbNdoaOSITOvei3CGmlkRfmE2aQ3lZixDTq32tvYByimH9
557+Y75WlKwIcvDS3JqwMII+XbfI+vJdn6vrnAV9ha0zEZI87aQG+45T3/jnv+ksrFg+muqJAx86
CTFja846+YKPuDn2glMMOC5BB2GYUyAOj52pgZ8jFXQagpEjR43oGBtFNqcDODgcgRCdrMF/85NE
IRw8g1/n4siRD/lD+tuVswZ7r43PBxNpsJMgdDaEHRlS94X5xgEkEno7wML0QUdFKFyqolNe9JP/
Oi9E/3W+A8c98MhHqx4ho4MhvFMmGWcfPvtKVv06N6EaLl1NjszIZ2WvbEfa2Ivz2XVSVQuprSfI
S3XVBJywUGtHEKhHKCRKqIMY8Oi/jiohOUaQSZgyBHkcZxTpP0dF4NEBPHpUdRaHaOWH8Ux9eMc7
MrBaqebeqXp2XFBJuXQ2ducX5wPpQC14Jzn1J3/KVus5hmo4kSON0hp/0gi6RCjpAgcjlO1U0CY5
QgolAtQhzlZpToeqjjaJOpu8RqEVJYpEPjriUE7kONoXH7Ji4MAMycYhfuum2SwcHRUFqZ+bxdV9
GI9hOfbC0ZvkiPoNKYhR1kQIiByZSBKXTaO0nhzhgiBHNQRduCfHWZw7rVYTOeowxCDHXlhsRpkE
OU7EUVsWGbu+R3K0MZfIMfpF2pUB+JDkaN3SNP1cU9qwHHuhyyGG1VvGKNuoYCYopbpTWo6akLLZ
emXIXOo2gqrjqxg56iTKWVuOnZuSO7tb+TSZOemFKRYwk01y7OPw9I5yGclaEeiLHFlkqJJjZs7x
0qW3jxx5AXfu3GutlZzrCEaOuux7GHJsHVZ/8hMP7thxpwiR/9dccxc/cQ89uJyhyCDHXqh8kxxb
L/DcvfsQrl8FePXVP9xzz0l0b5psjx8/D3ecOvXKNJmMPC3DaiwamRssd7baDk0Rktn61jnHnTvv
kzbedtuPaH08eZwVuQomrUw4/6fBuRdpaaoAa+7eNp8dObLpxwpqbUpPjrs/cwQM9+x57KtfOZkX
gCDHnsmx1XJskvtpxB1NI9tpOHffvqOq2HXXHSzRwKa3mL4m0+DQmnZ9D9ChzmMx06VacmSXUm0F
sBYFLPYjxCR+zJuQMyXHmbZRYpuXLP1jyu370o/9OBf/N+47i1m3//Znm4w7dlkZOZZbjmS7c+f9
wEuJ+IMce6G/fCYTDKvHSY7XXns3FUN1cVigaG/eDt0G5Jg3N9AczA1UqFZ/2KOHZiYLMrXDavBU
x4PxSK/DT2gReoIoxaR4sNlxPDJuTeAlCc0hi6+D5UhCK44iZkqO7JMttxwB+SMfvlcvuw7R/UsP
vwzg8mvwi4lX2wSeHFm5ztOcWY7yyOFvJcfY5zg9e66Roz66aN3naMMrs9RMcNEQWAktuummR8yy
4Cnahd1BOE+JY0pFuCLTXXvLkSSE8FTaqPioBD/JFssFj9cWqZy0jmgk0f9y7RWlSu272bCJArfa
gN0irG+J37Ac8+YGxgsv8sUvHMssZdo+R/Y8N23lESDm+OmH1SCmbknOOiRPjmbUy/yskiOp1kyh
fUeFiQxVDSN4ZPnjUf6+jYhMTERCaZN+EXmgRByZe4HJgG9zjgIkbzmKqmQ2arSr3kivf/31h/iZ
sRzZba5BQOsmcCPHiSxHJCS+kOmHHMGRduICxrzequFhNAmiyTqst95h3oekIsc40ZPiIJ2mJBJT
6QlPLVz6wFM90n/yEc+KATX5RaCvpNdeonnzpER7pZzG9bXkqDyhbJt9MyLIKDAo2VsQDWRUiimz
3qtcgdc/2tkgx7xGYcKgsZkJez8hlSHHqqXmyVFoqCvSm6rRjRxNKtRjiemSOUdaXAKjNpU8yNJU
i5OJtX5Sn6Qz800vtE3AqF5Jh5SQo77Pa3Lkj3mopwAOc5nlyCP5mxyWY2E/Rw5+ztH785YjBmmQ
Yz/kqCt9mZAuIUcRnBdNrxtSCVEAcYxHTK9kHSD3KksyLXKUFSn9UTQoxpOj1CyppGmjxVQOrdrL
iyit1/Dq7KdqiAIb+fKT/PMKrBcxw1bzoSIIMf6kCsycI9/8FpobrWMusxzzCzIJASWNyEsRASdS
05y1NYd1KmovvW91QUZpNarwRCmETdKEua9PLTmSj5rVBEzl2qglI+EsSGpvdutqNR0PedaObfX6
efw9OZZbjglRBjlOz32tOawNqze+l1oX7syfpyEvmgrXWrZZhRJulIFAGx+JLo09E3E3SzOhofx0
VS052kpCRnv1CuJf/kTrTeRoFl+yYtukwJatqqceRYqqabtJFRhy1IXIJWOxVnK0b6s1aGjaytNE
jsmIW+8o4rPmAAG9rOBtakS1FBSZCIbManVLlmcrOaq5lUoCqT6ySspVORc5og46QqXVcjQSxGy0
FeT1Zr0/jz9nVZjlONFqdbnlCOeG5djKfa0ReiNHMZocgm4jJhjBT1eJg2yayYu7eAeVkFjbzqEO
5Fiivd5QTWjaa05SuifHjAKbNla5u5sCe3JEdTPqh13DhGNmq7CfkOpGjtb3CCg/62rvm+AmC7GW
pOAvuExkqs5GRGkr4yXkaB2Pml6LSOaqA44qOWpYbR+b57fyaJ6RuUV21WgRWdtr8LSuljDmnTU5
+q2srRQQEZoQ6IEc1cNL/uA+1ID/idFhg1wbVsuYkkrIXrMpJ/xamVGeUrMm+a6yD/FLtDepoSlk
ojZN5JhX4BJynEiBy8mxdUHGT0iJHJs+H2yyHIFIjU4b0dbWuN5yNAsOoGx6oZYc1UvhzNxWfFnr
6k1xSQem/G0+0eogqxy2lYCRFfmU7GCfiByZVfTLx7YwPSk55vu5bnOO2pDAkbfBelMiMBU5Stb9
QEZyiSzKchTxyTQwghMJEkK4H4aL0TS7JwNN6tGBHEu012ooU9dqW0iOeQXOk2MHBS4nR0Z5ecvR
j7lEjpl9jn5FOFmtthUqW0325GgGoNo0sdM9yDb5azOD2I9+qVoFES0ha8XRdggvYGoaky7t06ya
ikkI5MiA2izHkn2OGOl0Rfnll6qN7y3H1n2OHXb7Jx9BTUkQi5x8kxxbt/JoPCiRkqT63TZQnhTJ
AiE7ArW6TWRE1pKjKopMPuImZYt6iC5lVSlQi+NNnb+Nvo1GlZD4rdrrV7QnshzJv0mBExbwhq0N
/ayq5QosctRRLq3mRuucI8etS+gLNyo0MYu2QGV4R3LSSkzVfIAXJDU/Y/srky9kqgJmskdCBA/Z
IJMSZqSG2g9QOKzuwFmWxJPjlE2Z2a2lw8bDTYPABJZjq4iPMEKr9sryzehPsnfSZ9ikwEm3Yeyg
tN0UuNxyzOutzAobc+XnHEfYoLOr0pDkaGtrsyBHnS3C2t00vBBpQWCbk+PsdGngnPslR1vKFDnG
qTwDW459DQIylmPcITM9vwc5DsxyHYtj0qMXcyMxK/Jzjh3rOp/J2OerYbW28szu4AmG1boYbvpd
WRlynJ4aIocgx/lQZQZ9Pe5ztFskRY6t083zgdF0tWRBZrA5R11XOf30cZDjTBk8yHE6lRoqtSfH
KSeqtJvPL8hwpddQ7zHeclZWXvfkmN8EPs2CDJvAZ02OWnYPNyUCm+TYep7jeOV6AWp2+vRLvQyr
0eoqOcY1CesStMoHmoWr1X6jj65FrV5S2ESgh7/3HORoGw8YZe/d+yiOK1X5z2mPuvQVP/9146vC
YVX8usc1v9MoPo+ZkhaVfEEtR25T0p2IE92MyJ2xXAG6JVS8svKyJ0fdGoqSyGN6WHJrKIfmJpYj
983qNlpdS8t/u+fWbtC1S2h5yhklCsevn3J2Ay2ZJBfMEk0hTO3xlPz1027rtfjKh0cqhch02/rP
T/1XVa04u1R20rtY39mUq1rE12iXD/vgJu80Rahbp73Tbbc+FUTGza4QGf/VRvqvZjr/0jKlsGDS
+ap36mDVgzcpSDdWG2P2Qg2RyRU0kr6016qlLlzXndH8193q+AnX3ef4dY21aYviIL7+snbd75yI
kfYb+0Cfod3g3nQFdpIb+aM/Vhn0TSrqL4NX3fRqegufia70w1m4XoRMCJRyqs6630qOn6glSaSc
+m8KDNuSkMq0HuQxIcmu0FI2UVUFVndS64pqtAX9bLJc/LcT+KtZzS6kSSoyJdZKkbWaPTVBSi5P
l5TSIrSRmgkCNY/uSf/L36roQOewdHCMyul4+F91nArIIszDDz/5+9fPvvXW8yqI1qTDa3LEzzyt
ffTkkz85+8vTFBG81gsCm+c5dpCGRU5iVN4EQtIN+GhS4FtuOcp/0bGzm45Kk8+c+RWzYIz11t0f
sXFpby47tp6sEHzoUgO0O24/IbpM5AZ+hA5qVbopEM1sogBYYKKsiExujGeVippI7S0THk3KET4+
GSoHPJY5P9kGj1tePnXixNMrK2dXV1+8fBm3ORVrmWhl2Tt6KRqCEP73ooSRyTgRWCNHHIKS6cG8
ZEwjqaSVqFUzoQK+qyROSc+ZqbaK8JJtGep1JN842MEiVzWBuaFEN6b/SZ4yA6uOcNuhRjQqaSvL
aqmqQlZ3tCmOvaBmuPgZe9/GqYRRq3EisEGO46xc1CoQCAQCga1CIMgxdjwEAoFAIFCDQJBjiEUg
EAgEAkGOsTM2EAgEAoEyBMJyjD4zEAgEAoEtshz9AqtfX2ZpWOu22vPlXXUZmjXlpuXdrZqvjXID
gUBgGyOwYTlCUn57DUykTS38r+5cY6dr4SY7orEvj/g6erPz9trW4igi2fKyjdssXi0QCAQGQGCN
HDPfXdR+iaFPPnmk7zESpy3H5vjJp05Ehrx0zaE+F9VXHPLoo1Fi4uELU313dffXn+NzKPkVLXEq
SPnwcYg+jA0XCAQCgUAvCGySI0yXMBH05F3nk0jIFk6EgjfugM1el96tFFgyTiLpRSAik0AgEBAC
a+SoQ/2w2roRU2uqhBxncYyojNNo1EAgEAgE+kJgkxyhsFaa6xYhyLGv1op8AoFAYDAENsmRqb1u
3NeaSuTIIo9WcmZhOTKsDstxMKGJggKBRUBgOMuRwbtOlAlyXATBincMBOYdgU1yzJwA2Gob5iOw
qgMnamazlRy/+pWTn/zEg/xXnvu+9OOPfPheHBfVZ0oJy3HeBTHqHwiMDYEhLEdMRU+O+ds5IMEd
O+4UFS49/DL+a665a8+ex4wuaykyyHFsghX1CQTmHYGJ5xy/cd/ZWnqCyJosO5Gj7abMD6s9Od59
1xnIEUOy1XTVvst5b4yofyAQCIwHgQksR2gLIw62EmGJDfHwE8uO/zt33l/LYgk55u8GMnIUM5rj
Z4YiteYzHlijJoFAIDDvCJRajoxqRX+Q1/XXH8K/+zNHjBwhTX42TQsyjvaWY+Gw+qEHl8mTgjTh
yM8MObJJM8hx3mUx6h8IjAqBTXLku70M+8hCNPMNtpJf4fkJQSNHfSEzi2E1lqO/VG9UEEdlAoFA
YB4RKB1WY75BglX2TEizll65LxROtLsoZ0SOupE9XCAQCAQCvSBQSo4iQVuNwVT0lmN+zKs5R6pb
spWn24IMlmOQYy8CEZkEAoGAEFgjR86zgbbynw+Ks5gEhAfZe2iLyCLNkn2ORo6Fc47kWb5azQk9
QY4h04FAINAjAmvkqKnAPDmyNs1qjK0dswIjK7KEHG0pWZbjLMiRfY5Bjj2KRWQVCAQCm5ZjybfV
+29/FhOSMbXtaoQi85tsINCEHPNzjlimZKhxOqXgb9pZ6c3VIMcQ5UAgEOgXgVLLsXUbdiYCtFs+
59itoCDHfsUicgsEAoHtQ45c5xDNGQgEAoFAXwgMQY62lMxh3a37HDtbjhxs0RcokU8gEAgEAmvk
iM3VuiDTjbOUysixZCtPt4IYVnNhYTRnIBAIBAJ9IbBGjroUcKYngWspWZZjfrW6MzlysEVfoEQ+
gUAgEAgMQY6c5yhynJ3lyD7HIMeQ5kAgEOgRgSGG1d9/5CWRo65J0I2sfMrNnh54Ez8eVrTlCMG0
JIT/+Pn0MH+KjyzN/7jnmSDHHsUisgoEAoHNzwe5wE8XQ8NQMBfEhDkGkXHgDTN6uiRaITjdRi2a
g8jwiMJqiezUM6/wYbWRo+zHvOMeaoug27H5r1pRHIyJ8wPw8y8tr67+PJozEAgEAoG+EFgjx2PH
nmhlq/II8Bq8yf8vf/kH9x74+VM//eWrv3lR1b1w4WlMyLzjnhki8EVjbTSeYn4yd/m5z30Hz11f
f+xf73wKZvz962f7QiTyCQQCgUAABNbIEceaTJWMWMVmf4wcBCoPo9daRybYbtBfwBoIBAKBwDZA
YIMct8GbxCsEAoFAINAjAkGOcQRkIBAIBAI1CAQ5hlgEAoFAIBDkGEeFBwKBQCBQhkBYjtFnBgKB
QCAQlmNZj9HjnG5kFQgEAnOKwIblyE4dtg363TxNGxvZ36NNiGzrUXzb7iOPZaIvqcfstKey1iUv
5d+rKQnI4Fo3csZupzlVlaj2oiGwQY6DUdiuXVDwY7ikxD17lgi54Ybv8ujgwZ/JJXF4istXlQjK
So7ilG3iGex9qwXRZwQ/LpqaxfvOIwLvIMfTp38rt7z8O5z8KyuX3njjbXsEZ5048Wv76ZNUAy3E
klx2fyrFh4zQbzhk3s5Aq8YBOr2UHonxMb3nUVaizoHAQiHwDnIcITdtsyrR00COcS7vQulYvOyc
IhDkOCj9YjwGOc6pqkS1Fw2BNXJkCkxTY4PyxEIWFuS4aAoW7zu/CKyRIwdJBDkOw9VBjvOrKlHz
RUNgkxxZJh6GIBa5lCDHRVOweN/5RSDIcWiujjnH+dWWqPlCIRDD6qHJkX2OsVq9UDoWLzunCAQ5
Dk2OYTnOqapEtRcNgSDHLSDHkyefXDQ5i/cNBOYOgU1y5Bu7oXliIcvDcoyLEudOT6LCC4hALMgM
zdBBjguoZvHK84hADKuDHOMsv0AgEGg4zzE2gQ9JkGE5zqMREXVeQATCchySGNfKCnJcQDWLV55H
BNbIkW138fngMBypL2RiQWYeVSXqvGgIhOU4DCtulBLkuGgKFu87vwiMhRx37LgTNw1RTZ/DNKUX
pg1ynF9ViZovGgJBjoW01k+0IMdFU7B43/lFYCxzjmb3nTr1Cu7SpY3bBcRJ/CTw+PHzr776B89S
hBOIIzAsx/mVwqh5IDBCBNbIcWnp2JYvyIjarrvuoDzXXnv3uXOviQePHHlBgXK33fYjhROBaElC
wnfuvI9Ao1HlCbf2Y/tNl8vhw8/HgswI1SCqFAhUERiX5XjPPSchNegPOtu9+5AYUFyJeQjBiemg
Sx7JTxLsx337jprlqORcZUUccsMPXU7Hab2l1gVbsVodqhgIjB+BTXLc2sNuk0Gx/YT7jOmgKCjS
eFOkaeNuSyJChDp5BBn55L2RXNeMghzHrxJRw0BACGySIzc7d1X5HtI1keNNNz3iB8UYjyJHWZSy
LvXnc5BRCUuap4cq9pFFkGMoXiAwLwhskuMttxzrQ/075iFq0zoM/80qlOVo84yyHGHMhA1lLeJU
vKYpNb5W5JH8BTnOi2JEPQOBTXLcs2dpCxlE1AaRYRvKWmQa0SYNNbcIs2gFRqsrmI1KAmPaSk4y
yiaCJihH8hfkGCoXCMwLAiNakIHgxHcaL9tuHrhPC9AyJ43siGCcCJMqrZGgGNYmJYMc50Uio56B
wEgQGIvlaOTFZKJt4vGMRmDtdhzCk82PSpWMx0dCjrEJfCRyH9UIBFoRGIvl2CN5waFYlxqA1/Js
j2VNmlWQY6tERoRAYCQIbJLjtrkmQeswmqaclLxmHf/xx19kn+NI2j6qEQgEAhkENslRu6a3wZ++
Nawda2/522lBJiQyEAgExo/AWLbybDltDVOBIMfxq0TUMBAQApvkeMcd3Bcaf7NF4MSJX4flGLoX
CMwFAqNbrZ4tOW117lqQmQvJiEoGAguOQJDjoHwZluOC61u8/hwhsHlk2dYePDEoRW1dYcw53nwz
34PHTZiBQCAwdgQ2TwLfNlt5to762ksOcoyOIRCYFwSCHNsZrccYQY7zohhRz0BgjRyPHXuCVYKw
HHskwaasghxD5QKBeUFgLIfdDkBMYygiyHFeFCPqGQjEavWgnBnkGCoXCMwLAtvw4IlB2W7Cwvi2
Olar50U3op4LjkAMqyekt+miswk8yHHBVS5ef14QCHKcju0mTB3kOC+KEfUMBIIcJ6S36aKfP38x
LMfQukBgLhAIcpyO7SZOvRrkOBeKEZUMBDY/H4x9jhMTXZcEq/v3cxvi2D+cihoGAoHAO04C5/Nq
c9zU6n/Kz7FmPhw/e1MI5NGBA08rDoE4AnkkZ4+SDIl2+PDzSo5/efl3LOYSYnkqWyLIVbNSuBUq
D9HIRPkoQ+WzPt+38YKk4pEi49H/N954mzg4PPw0fxcObEyzeubMUyF2gUAgMH4E1sjx5Mkn+UJm
ax0Xw+7adbCvOmAFl2SVlEgqqiEC1SN+inxrHYRrHQAUDB9y6I5C8IhbV1YuvZMnV8cvE1HDQCAQ
AIE1csTxBeHevd9mOizvGBI+8MAPb7314Wo0wi0wEy1JWJtVEufAgUfJHEe2ekQqhVBteSwJj1S6
d0tLx5KQaX5SH4qzHKrFqWJLS8fpdZaXT+G5fHl5efn51dUXL1/GxZg6EAgE5gCBDXIMjQ0EAoFA
IBDwCAQ5zkEPFiIbCAQCwyMQ5BjkGAgEAoFADQJBjiEWgUAgEAgEOcZiSCAQCAQCZQiE5Rh9ZiAQ
CAQCYTmW9RjDT/1GiYFAIDA2BMJyjD4zEAgEAoEaBP4fBLa6wDiqOgEAAAAASUVORK5CYII=
------MultipartBoundary--A65PNfRy6urSuiiQwfKin0MjqHJD8BhVvVl02Pjh2h----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://aosabook.org/en/500L/web-server-images/http-response.png

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
------MultipartBoundary--A65PNfRy6urSuiiQwfKin0MjqHJD8BhVvVl02Pjh2h----
Content-Type: text/html
Content-ID: <frame-122-7bc3e1b7-0b9f-49d6-8da0-3db2dceed901@mhtml.blink>
Content-Transfer-Encoding: quoted-printable

<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=
=3DUTF-8"></head><body></body></html>
------MultipartBoundary--A65PNfRy6urSuiiQwfKin0MjqHJD8BhVvVl02Pjh2h------
